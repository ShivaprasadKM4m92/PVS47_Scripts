<?xml version="1.0" encoding="utf-8"?>
<HTTPSnapshot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="182">
  <HTTPTask id="887" hostname="10.100.22.24:8181" path="/signal/literatureAlert/literatureSearchAlertList?draw=6&amp;columns%5B0%5D%5Bdata%5D=selected&amp;columns%5B0%5D%5Bname%5D=&amp;columns%5B0%5D%5Bsearchable%5D=true&amp;columns%5B0%5D%5Borderable%5D=false&amp;columns%5B0%5D%5Bsearch%5D%5Bvalue%5D=&amp;columns%5B0%5D%5Bsearch%5D%5Bregex%5D=false&amp;columns%5B1%5D%5Bdata%5D=dropdown&amp;columns%5B1%5D%5Bname%5D=&amp;columns%5B1%5D%5Bsearchable%5D=true&amp;columns%5B1%5D%5Borderable%5D=false&amp;columns%5B1%5D%5Bsearch%5D%5Bvalue%5D=&amp;columns%5B1%5D%5Bsearch%5D%5Bregex%5D=false&amp;columns%5B2%5D%5Bdata%5D=priority&amp;columns%5B2%5D%5Bname%5D=&amp;columns%5B2%5D%5Bsearchable%5D=true&amp;columns%5B2%5D%5Borderable%5D=true&amp;columns%5B2%5D%5Bsearch%5D%5Bvalue%5D=&amp;columns%5B2%5D%5Bsearch%5D%5Bregex%5D=false&amp;columns%5B3%5D%5Bdata%5D=actions&amp;columns%5B3%5D%5Bname%5D=&amp;columns%5B3%5D%5Bsearchable%5D=true&amp;columns%5B3%5D%5Borderable%5D=true&amp;columns%5B3%5D%5Bsearch%5D%5Bvalue%5D=&amp;columns%5B3%5D%5Bsearch%5D%5Bregex%5D=false&amp;columns%5B4%5D%5Bdata%5D=articleId&amp;columns%5B4%5D%5Bname%5D=&amp;columns%5B4%5D%5Bsearchable%5D=true&amp;columns%5B4%5D%5Borderable%5D=true&amp;columns%5B4%5D%5Bsearch%5D%5Bvalue%5D=&amp;columns%5B4%5D%5Bsearch%5D%5Bregex%5D=false&amp;columns%5B5%5D%5Bdata%5D=alertTags&amp;columns%5B5%5D%5Bname%5D=&amp;columns%5B5%5D%5Bsearchable%5D=true&amp;columns%5B5%5D%5Borderable%5D=false&amp;columns%5B5%5D%5Bsearch%5D%5Bvalue%5D=&amp;columns%5B5%5D%5Bsearch%5D%5Bregex%5D=false&amp;columns%5B6%5D%5Bdata%5D=alertName&amp;columns%5B6%5D%5Bname%5D=&amp;columns%5B6%5D%5Bsearchable%5D=true&amp;columns%5B6%5D%5Borderable%5D=true&amp;columns%5B6%5D%5Bsearch%5D%5Bvalue%5D=&amp;columns%5B6%5D%5Bsearch%5D%5Bregex%5D=false&amp;columns%5B7%5D%5Bdata%5D=title&amp;columns%5B7%5D%5Bname%5D=&amp;columns%5B7%5D%5Bsearchable%5D=true&amp;columns%5B7%5D%5Borderable%5D=true&amp;columns%5B7%5D%5Bsearch%5D%5Bvalue%5D=&amp;columns%5B7%5D%5Bsearch%5D%5Bregex%5D=false&amp;columns%5B8%5D%5Bdata%5D=authors&amp;columns%5B8%5D%5Bname%5D=&amp;columns%5B8%5D%5Bsearchable%5D=true&amp;columns%5B8%5D%5Borderable%5D=true&amp;columns%5B8%5D%5Bsearch%5D%5Bvalue%5D=&amp;columns%5B8%5D%5Bsearch%5D%5Bregex%5D=false&amp;columns%5B9%5D%5Bdata%5D=publicationDate&amp;columns%5B9%5D%5Bname%5D=&amp;columns%5B9%5D%5Bsearchable%5D=true&amp;columns%5B9%5D%5Borderable%5D=true&amp;columns%5B9%5D%5Bsearch%5D%5Bvalue%5D=&amp;columns%5B9%5D%5Bsearch%5D%5Bregex%5D=false&amp;columns%5B10%5D%5Bdata%5D=signal&amp;columns%5B10%5D%5Bname%5D=&amp;columns%5B10%5D%5Bsearchable%5D=true&amp;columns%5B10%5D%5Borderable%5D=false&amp;columns%5B10%5D%5Bsearch%5D%5Bvalue%5D=&amp;columns%5B10%5D%5Bsearch%5D%5Bregex%5D=false&amp;columns%5B11%5D%5Bdata%5D=currentDisposition&amp;columns%5B11%5D%5Bname%5D=&amp;columns%5B11%5D%5Bsearchable%5D=true&amp;columns%5B11%5D%5Borderable%5D=true&amp;columns%5B11%5D%5Bsearch%5D%5Bvalue%5D=&amp;columns%5B11%5D%5Bsearch%5D%5Bregex%5D=false&amp;columns%5B12%5D%5Bdata%5D=assignedTo&amp;columns%5B12%5D%5Bname%5D=&amp;columns%5B12%5D%5Bsearchable%5D=true&amp;columns%5B12%5D%5Borderable%5D=true&amp;columns%5B12%5D%5Bsearch%5D%5Bvalue%5D=&amp;columns%5B12%5D%5Bsearch%5D%5Bregex%5D=false&amp;columns%5B13%5D%5Bdata%5D=productName&amp;columns%5B13%5D%5Bname%5D=&amp;columns%5B13%5D%5Bsearchable%5D=true&amp;columns%5B13%5D%5Borderable%5D=true&amp;columns%5B13%5D%5Bsearch%5D%5Bvalue%5D=&amp;columns%5B13%5D%5Bsearch%5D%5Bregex%5D=false&amp;columns%5B14%5D%5Bdata%5D=eventName&amp;columns%5B14%5D%5Bname%5D=&amp;columns%5B14%5D%5Bsearchable%5D=true&amp;columns%5B14%5D%5Borderable%5D=true&amp;columns%5B14%5D%5Bsearch%5D%5Bvalue%5D=&amp;columns%5B14%5D%5Bsearch%5D%5Bregex%5D=false&amp;columns%5B15%5D%5Bdata%5D=disposition&amp;columns%5B15%5D%5Bname%5D=&amp;columns%5B15%5D%5Bsearchable%5D=true&amp;columns%5B15%5D%5Borderable%5D=true&amp;columns%5B15%5D%5Bsearch%5D%5Bvalue%5D=&amp;columns%5B15%5D%5Bsearch%5D%5Bregex%5D=false&amp;order%5B0%5D%5Bcolumn%5D=8&amp;order%5B0%5D%5Bdir%5D=desc&amp;start=0&amp;length=50&amp;search%5Bvalue%5D=&amp;search%5Bregex%5D=false&amp;_=1590156206153" url="http://10.100.22.24:8181/signal/literatureAlert/literatureSearchAlertList?draw=6&amp;columns%5B0%5D%5Bdata%5D=selected&amp;columns%5B0%5D%5Bname%5D=&amp;columns%5B0%5D%5Bsearchable%5D=true&amp;columns%5B0%5D%5Borderable%5D=false&amp;columns%5B0%5D%5Bsearch%5D%5Bvalue%5D=&amp;columns%5B0%5D%5Bsearch%5D%5Bregex%5D=false&amp;columns%5B1%5D%5Bdata%5D=dropdown&amp;columns%5B1%5D%5Bname%5D=&amp;columns%5B1%5D%5Bsearchable%5D=true&amp;columns%5B1%5D%5Borderable%5D=false&amp;columns%5B1%5D%5Bsearch%5D%5Bvalue%5D=&amp;columns%5B1%5D%5Bsearch%5D%5Bregex%5D=false&amp;columns%5B2%5D%5Bdata%5D=priority&amp;columns%5B2%5D%5Bname%5D=&amp;columns%5B2%5D%5Bsearchable%5D=true&amp;columns%5B2%5D%5Borderable%5D=true&amp;columns%5B2%5D%5Bsearch%5D%5Bvalue%5D=&amp;columns%5B2%5D%5Bsearch%5D%5Bregex%5D=false&amp;columns%5B3%5D%5Bdata%5D=actions&amp;columns%5B3%5D%5Bname%5D=&amp;columns%5B3%5D%5Bsearchable%5D=true&amp;columns%5B3%5D%5Borderable%5D=true&amp;columns%5B3%5D%5Bsearch%5D%5Bvalue%5D=&amp;columns%5B3%5D%5Bsearch%5D%5Bregex%5D=false&amp;columns%5B4%5D%5Bdata%5D=articleId&amp;columns%5B4%5D%5Bname%5D=&amp;columns%5B4%5D%5Bsearchable%5D=true&amp;columns%5B4%5D%5Borderable%5D=true&amp;columns%5B4%5D%5Bsearch%5D%5Bvalue%5D=&amp;columns%5B4%5D%5Bsearch%5D%5Bregex%5D=false&amp;columns%5B5%5D%5Bdata%5D=alertTags&amp;columns%5B5%5D%5Bname%5D=&amp;columns%5B5%5D%5Bsearchable%5D=true&amp;columns%5B5%5D%5Borderable%5D=false&amp;columns%5B5%5D%5Bsearch%5D%5Bvalue%5D=&amp;columns%5B5%5D%5Bsearch%5D%5Bregex%5D=false&amp;columns%5B6%5D%5Bdata%5D=alertName&amp;columns%5B6%5D%5Bname%5D=&amp;columns%5B6%5D%5Bsearchable%5D=true&amp;columns%5B6%5D%5Borderable%5D=true&amp;columns%5B6%5D%5Bsearch%5D%5Bvalue%5D=&amp;columns%5B6%5D%5Bsearch%5D%5Bregex%5D=false&amp;columns%5B7%5D%5Bdata%5D=title&amp;columns%5B7%5D%5Bname%5D=&amp;columns%5B7%5D%5Bsearchable%5D=true&amp;columns%5B7%5D%5Borderable%5D=true&amp;columns%5B7%5D%5Bsearch%5D%5Bvalue%5D=&amp;columns%5B7%5D%5Bsearch%5D%5Bregex%5D=false&amp;columns%5B8%5D%5Bdata%5D=authors&amp;columns%5B8%5D%5Bname%5D=&amp;columns%5B8%5D%5Bsearchable%5D=true&amp;columns%5B8%5D%5Borderable%5D=true&amp;columns%5B8%5D%5Bsearch%5D%5Bvalue%5D=&amp;columns%5B8%5D%5Bsearch%5D%5Bregex%5D=false&amp;columns%5B9%5D%5Bdata%5D=publicationDate&amp;columns%5B9%5D%5Bname%5D=&amp;columns%5B9%5D%5Bsearchable%5D=true&amp;columns%5B9%5D%5Borderable%5D=true&amp;columns%5B9%5D%5Bsearch%5D%5Bvalue%5D=&amp;columns%5B9%5D%5Bsearch%5D%5Bregex%5D=false&amp;columns%5B10%5D%5Bdata%5D=signal&amp;columns%5B10%5D%5Bname%5D=&amp;columns%5B10%5D%5Bsearchable%5D=true&amp;columns%5B10%5D%5Borderable%5D=false&amp;columns%5B10%5D%5Bsearch%5D%5Bvalue%5D=&amp;columns%5B10%5D%5Bsearch%5D%5Bregex%5D=false&amp;columns%5B11%5D%5Bdata%5D=currentDisposition&amp;columns%5B11%5D%5Bname%5D=&amp;columns%5B11%5D%5Bsearchable%5D=true&amp;columns%5B11%5D%5Borderable%5D=true&amp;columns%5B11%5D%5Bsearch%5D%5Bvalue%5D=&amp;columns%5B11%5D%5Bsearch%5D%5Bregex%5D=false&amp;columns%5B12%5D%5Bdata%5D=assignedTo&amp;columns%5B12%5D%5Bname%5D=&amp;columns%5B12%5D%5Bsearchable%5D=true&amp;columns%5B12%5D%5Borderable%5D=true&amp;columns%5B12%5D%5Bsearch%5D%5Bvalue%5D=&amp;columns%5B12%5D%5Bsearch%5D%5Bregex%5D=false&amp;columns%5B13%5D%5Bdata%5D=productName&amp;columns%5B13%5D%5Bname%5D=&amp;columns%5B13%5D%5Bsearchable%5D=true&amp;columns%5B13%5D%5Borderable%5D=true&amp;columns%5B13%5D%5Bsearch%5D%5Bvalue%5D=&amp;columns%5B13%5D%5Bsearch%5D%5Bregex%5D=false&amp;columns%5B14%5D%5Bdata%5D=eventName&amp;columns%5B14%5D%5Bname%5D=&amp;columns%5B14%5D%5Bsearchable%5D=true&amp;columns%5B14%5D%5Borderable%5D=true&amp;columns%5B14%5D%5Bsearch%5D%5Bvalue%5D=&amp;columns%5B14%5D%5Bsearch%5D%5Bregex%5D=false&amp;columns%5B15%5D%5Bdata%5D=disposition&amp;columns%5B15%5D%5Bname%5D=&amp;columns%5B15%5D%5Bsearchable%5D=true&amp;columns%5B15%5D%5Borderable%5D=true&amp;columns%5B15%5D%5Bsearch%5D%5Bvalue%5D=&amp;columns%5B15%5D%5Bsearch%5D%5Bregex%5D=false&amp;order%5B0%5D%5Bcolumn%5D=8&amp;order%5B0%5D%5Bdir%5D=desc&amp;start=0&amp;length=50&amp;search%5Bvalue%5D=&amp;search%5Bregex%5D=false&amp;_=1590156206153" ip="10.100.22.24" port="8181" connectionId="34" origin="Primary" frame="1" startDateTime="2020-05-22T19:37:45.321+05:30" startTime="119678406" endTime="119681640">
    <QueryString>
      <HTTPDataSet>
        <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
          <ActualData>ZHJhdz02JmNvbHVtbnMlNUIwJTVEJTVCZGF0YSU1RD1zZWxlY3RlZCZjb2x1bW5zJTVCMCU1RCU1Qm5hbWUlNUQ9JmNvbHVtbnMlNUIwJTVEJTVCc2VhcmNoYWJsZSU1RD10cnVlJmNvbHVtbnMlNUIwJTVEJTVCb3JkZXJhYmxlJTVEPWZhbHNlJmNvbHVtbnMlNUIwJTVEJTVCc2VhcmNoJTVEJTVCdmFsdWUlNUQ9JmNvbHVtbnMlNUIwJTVEJTVCc2VhcmNoJTVEJTVCcmVnZXglNUQ9ZmFsc2UmY29sdW1ucyU1QjElNUQlNUJkYXRhJTVEPWRyb3Bkb3duJmNvbHVtbnMlNUIxJTVEJTVCbmFtZSU1RD0mY29sdW1ucyU1QjElNUQlNUJzZWFyY2hhYmxlJTVEPXRydWUmY29sdW1ucyU1QjElNUQlNUJvcmRlcmFibGUlNUQ9ZmFsc2UmY29sdW1ucyU1QjElNUQlNUJzZWFyY2glNUQlNUJ2YWx1ZSU1RD0mY29sdW1ucyU1QjElNUQlNUJzZWFyY2glNUQlNUJyZWdleCU1RD1mYWxzZSZjb2x1bW5zJTVCMiU1RCU1QmRhdGElNUQ9cHJpb3JpdHkmY29sdW1ucyU1QjIlNUQlNUJuYW1lJTVEPSZjb2x1bW5zJTVCMiU1RCU1QnNlYXJjaGFibGUlNUQ9dHJ1ZSZjb2x1bW5zJTVCMiU1RCU1Qm9yZGVyYWJsZSU1RD10cnVlJmNvbHVtbnMlNUIyJTVEJTVCc2VhcmNoJTVEJTVCdmFsdWUlNUQ9JmNvbHVtbnMlNUIyJTVEJTVCc2VhcmNoJTVEJTVCcmVnZXglNUQ9ZmFsc2UmY29sdW1ucyU1QjMlNUQlNUJkYXRhJTVEPWFjdGlvbnMmY29sdW1ucyU1QjMlNUQlNUJuYW1lJTVEPSZjb2x1bW5zJTVCMyU1RCU1QnNlYXJjaGFibGUlNUQ9dHJ1ZSZjb2x1bW5zJTVCMyU1RCU1Qm9yZGVyYWJsZSU1RD10cnVlJmNvbHVtbnMlNUIzJTVEJTVCc2VhcmNoJTVEJTVCdmFsdWUlNUQ9JmNvbHVtbnMlNUIzJTVEJTVCc2VhcmNoJTVEJTVCcmVnZXglNUQ9ZmFsc2UmY29sdW1ucyU1QjQlNUQlNUJkYXRhJTVEPWFydGljbGVJZCZjb2x1bW5zJTVCNCU1RCU1Qm5hbWUlNUQ9JmNvbHVtbnMlNUI0JTVEJTVCc2VhcmNoYWJsZSU1RD10cnVlJmNvbHVtbnMlNUI0JTVEJTVCb3JkZXJhYmxlJTVEPXRydWUmY29sdW1ucyU1QjQlNUQlNUJzZWFyY2glNUQlNUJ2YWx1ZSU1RD0mY29sdW1ucyU1QjQlNUQlNUJzZWFyY2glNUQlNUJyZWdleCU1RD1mYWxzZSZjb2x1bW5zJTVCNSU1RCU1QmRhdGElNUQ9YWxlcnRUYWdzJmNvbHVtbnMlNUI1JTVEJTVCbmFtZSU1RD0mY29sdW1ucyU1QjUlNUQlNUJzZWFyY2hhYmxlJTVEPXRydWUmY29sdW1ucyU1QjUlNUQlNUJvcmRlcmFibGUlNUQ9ZmFsc2UmY29sdW1ucyU1QjUlNUQlNUJzZWFyY2glNUQlNUJ2YWx1ZSU1RD0mY29sdW1ucyU1QjUlNUQlNUJzZWFyY2glNUQlNUJyZWdleCU1RD1mYWxzZSZjb2x1bW5zJTVCNiU1RCU1QmRhdGElNUQ9YWxlcnROYW1lJmNvbHVtbnMlNUI2JTVEJTVCbmFtZSU1RD0mY29sdW1ucyU1QjYlNUQlNUJzZWFyY2hhYmxlJTVEPXRydWUmY29sdW1ucyU1QjYlNUQlNUJvcmRlcmFibGUlNUQ9dHJ1ZSZjb2x1bW5zJTVCNiU1RCU1QnNlYXJjaCU1RCU1QnZhbHVlJTVEPSZjb2x1bW5zJTVCNiU1RCU1QnNlYXJjaCU1RCU1QnJlZ2V4JTVEPWZhbHNlJmNvbHVtbnMlNUI3JTVEJTVCZGF0YSU1RD10aXRsZSZjb2x1bW5zJTVCNyU1RCU1Qm5hbWUlNUQ9JmNvbHVtbnMlNUI3JTVEJTVCc2VhcmNoYWJsZSU1RD10cnVlJmNvbHVtbnMlNUI3JTVEJTVCb3JkZXJhYmxlJTVEPXRydWUmY29sdW1ucyU1QjclNUQlNUJzZWFyY2glNUQlNUJ2YWx1ZSU1RD0mY29sdW1ucyU1QjclNUQlNUJzZWFyY2glNUQlNUJyZWdleCU1RD1mYWxzZSZjb2x1bW5zJTVCOCU1RCU1QmRhdGElNUQ9YXV0aG9ycyZjb2x1bW5zJTVCOCU1RCU1Qm5hbWUlNUQ9JmNvbHVtbnMlNUI4JTVEJTVCc2VhcmNoYWJsZSU1RD10cnVlJmNvbHVtbnMlNUI4JTVEJTVCb3JkZXJhYmxlJTVEPXRydWUmY29sdW1ucyU1QjglNUQlNUJzZWFyY2glNUQlNUJ2YWx1ZSU1RD0mY29sdW1ucyU1QjglNUQlNUJzZWFyY2glNUQlNUJyZWdleCU1RD1mYWxzZSZjb2x1bW5zJTVCOSU1RCU1QmRhdGElNUQ9cHVibGljYXRpb25EYXRlJmNvbHVtbnMlNUI5JTVEJTVCbmFtZSU1RD0mY29sdW1ucyU1QjklNUQlNUJzZWFyY2hhYmxlJTVEPXRydWUmY29sdW1ucyU1QjklNUQlNUJvcmRlcmFibGUlNUQ9dHJ1ZSZjb2x1bW5zJTVCOSU1RCU1QnNlYXJjaCU1RCU1QnZhbHVlJTVEPSZjb2x1bW5zJTVCOSU1RCU1QnNlYXJjaCU1RCU1QnJlZ2V4JTVEPWZhbHNlJmNvbHVtbnMlNUIxMCU1RCU1QmRhdGElNUQ9c2lnbmFsJmNvbHVtbnMlNUIxMCU1RCU1Qm5hbWUlNUQ9JmNvbHVtbnMlNUIxMCU1RCU1QnNlYXJjaGFibGUlNUQ9dHJ1ZSZjb2x1bW5zJTVCMTAlNUQlNUJvcmRlcmFibGUlNUQ9ZmFsc2UmY29sdW1ucyU1QjEwJTVEJTVCc2VhcmNoJTVEJTVCdmFsdWUlNUQ9JmNvbHVtbnMlNUIxMCU1RCU1QnNlYXJjaCU1RCU1QnJlZ2V4JTVEPWZhbHNlJmNvbHVtbnMlNUIxMSU1RCU1QmRhdGElNUQ9Y3VycmVudERpc3Bvc2l0aW9uJmNvbHVtbnMlNUIxMSU1RCU1Qm5hbWUlNUQ9JmNvbHVtbnMlNUIxMSU1RCU1QnNlYXJjaGFibGUlNUQ9dHJ1ZSZjb2x1bW5zJTVCMTElNUQlNUJvcmRlcmFibGUlNUQ9dHJ1ZSZjb2x1bW5zJTVCMTElNUQlNUJzZWFyY2glNUQlNUJ2YWx1ZSU1RD0mY29sdW1ucyU1QjExJTVEJTVCc2VhcmNoJTVEJTVCcmVnZXglNUQ9ZmFsc2UmY29sdW1ucyU1QjEyJTVEJTVCZGF0YSU1RD1hc3NpZ25lZFRvJmNvbHVtbnMlNUIxMiU1RCU1Qm5hbWUlNUQ9JmNvbHVtbnMlNUIxMiU1RCU1QnNlYXJjaGFibGUlNUQ9dHJ1ZSZjb2x1bW5zJTVCMTIlNUQlNUJvcmRlcmFibGUlNUQ9dHJ1ZSZjb2x1bW5zJTVCMTIlNUQlNUJzZWFyY2glNUQlNUJ2YWx1ZSU1RD0mY29sdW1ucyU1QjEyJTVEJTVCc2VhcmNoJTVEJTVCcmVnZXglNUQ9ZmFsc2UmY29sdW1ucyU1QjEzJTVEJTVCZGF0YSU1RD1wcm9kdWN0TmFtZSZjb2x1bW5zJTVCMTMlNUQlNUJuYW1lJTVEPSZjb2x1bW5zJTVCMTMlNUQlNUJzZWFyY2hhYmxlJTVEPXRydWUmY29sdW1ucyU1QjEzJTVEJTVCb3JkZXJhYmxlJTVEPXRydWUmY29sdW1ucyU1QjEzJTVEJTVCc2VhcmNoJTVEJTVCdmFsdWUlNUQ9JmNvbHVtbnMlNUIxMyU1RCU1QnNlYXJjaCU1RCU1QnJlZ2V4JTVEPWZhbHNlJmNvbHVtbnMlNUIxNCU1RCU1QmRhdGElNUQ9ZXZlbnROYW1lJmNvbHVtbnMlNUIxNCU1RCU1Qm5hbWUlNUQ9JmNvbHVtbnMlNUIxNCU1RCU1QnNlYXJjaGFibGUlNUQ9dHJ1ZSZjb2x1bW5zJTVCMTQlNUQlNUJvcmRlcmFibGUlNUQ9dHJ1ZSZjb2x1bW5zJTVCMTQlNUQlNUJzZWFyY2glNUQlNUJ2YWx1ZSU1RD0mY29sdW1ucyU1QjE0JTVEJTVCc2VhcmNoJTVEJTVCcmVnZXglNUQ9ZmFsc2UmY29sdW1ucyU1QjE1JTVEJTVCZGF0YSU1RD1kaXNwb3NpdGlvbiZjb2x1bW5zJTVCMTUlNUQlNUJuYW1lJTVEPSZjb2x1bW5zJTVCMTUlNUQlNUJzZWFyY2hhYmxlJTVEPXRydWUmY29sdW1ucyU1QjE1JTVEJTVCb3JkZXJhYmxlJTVEPXRydWUmY29sdW1ucyU1QjE1JTVEJTVCc2VhcmNoJTVEJTVCdmFsdWUlNUQ9JmNvbHVtbnMlNUIxNSU1RCU1QnNlYXJjaCU1RCU1QnJlZ2V4JTVEPWZhbHNlJm9yZGVyJTVCMCU1RCU1QmNvbHVtbiU1RD04Jm9yZGVyJTVCMCU1RCU1QmRpciU1RD1kZXNjJnN0YXJ0PTAmbGVuZ3RoPTUwJnNlYXJjaCU1QnZhbHVlJTVEPSZzZWFyY2glNUJyZWdleCU1RD1mYWxzZSZfPTE1OTAxNTYyMDYxNTM=</ActualData>
        </HTTPData>
      </HTTPDataSet>
      <IsExternalData>false</IsExternalData>
    </QueryString>
    <HTTPSplittedQueryStrings>
      <HTTPHeaderEntity name="draw" index="0">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>Ng==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B0%5D%5Bdata%5D" index="1">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>c2VsZWN0ZWQ=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B0%5D%5Bname%5D" index="2">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData />
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B0%5D%5Bsearchable%5D" index="3">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>dHJ1ZQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B0%5D%5Borderable%5D" index="4">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>ZmFsc2U=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B0%5D%5Bsearch%5D%5Bvalue%5D" index="5">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData />
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B0%5D%5Bsearch%5D%5Bregex%5D" index="6">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>ZmFsc2U=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B1%5D%5Bdata%5D" index="7">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>ZHJvcGRvd24=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B1%5D%5Bname%5D" index="8">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData />
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B1%5D%5Bsearchable%5D" index="9">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>dHJ1ZQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B1%5D%5Borderable%5D" index="10">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>ZmFsc2U=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B1%5D%5Bsearch%5D%5Bvalue%5D" index="11">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData />
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B1%5D%5Bsearch%5D%5Bregex%5D" index="12">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>ZmFsc2U=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B2%5D%5Bdata%5D" index="13">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>cHJpb3JpdHk=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B2%5D%5Bname%5D" index="14">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData />
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B2%5D%5Bsearchable%5D" index="15">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>dHJ1ZQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B2%5D%5Borderable%5D" index="16">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>dHJ1ZQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B2%5D%5Bsearch%5D%5Bvalue%5D" index="17">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData />
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B2%5D%5Bsearch%5D%5Bregex%5D" index="18">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>ZmFsc2U=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B3%5D%5Bdata%5D" index="19">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>YWN0aW9ucw==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B3%5D%5Bname%5D" index="20">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData />
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B3%5D%5Bsearchable%5D" index="21">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>dHJ1ZQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B3%5D%5Borderable%5D" index="22">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>dHJ1ZQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B3%5D%5Bsearch%5D%5Bvalue%5D" index="23">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData />
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B3%5D%5Bsearch%5D%5Bregex%5D" index="24">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>ZmFsc2U=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B4%5D%5Bdata%5D" index="25">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>YXJ0aWNsZUlk</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B4%5D%5Bname%5D" index="26">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData />
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B4%5D%5Bsearchable%5D" index="27">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>dHJ1ZQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B4%5D%5Borderable%5D" index="28">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>dHJ1ZQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B4%5D%5Bsearch%5D%5Bvalue%5D" index="29">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData />
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B4%5D%5Bsearch%5D%5Bregex%5D" index="30">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>ZmFsc2U=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B5%5D%5Bdata%5D" index="31">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>YWxlcnRUYWdz</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B5%5D%5Bname%5D" index="32">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData />
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B5%5D%5Bsearchable%5D" index="33">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>dHJ1ZQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B5%5D%5Borderable%5D" index="34">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>ZmFsc2U=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B5%5D%5Bsearch%5D%5Bvalue%5D" index="35">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData />
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B5%5D%5Bsearch%5D%5Bregex%5D" index="36">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>ZmFsc2U=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B6%5D%5Bdata%5D" index="37">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>YWxlcnROYW1l</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B6%5D%5Bname%5D" index="38">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData />
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B6%5D%5Bsearchable%5D" index="39">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>dHJ1ZQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B6%5D%5Borderable%5D" index="40">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>dHJ1ZQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B6%5D%5Bsearch%5D%5Bvalue%5D" index="41">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData />
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B6%5D%5Bsearch%5D%5Bregex%5D" index="42">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>ZmFsc2U=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B7%5D%5Bdata%5D" index="43">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>dGl0bGU=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B7%5D%5Bname%5D" index="44">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData />
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B7%5D%5Bsearchable%5D" index="45">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>dHJ1ZQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B7%5D%5Borderable%5D" index="46">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>dHJ1ZQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B7%5D%5Bsearch%5D%5Bvalue%5D" index="47">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData />
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B7%5D%5Bsearch%5D%5Bregex%5D" index="48">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>ZmFsc2U=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B8%5D%5Bdata%5D" index="49">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>YXV0aG9ycw==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B8%5D%5Bname%5D" index="50">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData />
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B8%5D%5Bsearchable%5D" index="51">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>dHJ1ZQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B8%5D%5Borderable%5D" index="52">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>dHJ1ZQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B8%5D%5Bsearch%5D%5Bvalue%5D" index="53">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData />
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B8%5D%5Bsearch%5D%5Bregex%5D" index="54">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>ZmFsc2U=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B9%5D%5Bdata%5D" index="55">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>cHVibGljYXRpb25EYXRl</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B9%5D%5Bname%5D" index="56">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData />
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B9%5D%5Bsearchable%5D" index="57">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>dHJ1ZQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B9%5D%5Borderable%5D" index="58">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>dHJ1ZQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B9%5D%5Bsearch%5D%5Bvalue%5D" index="59">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData />
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B9%5D%5Bsearch%5D%5Bregex%5D" index="60">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>ZmFsc2U=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B10%5D%5Bdata%5D" index="61">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>c2lnbmFs</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B10%5D%5Bname%5D" index="62">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData />
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B10%5D%5Bsearchable%5D" index="63">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>dHJ1ZQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B10%5D%5Borderable%5D" index="64">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>ZmFsc2U=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B10%5D%5Bsearch%5D%5Bvalue%5D" index="65">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData />
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B10%5D%5Bsearch%5D%5Bregex%5D" index="66">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>ZmFsc2U=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B11%5D%5Bdata%5D" index="67">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>Y3VycmVudERpc3Bvc2l0aW9u</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B11%5D%5Bname%5D" index="68">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData />
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B11%5D%5Bsearchable%5D" index="69">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>dHJ1ZQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B11%5D%5Borderable%5D" index="70">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>dHJ1ZQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B11%5D%5Bsearch%5D%5Bvalue%5D" index="71">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData />
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B11%5D%5Bsearch%5D%5Bregex%5D" index="72">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>ZmFsc2U=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B12%5D%5Bdata%5D" index="73">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>YXNzaWduZWRUbw==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B12%5D%5Bname%5D" index="74">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData />
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B12%5D%5Bsearchable%5D" index="75">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>dHJ1ZQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B12%5D%5Borderable%5D" index="76">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>dHJ1ZQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B12%5D%5Bsearch%5D%5Bvalue%5D" index="77">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData />
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B12%5D%5Bsearch%5D%5Bregex%5D" index="78">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>ZmFsc2U=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B13%5D%5Bdata%5D" index="79">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>cHJvZHVjdE5hbWU=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B13%5D%5Bname%5D" index="80">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData />
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B13%5D%5Bsearchable%5D" index="81">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>dHJ1ZQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B13%5D%5Borderable%5D" index="82">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>dHJ1ZQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B13%5D%5Bsearch%5D%5Bvalue%5D" index="83">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData />
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B13%5D%5Bsearch%5D%5Bregex%5D" index="84">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>ZmFsc2U=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B14%5D%5Bdata%5D" index="85">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>ZXZlbnROYW1l</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B14%5D%5Bname%5D" index="86">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData />
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B14%5D%5Bsearchable%5D" index="87">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>dHJ1ZQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B14%5D%5Borderable%5D" index="88">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>dHJ1ZQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B14%5D%5Bsearch%5D%5Bvalue%5D" index="89">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData />
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B14%5D%5Bsearch%5D%5Bregex%5D" index="90">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>ZmFsc2U=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B15%5D%5Bdata%5D" index="91">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>ZGlzcG9zaXRpb24=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B15%5D%5Bname%5D" index="92">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData />
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B15%5D%5Bsearchable%5D" index="93">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>dHJ1ZQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B15%5D%5Borderable%5D" index="94">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>dHJ1ZQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B15%5D%5Bsearch%5D%5Bvalue%5D" index="95">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData />
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="columns%5B15%5D%5Bsearch%5D%5Bregex%5D" index="96">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>ZmFsc2U=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="order%5B0%5D%5Bcolumn%5D" index="97">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>OA==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="order%5B0%5D%5Bdir%5D" index="98">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>ZGVzYw==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="start" index="99">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>MA==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="length" index="100">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>NTA=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="search%5Bvalue%5D" index="101">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData />
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="search%5Bregex%5D" index="102">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>ZmFsc2U=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="_" index="103">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>MTU5MDE1NjIwNjE1Mw==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
    </HTTPSplittedQueryStrings>
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="Host" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MTAuMTAwLjIyLjI0OjgxODE=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXBwbGljYXRpb24vanNvbiwgdGV4dC9qYXZhc2NyaXB0LCAqLyo7IHE9MC4wMQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzgxLjAuNDA0NC4xMzggU2FmYXJpLzUzNy4zNg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Requested-With" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>WE1MSHR0cFJlcXVlc3Q=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Referer" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cDovLzEwLjEwMC4yMi4yNDo4MTgxL3NpZ25hbC9saXRlcmF0dXJlQWxlcnQvZGV0YWlscw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZW4tVVMsZW47cT0wLjk=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cookie" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>U0VTU0lPTj00OGMyNjliZC01NTcyLTRhN2UtYmFiOS0wZmNmY2NiZDM0NjU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIC9zaWduYWwvbGl0ZXJhdHVyZUFsZXJ0L2xpdGVyYXR1cmVTZWFyY2hBbGVydExpc3Q/ZHJhdz02JmNvbHVtbnMlNUIwJTVEJTVCZGF0YSU1RD1zZWxlY3RlZCZjb2x1bW5zJTVCMCU1RCU1Qm5hbWUlNUQ9JmNvbHVtbnMlNUIwJTVEJTVCc2VhcmNoYWJsZSU1RD10cnVlJmNvbHVtbnMlNUIwJTVEJTVCb3JkZXJhYmxlJTVEPWZhbHNlJmNvbHVtbnMlNUIwJTVEJTVCc2VhcmNoJTVEJTVCdmFsdWUlNUQ9JmNvbHVtbnMlNUIwJTVEJTVCc2VhcmNoJTVEJTVCcmVnZXglNUQ9ZmFsc2UmY29sdW1ucyU1QjElNUQlNUJkYXRhJTVEPWRyb3Bkb3duJmNvbHVtbnMlNUIxJTVEJTVCbmFtZSU1RD0mY29sdW1ucyU1QjElNUQlNUJzZWFyY2hhYmxlJTVEPXRydWUmY29sdW1ucyU1QjElNUQlNUJvcmRlcmFibGUlNUQ9ZmFsc2UmY29sdW1ucyU1QjElNUQlNUJzZWFyY2glNUQlNUJ2YWx1ZSU1RD0mY29sdW1ucyU1QjElNUQlNUJzZWFyY2glNUQlNUJyZWdleCU1RD1mYWxzZSZjb2x1bW5zJTVCMiU1RCU1QmRhdGElNUQ9cHJpb3JpdHkmY29sdW1ucyU1QjIlNUQlNUJuYW1lJTVEPSZjb2x1bW5zJTVCMiU1RCU1QnNlYXJjaGFibGUlNUQ9dHJ1ZSZjb2x1bW5zJTVCMiU1RCU1Qm9yZGVyYWJsZSU1RD10cnVlJmNvbHVtbnMlNUIyJTVEJTVCc2VhcmNoJTVEJTVCdmFsdWUlNUQ9JmNvbHVtbnMlNUIyJTVEJTVCc2VhcmNoJTVEJTVCcmVnZXglNUQ9ZmFsc2UmY29sdW1ucyU1QjMlNUQlNUJkYXRhJTVEPWFjdGlvbnMmY29sdW1ucyU1QjMlNUQlNUJuYW1lJTVEPSZjb2x1bW5zJTVCMyU1RCU1QnNlYXJjaGFibGUlNUQ9dHJ1ZSZjb2x1bW5zJTVCMyU1RCU1Qm9yZGVyYWJsZSU1RD10cnVlJmNvbHVtbnMlNUIzJTVEJTVCc2VhcmNoJTVEJTVCdmFsdWUlNUQ9JmNvbHVtbnMlNUIzJTVEJTVCc2VhcmNoJTVEJTVCcmVnZXglNUQ9ZmFsc2UmY29sdW1ucyU1QjQlNUQlNUJkYXRhJTVEPWFydGljbGVJZCZjb2x1bW5zJTVCNCU1RCU1Qm5hbWUlNUQ9JmNvbHVtbnMlNUI0JTVEJTVCc2VhcmNoYWJsZSU1RD10cnVlJmNvbHVtbnMlNUI0JTVEJTVCb3JkZXJhYmxlJTVEPXRydWUmY29sdW1ucyU1QjQlNUQlNUJzZWFyY2glNUQlNUJ2YWx1ZSU1RD0mY29sdW1ucyU1QjQlNUQlNUJzZWFyY2glNUQlNUJyZWdleCU1RD1mYWxzZSZjb2x1bW5zJTVCNSU1RCU1QmRhdGElNUQ9YWxlcnRUYWdzJmNvbHVtbnMlNUI1JTVEJTVCbmFtZSU1RD0mY29sdW1ucyU1QjUlNUQlNUJzZWFyY2hhYmxlJTVEPXRydWUmY29sdW1ucyU1QjUlNUQlNUJvcmRlcmFibGUlNUQ9ZmFsc2UmY29sdW1ucyU1QjUlNUQlNUJzZWFyY2glNUQlNUJ2YWx1ZSU1RD0mY29sdW1ucyU1QjUlNUQlNUJzZWFyY2glNUQlNUJyZWdleCU1RD1mYWxzZSZjb2x1bW5zJTVCNiU1RCU1QmRhdGElNUQ9YWxlcnROYW1lJmNvbHVtbnMlNUI2JTVEJTVCbmFtZSU1RD0mY29sdW1ucyU1QjYlNUQlNUJzZWFyY2hhYmxlJTVEPXRydWUmY29sdW1ucyU1QjYlNUQlNUJvcmRlcmFibGUlNUQ9dHJ1ZSZjb2x1bW5zJTVCNiU1RCU1QnNlYXJjaCU1RCU1QnZhbHVlJTVEPSZjb2x1bW5zJTVCNiU1RCU1QnNlYXJjaCU1RCU1QnJlZ2V4JTVEPWZhbHNlJmNvbHVtbnMlNUI3JTVEJTVCZGF0YSU1RD10aXRsZSZjb2x1bW5zJTVCNyU1RCU1Qm5hbWUlNUQ9JmNvbHVtbnMlNUI3JTVEJTVCc2VhcmNoYWJsZSU1RD10cnVlJmNvbHVtbnMlNUI3JTVEJTVCb3JkZXJhYmxlJTVEPXRydWUmY29sdW1ucyU1QjclNUQlNUJzZWFyY2glNUQlNUJ2YWx1ZSU1RD0mY29sdW1ucyU1QjclNUQlNUJzZWFyY2glNUQlNUJyZWdleCU1RD1mYWxzZSZjb2x1bW5zJTVCOCU1RCU1QmRhdGElNUQ9YXV0aG9ycyZjb2x1bW5zJTVCOCU1RCU1Qm5hbWUlNUQ9JmNvbHVtbnMlNUI4JTVEJTVCc2VhcmNoYWJsZSU1RD10cnVlJmNvbHVtbnMlNUI4JTVEJTVCb3JkZXJhYmxlJTVEPXRydWUmY29sdW1ucyU1QjglNUQlNUJzZWFyY2glNUQlNUJ2YWx1ZSU1RD0mY29sdW1ucyU1QjglNUQlNUJzZWFyY2glNUQlNUJyZWdleCU1RD1mYWxzZSZjb2x1bW5zJTVCOSU1RCU1QmRhdGElNUQ9cHVibGljYXRpb25EYXRlJmNvbHVtbnMlNUI5JTVEJTVCbmFtZSU1RD0mY29sdW1ucyU1QjklNUQlNUJzZWFyY2hhYmxlJTVEPXRydWUmY29sdW1ucyU1QjklNUQlNUJvcmRlcmFibGUlNUQ9dHJ1ZSZjb2x1bW5zJTVCOSU1RCU1QnNlYXJjaCU1RCU1QnZhbHVlJTVEPSZjb2x1bW5zJTVCOSU1RCU1QnNlYXJjaCU1RCU1QnJlZ2V4JTVEPWZhbHNlJmNvbHVtbnMlNUIxMCU1RCU1QmRhdGElNUQ9c2lnbmFsJmNvbHVtbnMlNUIxMCU1RCU1Qm5hbWUlNUQ9JmNvbHVtbnMlNUIxMCU1RCU1QnNlYXJjaGFibGUlNUQ9dHJ1ZSZjb2x1bW5zJTVCMTAlNUQlNUJvcmRlcmFibGUlNUQ9ZmFsc2UmY29sdW1ucyU1QjEwJTVEJTVCc2VhcmNoJTVEJTVCdmFsdWUlNUQ9JmNvbHVtbnMlNUIxMCU1RCU1QnNlYXJjaCU1RCU1QnJlZ2V4JTVEPWZhbHNlJmNvbHVtbnMlNUIxMSU1RCU1QmRhdGElNUQ9Y3VycmVudERpc3Bvc2l0aW9uJmNvbHVtbnMlNUIxMSU1RCU1Qm5hbWUlNUQ9JmNvbHVtbnMlNUIxMSU1RCU1QnNlYXJjaGFibGUlNUQ9dHJ1ZSZjb2x1bW5zJTVCMTElNUQlNUJvcmRlcmFibGUlNUQ9dHJ1ZSZjb2x1bW5zJTVCMTElNUQlNUJzZWFyY2glNUQlNUJ2YWx1ZSU1RD0mY29sdW1ucyU1QjExJTVEJTVCc2VhcmNoJTVEJTVCcmVnZXglNUQ9ZmFsc2UmY29sdW1ucyU1QjEyJTVEJTVCZGF0YSU1RD1hc3NpZ25lZFRvJmNvbHVtbnMlNUIxMiU1RCU1Qm5hbWUlNUQ9JmNvbHVtbnMlNUIxMiU1RCU1QnNlYXJjaGFibGUlNUQ9dHJ1ZSZjb2x1bW5zJTVCMTIlNUQlNUJvcmRlcmFibGUlNUQ9dHJ1ZSZjb2x1bW5zJTVCMTIlNUQlNUJzZWFyY2glNUQlNUJ2YWx1ZSU1RD0mY29sdW1ucyU1QjEyJTVEJTVCc2VhcmNoJTVEJTVCcmVnZXglNUQ9ZmFsc2UmY29sdW1ucyU1QjEzJTVEJTVCZGF0YSU1RD1wcm9kdWN0TmFtZSZjb2x1bW5zJTVCMTMlNUQlNUJuYW1lJTVEPSZjb2x1bW5zJTVCMTMlNUQlNUJzZWFyY2hhYmxlJTVEPXRydWUmY29sdW1ucyU1QjEzJTVEJTVCb3JkZXJhYmxlJTVEPXRydWUmY29sdW1ucyU1QjEzJTVEJTVCc2VhcmNoJTVEJTVCdmFsdWUlNUQ9JmNvbHVtbnMlNUIxMyU1RCU1QnNlYXJjaCU1RCU1QnJlZ2V4JTVEPWZhbHNlJmNvbHVtbnMlNUIxNCU1RCU1QmRhdGElNUQ9ZXZlbnROYW1lJmNvbHVtbnMlNUIxNCU1RCU1Qm5hbWUlNUQ9JmNvbHVtbnMlNUIxNCU1RCU1QnNlYXJjaGFibGUlNUQ9dHJ1ZSZjb2x1bW5zJTVCMTQlNUQlNUJvcmRlcmFibGUlNUQ9dHJ1ZSZjb2x1bW5zJTVCMTQlNUQlNUJzZWFyY2glNUQlNUJ2YWx1ZSU1RD0mY29sdW1ucyU1QjE0JTVEJTVCc2VhcmNoJTVEJTVCcmVnZXglNUQ9ZmFsc2UmY29sdW1ucyU1QjE1JTVEJTVCZGF0YSU1RD1kaXNwb3NpdGlvbiZjb2x1bW5zJTVCMTUlNUQlNUJuYW1lJTVEPSZjb2x1bW5zJTVCMTUlNUQlNUJzZWFyY2hhYmxlJTVEPXRydWUmY29sdW1ucyU1QjE1JTVEJTVCb3JkZXJhYmxlJTVEPXRydWUmY29sdW1ucyU1QjE1JTVEJTVCc2VhcmNoJTVEJTVCdmFsdWUlNUQ9JmNvbHVtbnMlNUIxNSU1RCU1QnNlYXJjaCU1RCU1QnJlZ2V4JTVEPWZhbHNlJm9yZGVyJTVCMCU1RCU1QmNvbHVtbiU1RD04Jm9yZGVyJTVCMCU1RCU1QmRpciU1RD1kZXNjJnN0YXJ0PTAmbGVuZ3RoPTUwJnNlYXJjaCU1QnZhbHVlJTVEPSZzZWFyY2glNUJyZWdleCU1RD1mYWxzZSZfPTE1OTAxNTYyMDYxNTMgSFRUUC8xLjENCkhvc3Q6IDEwLjEwMC4yMi4yNDo4MTgxDQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQpBY2NlcHQ6IGFwcGxpY2F0aW9uL2pzb24sIHRleHQvamF2YXNjcmlwdCwgKi8qOyBxPTAuMDENClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS84MS4wLjQwNDQuMTM4IFNhZmFyaS81MzcuMzYNClgtUmVxdWVzdGVkLVdpdGg6IFhNTEh0dHBSZXF1ZXN0DQpSZWZlcmVyOiBodHRwOi8vMTAuMTAwLjIyLjI0OjgxODEvc2lnbmFsL2xpdGVyYXR1cmVBbGVydC9kZXRhaWxzDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVMsZW47cT0wLjkNCkNvb2tpZTogU0VTU0lPTj00OGMyNjliZC01NTcyLTRhN2UtYmFiOS0wZmNmY2NiZDM0NjUNCg0K</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
        <HTTPCookies>
          <HTTPHeaderEntity name="SESSION" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>NDhjMjY5YmQtNTU3Mi00YTdlLWJhYjktMGZjZmNjYmQzNDY1</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
        </HTTPCookies>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <contentLenght>0</contentLenght>
      <HTTPHeaders>
        <HTTPHeaderEntity name="X-Frame-Options" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>REVOWQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Application-Context" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXBwbGljYXRpb246cHJvZHVjdGlvbjo3MTcx</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cache-Control" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm8tY2FjaGUsIG5vLXN0b3Jl</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Pragma" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm8tY2FjaGU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PVVURi04</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Transfer-Encoding" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Y2h1bmtlZA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>RnJpLCAyMiBNYXkgMjAyMCAxNDowNTowNiBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIA0KWC1GcmFtZS1PcHRpb25zOiBERU5ZDQpYLUFwcGxpY2F0aW9uLUNvbnRleHQ6IGFwcGxpY2F0aW9uOnByb2R1Y3Rpb246NzE3MQ0KQ2FjaGUtQ29udHJvbDogbm8tY2FjaGUsIG5vLXN0b3JlDQpQcmFnbWE6IG5vLWNhY2hlDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD1VVEYtOA0KVHJhbnNmZXItRW5jb2Rpbmc6IGNodW5rZWQNCkRhdGU6IEZyaSwgMjIgTWF5IDIwMjAgMTQ6MDU6MDYgR01UDQoNCg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="4">
            <ActualData>eyJyZWNvcmRzVG90YWwiOjE2NywicmVjb3Jkc0ZpbHRlcmVkIjoxNjcsImFhRGF0YSI6W3siaWQiOjc5MDEsImFsZXJ0TmFtZSI6IkxpdFBlcmYxIiwicHJpb3JpdHkiOnsidmFsdWUiOiJVcmdlbnQiLCJpY29uQ2xhc3MiOiJtZGkgbWRpLWFscGhhLXUtY2lyY2xlIHJlZC0xIn0sInRpdGxlIjoiSXNvbGF0aW9uIGFuZCBjaGFyYWN0ZXJpc2F0aW9uIG9mIG5hc29zZXB0YWwgY2FydGlsYWdlIHN0ZW0vcHJvZ2VuaXRvciBjZWxscyBhbmQgdGhlaXIgcm9sZSBpbiB0aGUgY2hvbmRyb2dlbmljIG5pY2hlLiIsImF1dGhvcnMiOiJbWml0YSBNLCBKZXNzb3BdW0F5ZXNoYSwgQWwtU2FiYWhdW0lyaW5hIE4sIFNpbW9lc11bU3RlcGhhbmllIEUgQSwgQnVybmVsbF1bSW5hIExhdXJhLCBQaWVwZXJdW0NhdGhlcmluZSBBLCBUaG9ybnRvbl1bSWFpbiBTLCBXaGl0YWtlcl0iLCJhc3NpZ25lZFRvIjp7ImlkIjo3NDM1LCJmdWxsTmFtZSI6ImJoYWd5YSIsInVzZXJuYW1lIjoiYmhhZ3lhIiwiZW1haWwiOiJOUi5CaGFneWFsYWtzaG1pQHJ4bG9naXguY29tIn0sInB1YmxpY2F0aW9uRGF0ZSI6IjE0LU1heS0yMDIwIiwiZGlzcG9zaXRpb24iOiJOZXciLCJwcm9kdWN0TmFtZSI6IldITy1ESUFNSUNST04gTVIiLCJldmVudE5hbWUiOm51bGwsImFjdGlvbkNvdW50IjowLCJpc1ZhbGlkYXRpb25TdGF0ZUFjaGlldmVkIjpmYWxzZSwiYWxlcnRUYWdzIjpbXSwiYWxlcnRDb25maWdJZCI6NzY5MCwiYXJ0aWNsZUlkIjoiMzI0MDg4ODgiLCJhcnRpY2xlQWJzdHJhY3QiOiJTaW5jZSBjYXJ0aWxhZ2UtZGVyaXZlZCBzdGVtL3Byb2dlbml0b3IgY2VsbHMgKENTUENzKSB3ZXJlIGZpcnN0IGlkZW50aWZpZWQgaW4gYXJ0aWN1bGFyIGNhcnRpbGFnZSB1c2luZyBkaWZmZXJlbnRpYWwgYWRoZXNpb24gdG8gZmlicm9uZWN0aW4sIHRoZWlyIHNlbGYtcmVuZXdhbCBjYXBhY2l0eSBhbmQgbmljaGUtc3BlY2lmaWMgbGluZWFnZSBwcmVmZXJlbmNlIGZvciBjaG9uZHJvZ2VuZXNpcyBoYXZlIHByb3BlbGxlZCB0aGVpciBhcHBsaWNhdGlvbiBmb3IgY2FydGlsYWdlIHRpc3N1ZSBlbmdpbmVlcmluZy4gSW4gbWFueSBhZHVsdCB0aXNzdWVzLCBzdGVtL3Byb2dlbml0b3IgY2VsbHMgYXJlIHJlY29nbmlzZWQgdG8gYmUgaW52b2x2ZWQgaW4gdGlzc3VlIGhvbWVvc3Rhc2lzLiBIb3dldmVyLCB0aGUgcm9sZSBvZiBuYXNvc2VwdGFsIENTUENzIGhhcyBub3QgeWV0IGJlZW4gZWx1Y2lkYXRlZC4gT3VyIGFpbSB3YXMgdG8gaXNvbGF0ZSBhbmQgY2hhcmFjdGVyaXNlIG5hc29zZXB0YWwgQ1NQQ3MgYWxvbmdzaWRlIG5hc29zZXB0YWwgY2hvbmRyb2N5dGUgcG9wdWxhdGlvbnMgYW5kIGRldGVybWluZSBjaG9uZHJvZ2VuaWMgY2FwYWNpdHkuSGVyZSwgd2UgaXNvbGF0ZWQgbmFzb3NlcHRhbCBDU1BDcyB1c2luZyBkaWZmZXJlbnRpYWwgYWRoZXNpb24gdG8gZmlicm9uZWN0aW4gYW5kIGFzc2Vzc2VkIHRoZWlyIGNvbG9ueSBmb3JtaW5nIGVmZmljaWVuY3ksIHByb2xpZmVyYXRpb24ga2luZXRpY3MsIGthcnlvdHlwZSBhbmQgdHJpbGluZWFnZSBwb3RlbnRpYWwuIENTUENzIHdlcmUgY2hhcmFjdGVyaXNlZCBhbG9uZ3NpZGUgbm9uLWZpYnJvbmVjdGluLWFkaGVyZW50IG5hc29zZXB0YWwgY2hvbmRyb2N5dGVzIChETkNzKSBhbmQgY2FydGlsYWdlLWRlcml2ZWQgY2VsbHMgKENEQ3MsIGEgaGV0ZXJvZ2Vub3VzIGNvbWJpbmF0aW9uIG9mIEROQ3MgYW5kIENTUENzKSBieSBhc3Nlc3NpbmcgZGlmZmVyZW5jZXMgaW4gZ2VuZSBleHByZXNzaW9uIHByb2ZpbGVzIHVzaW5nIFBDUiBTdGVtIENlbGwgQXJyYXksIGltbXVub3BoZW5vdHlwZSB1c2luZyBmbG93IGN5dG9tZXRyeSBhbmQgY2hvbmRyb2dlbmNpdHkgdXNpbmcgUlQtUENSIGFuZCBoaXN0b2xvZ3kuQ1NQQ3Mgd2VyZSBjbG9ub2dlbmljIHdpdGggaW5jcmVhc2VkIGdlbmUgZXhwcmVzc2lvbiBvZiB0aGUgbmV1cm9lY3RvZGVybWFsIG1hcmtlcnMgTkNBTTEgYW5kIE4tQ2FkaGVyaW4sIGFzIHdlbGwgYXMgQ3ljbGlucyBEMSBhbmQgRDIsIGNvbXBhcmVkIHRvIEROQ3MuIEFsbCB0aHJlZSBjZWxsIHBvcHVsYXRpb25zIGV4cHJlc3NlZCByZWNvZ25pc2VkIG1lc2VuY2h5bWFsIHN0ZW0gY2VsbCBzdXJmYWNlIG1hcmtlcnMgKENEMjksIENENDQsIENENzMsIENEOTApLCB5ZXQgb25seSBDU1BDcyBhbmQgQ0RDcyBzaG93ZWQgbXVsdGlsaW5lYWdlIGRpZmZlcmVudGlhdGlvbiBwb3RlbnRpYWwuIENEQyBwb3B1bGF0aW9ucyBleHByZXNzZWQgc2lnbmlmaWNhbnRseSBoaWdoZXIgbGV2ZWxzIG9mIHR5cGUgMiBjb2xsYWdlbiBhbmQgYm9uZSBtb3JwaG9nZW5ldGljIHByb3RlaW4gMiBnZW5lcywgd2l0aCBncmVhdGVyIGNhcnRpbGFnZSBleHRyYWNlbGx1bGFyIG1hdHJpeCBzZWNyZXRpb24uIFdoZW4gRE5DcyB3ZXJlIGN1bHR1cmVkIGluIGlzb2xhdGlvbiwgdGhlcmUgd2FzIHJlZHVjZWQgY2hvbmRyb2dlbmljaXR5IGFuZCBoaWdoZXIgZXhwcmVzc2lvbiBvZiB0eXBlIDEgY29sbGFnZW4sIHN0cm9tYWwgY2VsbC1kZXJpdmVkIGZhY3RvciAxIChTREYtMSksIENENzMgYW5kIENEOTAsIHJlY29nbmlzZWQgbWFya2VycyBvZiBhIGZpYnJvYmxhc3QtbGlrZSBwaGVub3R5cGUuRmlicm9uZWN0aW4tYWRoZXJlbnQgQ1NQQ3MgZGVtb25zdHJhdGUgYSB1bmlxdWUgZ2VuZSBleHByZXNzaW9uIHByb2ZpbGUgY29tcGFyZWQgdG8gbm9uLWZpYnJvbmVjdGluLWFkaGVyZW50IEROQ3MuIEROQ3MgY3VsdHVyZWQgaW4gaXNvbGF0aW9uLCB3aXRob3V0IENTUENzLCBleHByZXNzIGZpYnJvYmxhc3RpYyBwaGVub3R5cGUgd2l0aCByZWR1Y2VkIGNob25kcm9nZW5pY2l0eS4gTWl4ZWQgcG9wdWxhdGlvbnMgb2Ygc3RlbS9wcm9nZW5pdG9yIGNlbGxzIGFuZCBjaG9uZHJvY3l0ZXMgd2VyZSByZXF1aXJlZCBmb3Igb3B0aW1hbCBjaG9uZHJvZ2VuZXNpcywgc3VnZ2VzdGluZyB0aGF0IENTUENzIG1heSBiZSByZXF1aXJlZCB0byByZXRhaW4gcGhlbm90eXBpYyBzdGFiaWxpdHkgYW5kIGNob25kcm9nZW5pYyBwb3RlbnRpYWwgb2YgRE5Dcy4gQ3Jvc3N0YWxrIGJldHdlZW4gRE5DcyBhbmQgQ1NQQ3MgaXMgcHJvcG9zZWQgYmFzZWQgb24gU0RGLTEgc2lnbmFsbGluZy4iLCJleGVjQ29uZmlnSWQiOjc3MjEsImlzUmV2aWV3ZWQiOmZhbHNlLCJjb21tZW50IjpudWxsLCJpc0F0dGFjaG1lbnQiOmZhbHNlLCJzaWduYWwiOltdfSx7ImlkIjo4MDAzLCJhbGVydE5hbWUiOiJMaXRQZXJmMSIsInByaW9yaXR5Ijp7InZhbHVlIjoiVXJnZW50IiwiaWNvbkNsYXNzIjoibWRpIG1kaS1hbHBoYS11LWNpcmNsZSByZWQtMSJ9LCJ0aXRsZSI6IkV2YWx1YXRpb24gb2YgbWljcm9zdHJ1Y3R1cmFsIGNoYW5nZXMgaW4gc3BpbmFsIGNvcmQgb2YgcGF0aWVudHMgd2l0aCBkZWdlbmVyYXRpdmUgY2VydmljYWwgbXllbG9wYXRoeSBieSBkaWZmdXNpb24ga3VydG9zaXMgaW1hZ2luZyBhbmQgaW52ZXN0aWdhdGUgdGhlIGNvcnJlbGF0aW9uIHdpdGggSk9BIHNjb3JlLiIsImF1dGhvcnMiOiJbWmh1b2hhbmcsIExpdV1bQmluZ3lhbmcsIEJpYW5dW0dhbmcsIFdhbmddW0NoZXVreWluZywgVGlhbl1bWmhlbnNoYW4sIEx2XVtaaGlxaW5nLCBTaGFvXVtEYW4sIExpXSIsImFzc2lnbmVkVG8iOnsiaWQiOjc0MzUsImZ1bGxOYW1lIjoiYmhhZ3lhIiwidXNlcm5hbWUiOiJiaGFneWEiLCJlbWFpbCI6Ik5SLkJoYWd5YWxha3NobWlAcnhsb2dpeC5jb20ifSwicHVibGljYXRpb25EYXRlIjoiMTMtTWF5LTIwMjAiLCJkaXNwb3NpdGlvbiI6Ik5ldyIsInByb2R1Y3ROYW1lIjoiV0hPLURJQU1JQ1JPTiBNUiIsImV2ZW50TmFtZSI6bnVsbCwiYWN0aW9uQ291bnQiOjAsImlzVmFsaWRhdGlvblN0YXRlQWNoaWV2ZWQiOmZhbHNlLCJhbGVydFRhZ3MiOltdLCJhbGVydENvbmZpZ0lkIjo3NjkwLCJhcnRpY2xlSWQiOiIzMjQwNDE4OCIsImFydGljbGVBYnN0cmFjdCI6IlRvIGV4cGxvcmUgdGhlIGZlYXNpYmlsaXR5IG9mIHRoZSBtZXRyaWNzIG9mIGRpZmZ1c2lvbiBrdXJ0b3NpcyBpbWFnaW5nIChES0kpIGZvciBpbnZlc3RpZ2F0aW9ucyBvZiB0aGUgbWljcm9zdHJ1Y3R1cmFsIGNoYW5nZXMgb2Ygc3BpbmFsIGNvcmQgaW5qdXJ5IGluIHBhdGllbnRzIHdpdGggZGVnZW5lcmF0aXZlIGNlcnZpY2FsIG15ZWxvcGF0aHkgKERDTSkgYW5kIHRoZSBjb3JyZWxhdGlvbiBiZXR3ZWVuIEphcGFuIE9ydGhvcGFlZGljIEFzc29jaWF0aW9uIChKT0EpIHNjb3JlcyBhbmQgREtJIG1ldHJpY3MuRmlmdHktc2V2ZW4gcGF0aWVudHMgd2l0aCBEQ00gYW5kIDM4IGhlYWx0aHkgdm9sdW50ZWVycyB1bmRlcndlbnQgMy4w4oCJVCBtYWduZXRpYyByZXNvbmFuY2UgKE1SKSBpbWFnaW5nIHdpdGggcm91dGluZSBNUkkgc2VxdWVuY2VzIGFuZCBES0kgZnJvbSBlY2hvLXBsYW5hciBpbWFnaW5nIHNlcXVlbmNlLiBCYXNlZCBvbiB0aGUgSk9BIHNjb3JlLCBEQ00gcGF0aWVudHMgd2VyZSBkaXZpZGVkIGludG8gZm91ciBzdWJncm91cHMuIERLSSBtZXRyaWNzIG9mIHRoZSBEQ00gZ3JvdXAgYW5kIGNvbnRyb2wgZ3JvdXAgd2VyZSBvYnRhaW5lZCBhbmQgY29tcGFyZWQsIHNlcGFyYXRlbHkgZm9yIHRoZSB3aGl0ZSBtYXR0ZXIgKFdNKSBhbmQgdGhlIGdyYXkgbWF0dGVyIChHTSkuVGhlIEZBIHZhbHVlcyBpbiBXTSB3ZXJlIHNpZ25pZmljYW50bHkgbG93ZXIgKFDigIk94oCJMC4wMjApIGluIHRoZSBEQ00gZ3JvdXAgdGhhbiBpbiB0aGUgY29udHJvbCBncm91cC4gVGhlIE1LIHZhbHVlcyBpbiBHTSB3ZXJlIGxvd2VyIChQ4oCJPeKAiTAuMDExKSBpbiB0aGUgRENNIGdyb3VwIHRoYW4gaW4gdGhlIGNvbnRyb2wgZ3JvdXAuIFRoZSBNRCB2YWx1ZXMgaW4gV00gd2VyZSBzaWduaWZpY2FudGx5IGhpZ2hlciAoUOKAiT3igIkwLjAxMCkgaW4gdGhlIERDTSBncm91cCB0aGFuIGluIHRoZSBjb250cm9sIGdyb3VwLiBJbiBHTSwgdGhlIEpPQSBzY29yZSB3YXMgcG9zaXRpdmVseSBjb3JyZWxhdGVkIHdpdGggdGhlIE1LIHZhbHVlcyAocuKAiT3igIkwLjc2OCwgUOKAiTzigIkwLjA1KS4gSW4gdGhlIFdNLCB0aGUgSk9BIHNjb3JlIHdhcyBwb3NpdGl2ZWx5IGNvcnJlbGF0ZWQgd2l0aCB0aGUgRkEgdmFsdWVzIChy4oCJPeKAiTAuNjEyLCBQ4oCJPOKAiTAuMDUpLkRLSSBwcm92aWRlcyBxdWFudGl0aXZlIGV2YWx1YXRpb24gdG8gdGhlIGNoYXJhY3RlcnMgb2YgbWljcm9zdHJ1Y3R1cmUgb2YgdGhlIHNwaW5hbCBjb3JkIGRhbWFnZSBpbiBwYXRpZW50cyB3aXRoIERDTSBjb21wYXJlZCB0byBjb252ZW50aW9uYWwgTVIuIE1LIHZhbHVlcyBjYW4gcmVmbGVjdCBtaWNyb3N0cnVjdHVyYWwgYWJub3JtYWxpdGllcyBvZiBncmF5IG1hdHRlciBvZiB0aGUgY2VydmljYWwgc3BpbmFsIGNvcmQgYW5kIHByb3ZpZGUgbW9yZSBpbmZvcm1hdGlvbiBiZXlvbmQgdGhhdCBvYnRhaW5lZCB3aXRoIHJvdXRpbmUgZGlmZnVzaW9uIG1ldHJpY3MuIEluIGFkZGl0aW9uLCBNSyB2YWx1ZXMgb2YgR00gYW5kIEZBIHZhbHVlcyBvZiBXTSBtYXkgYXMgYSBiZSBoaWdobHkgc2Vuc2l0aXZlIGJpb21hcmtlciBmb3IgdGhlIGRlZ3JlZSBvZiBjZXJ2aWNhbCBzcGluYWwgY29yZCBkYW1hZ2UuIiwiZXhlY0NvbmZpZ0lkIjo3NzIxLCJpc1Jldmlld2VkIjpmYWxzZSwiY29tbWVudCI6bnVsbCwiaXNBdHRhY2htZW50IjpmYWxzZSwic2lnbmFsIjpbXX0seyJpZCI6Nzg3OSwiYWxlcnROYW1lIjoiTGl0UGVyZjEiLCJwcmlvcml0eSI6eyJ2YWx1ZSI6IlVyZ2VudCIsImljb25DbGFzcyI6Im1kaSBtZGktYWxwaGEtdS1jaXJjbGUgcmVkLTEifSwidGl0bGUiOiJFbmhhbmNlZCBDdXJyZW50IFByb2R1Y3Rpb24gYnkgRXhvZ2Vub3VzIEVsZWN0cm9uIE1lZGlhdG9ycyB2aWEgU3luZXJneSBvZiBQcm9tb3RpbmcgQmlvZmlsbSBGb3JtYXRpb24gYW5kIHRoZSBFbGVjdHJvbiBTaHV0dGxpbmcgUHJvY2Vzcy4iLCJhdXRob3JzIjoiW1l1bmRhbmcsIFd1XVtYaWFvYm8sIEx1b11bQmFvbGksIFFpbl1bRmFuZ2JhaSwgTGldW01heCBNLCBIw6RnZ2Jsb21dW1Rvbmd4dSwgTGl1XSIsImFzc2lnbmVkVG8iOnsiaWQiOjc0MzUsImZ1bGxOYW1lIjoiYmhhZ3lhIiwidXNlcm5hbWUiOiJiaGFneWEiLCJlbWFpbCI6Ik5SLkJoYWd5YWxha3NobWlAcnhsb2dpeC5jb20ifSwicHVibGljYXRpb25EYXRlIjoiMTItTWF5LTIwMjAiLCJkaXNwb3NpdGlvbiI6Ik5ldyIsInByb2R1Y3ROYW1lIjoiV0hPLURJQU1JQ1JPTiBNUiIsImV2ZW50TmFtZSI6bnVsbCwiYWN0aW9uQ291bnQiOjAsImlzVmFsaWRhdGlvblN0YXRlQWNoaWV2ZWQiOmZhbHNlLCJhbGVydFRhZ3MiOltdLCJhbGVydENvbmZpZ0lkIjo3NjkwLCJhcnRpY2xlSWQiOiIzMjM1MjI4OCIsImFydGljbGVBYnN0cmFjdCI6IkV4b2dlbm91cyBlbGVjdHJvbiBtZWRpYXRvcnMgKEVNcykgY2FuIGZhY2lsaXRhdGUgZXh0cmFjZWxsdWxhciBlbGVjdHJvbiB0cmFuc2ZlciAoRUVUKSB2aWEgZWxlY3Ryb24gc2h1dHRsaW5nIHByb2Nlc3NlcywgYnV0IGl0IGlzIHN0aWxsIHVuY2xlYXIgd2hldGhlciBhbmQgaG93IGJpb2ZpbG0gZm9ybWF0aW9uIGlzIGFmZmVjdGVkIGJ5IHRoZSBwcmVzZW5jZSBvZiBFTXMuIEhlcmUsIHRoZSBpbXBhY3RzIG9mIEVNcyBvbiBFRVQgYW5kIGJpb2ZpbG0gZm9ybWF0aW9uIHdlcmUgaW52ZXN0aWdhdGVkIGluIGJpb2VsZWN0cm9jaGVtaWNhbCBzeXN0ZW1zIChCRVNzKSB3aXRoIFNoZXdhbmVsbGEgb25laWRlbnNpcyBNUi0xLCBhbmQgdGhlIHJlc3VsdHMgc2hvd2VkIHRoYXQgdGhlIHByZXNlbmNlIG9mIGZpdmUgZGlmZmVyZW50IEVNcyBsZWQgdG8gaGlnaCBkZW5zaXR5IGN1cnJlbnQgcHJvZHVjdGlvbi4gQWxsIHRoZSBFTXMgc3Vic3RhbnRpYWxseSBwcm9tb3RlZCBiaW9maWxtIGZvcm1hdGlvbiB3aXRoIDE1LTM2IHRpbWVzIGhpZ2hlciB0b3RhbCBiaW9maWxtIEROQSB3aXRoIEVNcyB0aGFuIHdpdGhvdXQgRU1zLCBhbmQgdGhleSBhbHNvIGluY3JlYXNlZCB0aGUgcHJvZHVjdGlvbiBvZiBleHRyYWNlbGx1bGFyIHBvbHltZXJpYyBzdWJzdGFuY2VzLCB3aGljaCB3YXMgZmF2b3JhYmxlIGZvciBiaW9maWxtIGZvcm1hdGlvbi4gVGhlIGN1cnJlbnQgZGVjcmVhc2VkIHN1YnN0YW50aWFsbHkgYWZ0ZXIgcmVtb3ZpbmcgRU1zIGZyb20gdGhlIG1lZGl1bSBvciBieSByZXBsYWNpbmcgZWxlY3Ryb2RlcyB3aXRob3V0IGJpb2ZpbG0sIHN1Z2dlc3RpbmcgdGhhdCBib3RoIGJpb2ZpbG0gYW5kIEVNcyBhcmUgcmVxdWlyZWQgZm9yIGhpZ2ggZGVuc2l0eSBjdXJyZW50IHByb2R1Y3Rpb24uIEVFVC1yZWxhdGVkIGdlbmUgZXhwcmVzc2lvbiB3YXMgdXByZWd1bGF0ZWQgd2l0aCBFTXMsIHJlc3VsdGluZyBpbiB0aGUgaGlnaCBmbHV4IG9mIGNlbGwgZWxlY3Ryb24gb3V0cHV0LiBBIHN5bmVyZ2lzdGljIG1lY2hhbmlzbSB3YXMgcHJvcG9zZWQ6IEVNcyBpbiBzdXNwZW5zaW9uIHdlcmUgcXVpY2tseSByZWR1Y2VkIGJ5IHRoZSBjZWxscyBhbmQgcmVveGlkaXplZCByYXBpZGx5IGJ5IHRoZSBlbGVjdHJvZGUsIHJlc3VsdGluZyBpbiBhIG1pY3JvZW52aXJvbm1lbnQgd2l0aCBzdWZmaWNpZW50IG94aWRpemVkIEVNcyBmb3IgYmlvZmlsbSBmb3JtYXRpb24sIGFuZCB0aHVzLCBiZXNpZGVzIHRoZSB3ZWxsLWtub3duIGVsZWN0cm9uIHNodXR0bGluZyBwcm9jZXNzLCB0aGUgRU0taW5kdWNlZCBoaWdoIGJpb2ZpbG0gZm9ybWF0aW9uIGFuZCBoaWdoIE10ciBnZW5lIGV4cHJlc3Npb24gY291bGQgam9pbnRseSBjb250cmlidXRlIHRvIHRoZSBFRVQgYW5kIHN1YnNlcXVlbnRseSBwcm9kdWNlIGEgaGlnaCBkZW5zaXR5IGN1cnJlbnQuIFRoaXMgc3R1ZHkgcHJvdmlkZXMgYSBuZXcgaW5zaWdodCBpbnRvIEVNLWVuaGFuY2VkIGN1cnJlbnQgcHJvZHVjdGlvbiB2aWEgcmVndWxhdGluZyB0aGUgYmlvZmlsbSBmb3JtYXRpb24gYW5kIEVFVC1yZWxhdGVkIGdlbmUgZXhwcmVzc2lvbi4iLCJleGVjQ29uZmlnSWQiOjc3MjEsImlzUmV2aWV3ZWQiOmZhbHNlLCJjb21tZW50IjpudWxsLCJpc0F0dGFjaG1lbnQiOmZhbHNlLCJzaWduYWwiOltdfSx7ImlkIjo3OTE1LCJhbGVydE5hbWUiOiJMaXRQZXJmMSIsInByaW9yaXR5Ijp7InZhbHVlIjoiVXJnZW50IiwiaWNvbkNsYXNzIjoibWRpIG1kaS1hbHBoYS11LWNpcmNsZSByZWQtMSJ9LCJ0aXRsZSI6Ikhpc3RvZ3JhbSBBbmFseXNpcyBvZiBEaWZmdXNpb24tV2VpZ2h0ZWQgTVIgSW1hZ2luZyBhcyBhIEJpb21hcmtlciB0byBQcmVkaWN0IFN1cnZpdmFsIG9mIFN1cmdpY2FsbHkgVHJlYXRlZCBDb2xvcmVjdGFsIENhbmNlciBQYXRpZW50cy4iLCJhdXRob3JzIjoiW1l1bWlrbywgVGFrYWhhc2hpXVtLb2ljaGksIEhheWFub11bR2FrdSwgT2hpcmFdW1NodW5zdWtlLCBJbWFuaXNoaV1bVG9zaGloYXJ1LCBIYW5hb2thXVtIaXJva2ksIFdhdGFuYWJlXVtBdHN1c2hpLCBIaXJhdGFdW1lvaGVpLCBLYXdhc2FraV1bSGlkZWFraSwgTWl5YXVjaGldW0hpc2FoaXJvLCBNYXRzdWJhcmFdIiwiYXNzaWduZWRUbyI6eyJpZCI6NzQzNSwiZnVsbE5hbWUiOiJiaGFneWEiLCJ1c2VybmFtZSI6ImJoYWd5YSIsImVtYWlsIjoiTlIuQmhhZ3lhbGFrc2htaUByeGxvZ2l4LmNvbSJ9LCJwdWJsaWNhdGlvbkRhdGUiOiIxNC1NYXktMjAyMCIsImRpc3Bvc2l0aW9uIjoiTmV3IiwicHJvZHVjdE5hbWUiOiJXSE8tRElBTUlDUk9OIE1SIiwiZXZlbnROYW1lIjpudWxsLCJhY3Rpb25Db3VudCI6MCwiaXNWYWxpZGF0aW9uU3RhdGVBY2hpZXZlZCI6ZmFsc2UsImFsZXJ0VGFncyI6W10sImFsZXJ0Q29uZmlnSWQiOjc2OTAsImFydGljbGVJZCI6IjMyNDA5OTUxIiwiYXJ0aWNsZUFic3RyYWN0IjoiU3RydWN0dXJhbCBhYm5vcm1hbGl0eSBpcyBhIHdlbGwtcmVjb2duaXplZCBmZWF0dXJlIG9mIG1hbGlnbmFuY3kuIE9uIHRoZSBvdGhlciBoYW5kLCBkaWZmdXNpb24td2VpZ2h0ZWQgTVJJIChEV0kpIGhhcyBiZWVuIHJlcG9ydGVkIGFzIGEgdG9vbCB0aGF0IGNhbiByZWZsZWN0IHR1bW9yIGJpb2xvZ3kuVGhlIHB1cnBvc2Ugb2YgdGhpcyBzdHVkeSBpcyB0byBhcHBseSBoaXN0b2dyYW0gYW5hbHlzaXMgdG8gRFdJIHRvIHF1YW50aWZ5IHN0cnVjdHVyYWwgYWJub3JtYWxpdHkgb2YgY29sb3JlY3RhbCBjYW5jZXIsIGFuZCBldmFsdWF0ZSBpdHMgYmlvbWFya2VyIHZhbHVlLlRoaXMgaXMgYSByZXRyb3NwZWN0aXZlIHN0dWR5IG9mIDgwICg0NiBtZW4gYW5kIDM0IHdvbWVuOyBtZWRpYW4gYWdlOiA2OC4wwqB5ZWFycykgY29sb3JlY3RhbCBjYW5jZXIgcGF0aWVudHMgd2hvIHVuZGVyd2VudCBEV0kgZm9sbG93ZWQgYnkgY3VyYXRpdmUgc3VyZ2VyeSBhdCB0aGUgQ2hpYmEgVW5pdmVyc2l0eSBIb3NwaXRhbCBiZXR3ZWVuIDIwMDkgYW5kIDIwMTEuIE1lZGlhbiBmb2xsb3ctdXAgdGltZSB3YXMgNjIuMsKgbW9udGhzLiBIaXN0b2dyYW0gcGFyYW1ldGVycyBpbmNsdWRpbmcgc2lnbmFsIGludGVuc2l0eSBvZiBrdXJ0b3NpcyBhbmQgc2tld25lc3Mgb2YgdGhlIHR1bW9yIHdlcmUgbWVhc3VyZWQgb24gRFdJIGF0IGLigIk94oCJMTAwMCwgYW5kIG1lYW4gYXBwYXJlbnQgZGlmZnVzaW9uIGNvZWZmaWNpZW50IHZhbHVlIChBREMpIG9mIHRoZSB0dW1vciB3YXMgYWxzbyBtZWFzdXJlZCBvbiBBREMgbWFwIGdlbmVyYXRlZCBieSBEV0lzIGF0IGLigIk94oCJMCBhbmQgMTAwMC4gQXNzb2NpYXRpb25zIG9mIHR1bW9yIHBhcmFtZXRlcnMgKGt1cnRvc2lzLCBza2V3bmVzcywgYW5kIEFEQykgd2l0aCBwYXRob2xvZ2ljYWwgZmVhdHVyZXMgd2VyZSBhbmFseXplZCwgYW5kIHRoZXNlIHBhcmFtZXRlcnMgd2VyZSBhbHNvIGNvbXBhcmVkIHdpdGggb3ZlcmFsbCBzdXJ2aXZhbCAoT1MpIGFuZCByZWxhcHNlLWZyZWUgc3Vydml2YWwgKFJGUykgdXNpbmcgQ294IHJlZ3Jlc3Npb24gYW5kIEthcGxhbi1NZWllciBhbmFseXNpcy5BREMgb2YgdGhlIHR1bW9yIGRpZCBub3QgaGF2ZSBzaWduaWZpY2FudCBhc3NvY2lhdGlvbnMgd2l0aCBhbnkgcGF0aG9sb2dpY2FsIGZhY3RvcnMsIGJ1dCBrdXJ0b3NpcyBhbmQgc2tld25lc3Mgb2Ygc2lnbmFsIGludGVuc2l0eSBpbiB0aGUgdHVtb3Igd2FzIHNpZ25pZmljYW50bHkgZGlmZmVyZW50IGJldHdlZW4gdHVtb3JzIHdpdGggZGlzdGFudCBtZXRhc3Rhc2VzIGFuZCB0aG9zZSB3aXRob3V0ICg0LjIz4oCJwrHigIkxLjMxIHZzLiAzLjI04oCJwrHigIkxLjMyLCBw4oCJPeKAiTAuMDQ7IDEuMDnigInCseKAiTAuMzkgdnMuIDAuNTfigInCseKAiTAuNTgsIHDigIk94oCJMC4wMykuIEt1cnRvc2lzIG9mIHRoZSB0dW1vciB3YXMgc2lnbmlmaWNhbnRseSBjb3JyZWxhdGVkIHdpdGggT1MgYW5kIFJGUyAocOKAiT3igIkwLjA0LCBw4oCJPeKAiTAuMDMsIHJlc3BlY3RpdmVseSksIGFuZCBza2V3bmVzcyB3YXMgc2lnbmlmaWNhbnRseSBjb3JyZWxhdGVkIHdpdGggT1MgKHDigIk94oCJMC4wMykgaW4gQ294IHJlZ3Jlc3Npb24gYW5hbHlzaXMuIEhpZ2hlciBrdXJ0b3NpcyBvciBoaWdoZXIgc2tld25lc3Mgb2YgdGhlIHR1bW9yIHdhcyBhc3NvY2lhdGVkIHdpdGggd29yc2UgT1MgaW4gS2FwbGFuLU1laWVyIGFuYWx5c2lzIChw4oCJPeKAiTAuMDEsIHDigIk94oCJMC4wMDksIGxvZy1yYW5rKS4gSW4gc3Vic2V0IGFuYWx5c2lzLCB0aGVyZSB3ZXJlIDUwIHBhdGllbnRzICgzMiBtZW4gYW5kIDE4IHdvbWVuKSBvZiBseW1waCBub2RlLW5lZ2F0aXZlIGNvbG9yZWN0YWwgY2FuY2VycyAo4omk4oCJc3RhZ2UgSUkpOyBza2V3bmVzcyBvZiBzaWduYWwgaW50ZW5zaXR5IGluIHRoZSB0dW1vciB3YXMgYXNzb2NpYXRlZCB3aXRoIE9TIHVzaW5nIHVuaXZhcmlhdGUgQ294IHJlZ3Jlc3Npb24gYW5hbHlzaXMgKHDigIk94oCJMC4wNCkuSGlzdG9ncmFtIGFuYWx5c2lzIG9mIERXSSBjYW4gYmUgYSBwcm9nbm9zdGljIGJpb21hcmtlciBmb3IgY29sb3JlY3RhbCBjYW5jZXIuIiwiZXhlY0NvbmZpZ0lkIjo3NzIxLCJpc1Jldmlld2VkIjpmYWxzZSwiY29tbWVudCI6bnVsbCwiaXNBdHRhY2htZW50IjpmYWxzZSwic2lnbmFsIjpbXX0seyJpZCI6Nzk4MSwiYWxlcnROYW1lIjoiTGl0UGVyZjEiLCJwcmlvcml0eSI6eyJ2YWx1ZSI6IlVyZ2VudCIsImljb25DbGFzcyI6Im1kaSBtZGktYWxwaGEtdS1jaXJjbGUgcmVkLTEifSwidGl0bGUiOiJEZW5vaXNpbmcgb2YgbXVsdGkgYi12YWx1ZSBkaWZmdXNpb24td2VpZ2h0ZWQgTVIgaW1hZ2VzIHVzaW5nIGRlZXAgaW1hZ2UgcHJpb3IuIiwiYXV0aG9ycyI6IltZdS1DaHVuLCBMaW5dW0hzdWFuLU1pbmcsIEh1YW5nXSIsImFzc2lnbmVkVG8iOnsiaWQiOjc0MzUsImZ1bGxOYW1lIjoiYmhhZ3lhIiwidXNlcm5hbWUiOiJiaGFneWEiLCJlbWFpbCI6Ik5SLkJoYWd5YWxha3NobWlAcnhsb2dpeC5jb20ifSwicHVibGljYXRpb25EYXRlIjoiMTEtTWF5LTIwMjAiLCJkaXNwb3NpdGlvbiI6Ik5ldyIsInByb2R1Y3ROYW1lIjoiV0hPLURJQU1JQ1JPTiBNUiIsImV2ZW50TmFtZSI6bnVsbCwiYWN0aW9uQ291bnQiOjAsImlzVmFsaWRhdGlvblN0YXRlQWNoaWV2ZWQiOmZhbHNlLCJhbGVydFRhZ3MiOltdLCJhbGVydENvbmZpZ0lkIjo3NjkwLCJhcnRpY2xlSWQiOiIzMjE4NzU4MCIsImFydGljbGVBYnN0cmFjdCI6IlRoZSBjbGluaWNhbCB2YWx1ZSBvZiBtdWx0aXBsZSBiLXZhbHVlIGRpZmZ1c2lvbi13ZWlnaHRlZCAoRFcpIG1hZ25ldGljIHJlc29uYW5jZSBpbWFnaW5nIChNUkkpIGhhcyBiZWVuIHNob3duIGluIG1hbnkgc3R1ZGllcy4gSG93ZXZlciwgRFctTVJJIG9mdGVuIHN1ZmZlcnMgZnJvbSBsb3cgc2lnbmFsLXRvLW5vaXNlIHJhdGlvLCBlc3BlY2lhbGx5IGF0IGhpZ2ggYi12YWx1ZXMuIFRvIGFkZHJlc3MgdGhpcyBsaW1pdGF0aW9uLCB3ZSBwcmVzZW50IGFuIGltYWdlIGRlbm9pc2luZyBtZXRob2QgYmFzZWQgb24gdGhlIGNvbmNlcHQgb2YgZGVlcCBpbWFnZSBwcmlvciAoRElQKS4gSW4gdGhpcyBtZXRob2QsIGhpZ2gtcXVhbGl0eSBwcmlvciBpbWFnZXMgb2J0YWluZWQgZnJvbSB0aGUgc2FtZSBwYXRpZW50IHdlcmUgdXNlZCBhcyB0aGUgbmV0d29yayBpbnB1dCwgYW5kIGFsbCBub2lzeSBEVyBpbWFnZXMgd2VyZSB1c2VkIGFzIHRoZSBuZXR3b3JrIG91dHB1dC4gT3VyIGFpbSBpcyB0byBkZW5vaXNlIGFsbCBiLXZhbHVlIERXIGltYWdlcyBzaW11bHRhbmVvdXNseS4gQnkgdXNpbmcgZWFybHkgc3RvcHBpbmcsIHdlIGV4cGVjdCB0aGUgRElQLWJhc2VkIG1vZGVsIHRvIGxlYXJuIHRoZSBjb250ZW50IG9mIGltYWdlcyBpbnN0ZWFkIG9mIHRoZSBub2lzZS4gVGhlIHBlcmZvcm1hbmNlIG9mIHRoZSBwcm9wb3NlZCBESVAgbWV0aG9kIHdhcyBldmFsdWF0ZWQgdXNpbmcgYm90aCBzaW11bGF0ZWQgYW5kIHJlYWwgRFctTVJJIGRhdGEuIFdlIHNpbXVsYXRlZCBhIGRpZ2l0YWwgcGhhbnRvbSBhbmQgZ2VuZXJhdGVkIG5vaXNlLWZyZWUgRFctTVJJIGRhdGEgYWNjb3JkaW5nIHRvIHRoZSBpbnRyYXZveGVsIGluY29oZXJlbnQgbW90aW9uIG1vZGVsLiBEaWZmZXJlbnQgbGV2ZWxzIG9mIFJpY2lhbiBub2lzZSB3ZXJlIHRoZW4gc2ltdWxhdGVkLiBUaGUgcHJvcG9zZWQgRElQIG1ldGhvZCB3YXMgY29tcGFyZWQgd2l0aCB0aGUgaW1hZ2UgZGVub2lzaW5nIG1ldGhvZCB1c2luZyBsb2NhbCBwcmluY2lwYWwgY29tcG9uZW50IGFuYWx5c2lzIChMUENBKS4gVGhlIHNpbXVsYXRpb24gcmVzdWx0cyBzaG93IHRoYXQgdGhlIHByb3Bvc2VkIERJUCBtZXRob2Qgb3V0cGVyZm9ybXMgdGhlIExQQ0EgbWV0aG9kIGluIHRlcm1zIG9mIG1lYW4tc3F1YXJlZCBlcnJvciBhbmQgcGFyYW1ldGVyIGVzdGltYXRpb24uIFRoZSByZXN1bHRzIG9mIHJlYWwgRFctTVJJIGRhdGEgc2hvdyB0aGF0IHRoZSBwcm9wb3NlZCBESVAgbWV0aG9kIGNhbiBpbXByb3ZlIHRoZSBxdWFsaXR5IG9mIElWSU0gcGFyYW1ldHJpYyBpbWFnZXMuIERJUCBpcyBhIGZlYXNpYmxlIG1ldGhvZCBmb3IgZGVub2lzaW5nIG11bHRpcGxlIGItdmFsdWUgRFctTVJJIGRhdGEuIiwiZXhlY0NvbmZpZ0lkIjo3NzIxLCJpc1Jldmlld2VkIjpmYWxzZSwiY29tbWVudCI6bnVsbCwiaXNBdHRhY2htZW50IjpmYWxzZSwic2lnbmFsIjpbXX0seyJpZCI6Nzk0OCwiYWxlcnROYW1lIjoiTGl0UGVyZjEiLCJwcmlvcml0eSI6eyJ2YWx1ZSI6IlVyZ2VudCIsImljb25DbGFzcyI6Im1kaSBtZGktYWxwaGEtdS1jaXJjbGUgcmVkLTEifSwidGl0bGUiOiJJbmZsdWVuY2Ugb2Ygc3BhdGlhbCBkaXN0cmlidXRpb24gb2YgY2F0aW9uaWMgZnVuY3Rpb25hbCBncm91cHMgYXQgbmFub3BhcnRpY2xlIHN1cmZhY2VzIG9uIGJhY3RlcmlhbCB2aWFiaWxpdHkgYW5kIG1lbWJyYW5lIGludGVyYWN0aW9ucy4iLCJhdXRob3JzIjoiW1lvbmdxaWFuLCBaaGFuZ11bTmF0YWxpZSBWLCBIdWRzb24tU21pdGhdW1NldGggRCwgRnJhbmRdW01lZ2hhbiBTLCBDYWhpbGxdW0xhcmlzc2EgUywgRGF2aXNdW1ogVml2aWFuLCBGZW5nXVtDaHJpc3R5IEwsIEhheW5lc11bUm9iZXJ0IEosIEhhbWVyc10iLCJhc3NpZ25lZFRvIjp7ImlkIjo3NDM1LCJmdWxsTmFtZSI6ImJoYWd5YSIsInVzZXJuYW1lIjoiYmhhZ3lhIiwiZW1haWwiOiJOUi5CaGFneWFsYWtzaG1pQHJ4bG9naXguY29tIn0sInB1YmxpY2F0aW9uRGF0ZSI6IjEzLU1heS0yMDIwIiwiZGlzcG9zaXRpb24iOiJOZXciLCJwcm9kdWN0TmFtZSI6IldITy1ESUFNSUNST04gTVIiLCJldmVudE5hbWUiOm51bGwsImFjdGlvbkNvdW50IjowLCJpc1ZhbGlkYXRpb25TdGF0ZUFjaGlldmVkIjpmYWxzZSwiYWxlcnRUYWdzIjpbXSwiYWxlcnRDb25maWdJZCI6NzY5MCwiYXJ0aWNsZUlkIjoiMzI0MDIxOTQiLCJhcnRpY2xlQWJzdHJhY3QiOiJXaGlsZSBwb3NpdGl2ZWx5IGNoYXJnZWQgbmFub21hdGVyaWFscyBpbmR1Y2UgY3l0b3RveGljaXR5IGluIG1hbnkgb3JnYW5pc21zLCBtdWNoIGxlc3MgaXMga25vd24gYWJvdXQgaG93IHRoZSBzcGF0aWFsIGRpc3RyaWJ1dGlvbiBhbmQgcHJlc2VudGF0aW9uIG9mIG1vbGVjdWxhciBzdXJmYWNlIGNoYXJnZSBpbXBhY3RzIG5hbm9wYXJ0aWNsZS1iaW9sb2dpY2FsIGludGVyYWN0aW9ucy4gV2Ugc3lzdGVtYXRpY2FsbHkgZnVuY3Rpb25hbGl6ZWQgZGlhbW9uZCBuYW5vcGFydGljbGUgc3VyZmFjZXMgd2l0aCBmaXZlIGRpZmZlcmVudCBjYXRpb25pYyBzdXJmYWNlIG1vbGVjdWxlcyBoYXZpbmcgZGlmZmVyZW50IG1vbGVjdWxhciBzdHJ1Y3R1cmVzIGFuZCBjb25mb3JtYXRpb25zLCBpbmNsdWRpbmcgZm91ciBzbWFsbCBsaWdhbmRzIGFuZCBvbmUgcG9seW1lciwgYW5kIHdlIHRoZW4gcHJvYmVkIHRoZSBtb2xlY3VsYXItbGV2ZWwgaW50ZXJhY3Rpb24gYmV0d2VlbiB0aGVzZSBuYW5vcGFydGljbGVzIGFuZCBiYWN0ZXJpYWwgY2VsbHMuIFNoZXdhbmVsbGEgb25laWRlbnNpcyBNUi0xIHdhcyB1c2VkIGFzIGEgbW9kZWwgYmFjdGVyaWFsIGNlbGwgc3lzdGVtIHRvIGludmVzdGlnYXRlIGhvdyBtb2xlY3VsYXIgbGVuZ3RoIGFuZCBjb25mb3JtYXRpb24gb2YgY2F0aW9uaWMgc3VyZmFjZSBjaGFyZ2VzIGluZmx1ZW5jZSB0aGVpciBpbnRlcmFjdGlvbnMgd2l0aCB0aGUgR3JhbS1uZWdhdGl2ZSBiYWN0ZXJpYWwgbWVtYnJhbmVzLiBOdWNsZWFyIG1hZ25ldGljIHJlc29uYW5jZSAoTk1SKSBhbmQgWC1yYXkgcGhvdG9lbGVjdHJvbiBzcGVjdHJvc2NvcHkgKFhQUykgZGVtb25zdHJhdGUgdGhlIGNvdmFsZW50IG1vZGlmaWNhdGlvbiBvZiBuYW5vcGFydGljbGUgc3VyZmFjZSB3aXRoIHRoZSBkZXNpcmVkIGNhdGlvbmljIG9yZ2FuaWMgbW9ub2xheWVycy4gU3VycHJpc2luZ2x5LCBiYWN0ZXJpYWwgZ3Jvd3RoLWJhc2VkIHZpYWJpbGl0eSAoR0JWKSBhbmQgbWVtYnJhbmUgZGFtYWdlIGFzc2F5cyBib3RoIHNob3cgb25seSBtaW5pbWFsIGJpb2xvZ2ljYWwgaW1wYWN0IGJ5IHRoZSBOUHMgZnVuY3Rpb25hbGl6ZWQgd2l0aCBzaG9ydCBjYXRpb25pYyBsaWdhbmRzIHdpdGhpbiB0aGUgY29uY2VudHJhdGlvbiByYW5nZSB0ZXN0ZWQuIFlldCBOUHMgY292YWxlbnRseSBsaW5rZWQgdG8gYSBjYXRpb25pYyBwb2x5bWVyIGluZHVjZSBzdHJvbmcgY3l0b3RveGljaXR5LCBpbmNsdWRpbmcgcmVkdWNlZCBjZWxsdWxhciB2aWFiaWxpdHkgYW5kIHNpZ25pZmljYW50IG1lbWJyYW5lIGRhbWFnZSBhdCB0aGUgc2FtZSBjb25jZW50cmF0aW9uIG9mIGNhdGlvbmljIGdyb3Vwcy4gVHJhbnNtaXNzaW9uIGVsZWN0cm9uIG1pLWNyb3Njb3B5IChURU0pIGltYWdlcyBvZiB0aGVzZSBOUC1leHBvc2VkIGJhY3RlcmlhbCBjZWxscyBzaG93IHRoYXQgTlBzIGZ1bmN0aW9uYWxpemVkIHdpdGggY2F0aW9uaWMgcG9seW1lcnMgaW5kdWNlIHNpZ25pZmljYW50IG1lbWJyYW5lIGRpc3RvcnRpb24gYW5kIHByb2R1Y3Rpb24gb2Ygb3V0ZXIgbWVtYnJhbmUgdmVzaWNsZXMsIHdoaWxlIE5QcyBiZWFyaW5nIHNob3J0IGNhdGlvbmljIGxpZ2FuZHMgZXhoaWJpdCBvbmx5IHdlYWsgbWVtYnJhbmUgYXNzb2NpYXRpb24uIE91ciByZXN1bHRzIGRlbW9uc3RyYXRlIHRoYXQgdGhlIHNwYXRpYWwgZGlzdHJpYnV0aW9uIG9mIG1vbGVjdWxhciBjaGFyZ2UgcGxheXMgYSBrZXkgcm9sZSBpbiBjb250cm9sbGluZyB0aGUgaW50ZXJhY3Rpb24gb2YgY2F0aW9uaWMgbmFub3BhcnRpY2xlcyB3aXRoIGJhY3RlcmlhbCBjZWxsIG1lbWJyYW5lcyBhbmQgc3Vic2VxdWVudCBiaW9sb2dpY2FsIGltcGFjdC4gTmFub3BhcnRpY2xlcyBmdW5jdGlvbmFsaXplZCB3aXRoIGxpZ2FuZHMgaGF2aW5nIGRpZmZlcmVudCBsZW5ndGhzIGFuZCBjb25mb3JtYXRpb25zIGNhbiBoYXZlIGxhcmdlIGRpZmZlcmVuY2VzIGluIGludGVyYWN0aW9ucyBldmVuIHdoaWxlIGhhdmluZyBuZWFybHkgaWRlbnRpY2FsIHpldGEgcG90ZW50aWFscy4gV2hpbGUgemV0YSBwb3RlbnRpYWwgaXMgYSBjb252ZW5pZW50IGFuZCBjb21tb25seSB1c2VkIG1lYXN1cmUgb2YgbmFub3BhcnRpY2xlIGNoYXJnZSwgaXQgZG9lcyBub3QgY2FwdHVyZSBlc3NlbnRpYWwgZGlmZmVyZW5jZXMgaW4gbW9sZWN1bGFyLWxldmVsIG5hbm9wYXJ0aWNsZSBwcm9wZXJ0aWVzIHRoYXQgY29udHJvbCB0aGVpciBiaW9sb2dpY2FsIGltcGFjdC4iLCJleGVjQ29uZmlnSWQiOjc3MjEsImlzUmV2aWV3ZWQiOmZhbHNlLCJjb21tZW50IjpudWxsLCJpc0F0dGFjaG1lbnQiOmZhbHNlLCJzaWduYWwiOltdfSx7ImlkIjo3OTc1LCJhbGVydE5hbWUiOiJMaXRQZXJmMSIsInByaW9yaXR5Ijp7InZhbHVlIjoiVXJnZW50IiwiaWNvbkNsYXNzIjoibWRpIG1kaS1hbHBoYS11LWNpcmNsZSByZWQtMSJ9LCJ0aXRsZSI6IlN1Ym11Y29zYWwgSW5mZXJpb3IgVHVyYmluZWN0b215IHRvIFdpZGVuIHRoZSBTdXJnaWNhbCBDb3JyaWRvciBmb3IgRW5kb3Njb3BpYyBFbmRvbmFzYWwgU2t1bGwgQmFzZSBTdXJnZXJ5LiIsImF1dGhvcnMiOiJbWW9pY2hpLCBVb3p1bWldW01hc2Fha2ksIFRhbmlndWNoaV1bVG9ydSwgVW1laGFyYV1bVG9tb2FraSwgTmFrYWldW0hpZGVoaXRvLCBLaW11cmFdW0VpamksIEtvaG11cmFdIiwiYXNzaWduZWRUbyI6eyJpZCI6NzQzNSwiZnVsbE5hbWUiOiJiaGFneWEiLCJ1c2VybmFtZSI6ImJoYWd5YSIsImVtYWlsIjoiTlIuQmhhZ3lhbGFrc2htaUByeGxvZ2l4LmNvbSJ9LCJwdWJsaWNhdGlvbkRhdGUiOiIxNC1NYXktMjAyMCIsImRpc3Bvc2l0aW9uIjoiTmV3IiwicHJvZHVjdE5hbWUiOiJXSE8tRElBTUlDUk9OIE1SIiwiZXZlbnROYW1lIjpudWxsLCJhY3Rpb25Db3VudCI6MCwiaXNWYWxpZGF0aW9uU3RhdGVBY2hpZXZlZCI6ZmFsc2UsImFsZXJ0VGFncyI6W10sImFsZXJ0Q29uZmlnSWQiOjc2OTAsImFydGljbGVJZCI6IjMyNDA0NTc2IiwiYXJ0aWNsZUFic3RyYWN0IjoiVGhlIG5hc2FsIGNhdml0eSBpcyB0aGUgZXhjbHVzaXZlIHN1cmdpY2FsIGNvcnJpZG9yIGZvciBlbmRvc2NvcGljIGVuZG9uYXNhbCBzdXJnZXJ5OyBob3dldmVyLCBpdCBpcyBzb21ldGltZXMgdG9vIG5hcnJvdyB0byBhbGxvdyBleHRlbnNpdmUgc3VyZ2ljYWwgbWFuZXV2ZXJpbmcuIEhlcmUgd2Ugc2hvdyB0aGUgdGVjaG5pcXVlIG9mIHN1Ym11Y29zYWwgaW5mZXJpb3IgdHVyYmluZWN0b215IChTSVQpIHRvIHdpZGVuIHRoaXMgc3VyZ2ljYWwgY29ycmlkb3IuIEl0cyBlZmZlY3RpdmVuZXNzIGlzIGV2YWx1YXRlZCBxdWFudGl0YXRpdmVseSBieSBjb21wYXJpbmcgcHJlLSBhbmQgaW50cmFvcGVyYXRpdmUgbWFnbmV0aWMgcmVzb25hbmNlIGltYWdlcy4gQmV0d2VlbiBNYXJjaCAyMDE1IGFuZCBPY3RvYmVyIDIwMTgsIHdlIHBlcmZvcm1lZCBlbmRvc2NvcGljIGVuZG9uYXNhbCByZXNlY3Rpb24gb2YgNTcgc2t1bGwgYmFzZSB0dW1vcnMgd2l0aCAzVCBpbnRyYW9wZXJhdGl2ZSBtYWduZXRpYyByZXNvbmFuY2UgaW1hZ2luZyAoaU1SSSkuIEFtb25nIHRoZXNlIHJlc2VjdGlvbnMsIGNhc2VzIHdpdGggcHJldmlvdXMgZW5kb25hc2FsIHN1cmdlcnkgYW5kIGNhc2VzIGZvciB3aGljaCB0aGUgaU1SSSBkaWQgbm90IGNvdmVyIHRoZSBlbnRpcmUgbmFzYWwgY2F2aXR5IHdlcmUgZXhjbHVkZWQuIEZpbmFsbHksIHNpeCBjYXNlcyB3aXRoIGFuZCAxOSBjYXNlcyB3aXRob3V0IFNJVCB3ZXJlIGluY2x1ZGVkIGluIHRoZSBzdWJzZXF1ZW50IHJldHJvc3BlY3RpdmUgYW5hbHlzaXMuIFdlIG1lYXN1cmVkIHRoZSBkaW1lbnNpb25zIG9mIHRoZSBuYXJyb3dlc3QgYXJlYSBpbiBpbmZlcmlvciBuYXNhbCBjYXZpdHkgb24gcHJlLSBhbmQgaW50cmFvcGVyYXRpdmUgY29yb25hbCBwbGFuZSBnYWRvbGluaXVtIChHZCktZW5oYW5jZWQgVDEtd2VpZ2h0ZWQgTVIgaW1hZ2VzIHVzaW5nIGRlZGljYXRlZCBzb2Z0d2FyZSwgYW5kIGNvbXBhcmVkIHRoZW0uIFRoZSBpbmNpZGVuY2UgcmF0ZXMgb2YgcG9zdG9wZXJhdGl2ZSBuYXNhbCBjb21wbGFpbnRzIGF0IG91dHBhdGllbnQgY2xpbmljcyB3ZXJlIGFsc28gY29tcGFyZWQuIENvbnNpZGVyYWJsZSB3aWRlbmluZyBvZiB0aGUgaW5mZXJpb3IgbmFzYWwgY2F2aXR5IGNvdWxkIGJlIGFjaGlldmVkIHdpdGggdGhlIFNJVCwgd2hpY2ggd2FzIHN0YXRpc3RpY2FsbHkgc2lnbmlmaWNhbnQgY29tcGFyZWQgd2l0aCB0aG9zZSB3aXRob3V0IHRoZSBTSVQgKDExMS4xIMKxIDU2LjUlIHZzLiAzOS40IMKxIDU5LjQlLCByZXNwZWN0aXZlbHk7IFAgPSAwLjAwOTMpLiBJbiB0ZXJtcyBvZiB0aGUgaW5jaWRlbmNlIHJhdGUgb2YgcG9zdG9wZXJhdGl2ZSBuYXNhbCBjb21wbGFpbnRzIGF0IDYgbW9udGhzLCB0aGVyZSB3YXMgbm8gc3RhdGlzdGljYWwgZGlmZmVyZW5jZSBiZXR3ZWVuIHRoZSBncm91cHMgKDMzLjMlIHZzLiAxNS44JSwgcmVzcGVjdGl2ZWx5OyBQID0gMC4zNSkuIFNJVCBpcyBlZmZlY3RpdmUgZm9yIHdpZGVuaW5nIHRoZSBzdXJnaWNhbCBjb3JyaWRvciB3aGlsZSBrZWVwaW5nIG5hc2FsIGZ1bmN0aW9uIGFuZCBpcyBlc3BlY2lhbGx5IGhlbHBmdWwgZm9yIGxvd2VyIGNsaXZ1cyBhbmQgbGF0ZXJhbGx5IGV4dGVuZGVkIHNrdWxsIGJhc2UgbGVzaW9ucy4iLCJleGVjQ29uZmlnSWQiOjc3MjEsImlzUmV2aWV3ZWQiOmZhbHNlLCJjb21tZW50IjpudWxsLCJpc0F0dGFjaG1lbnQiOmZhbHNlLCJzaWduYWwiOltdfSx7ImlkIjo3OTg3LCJhbGVydE5hbWUiOiJMaXRQZXJmMSIsInByaW9yaXR5Ijp7InZhbHVlIjoiVXJnZW50IiwiaWNvbkNsYXNzIjoibWRpIG1kaS1hbHBoYS11LWNpcmNsZSByZWQtMSJ9LCJ0aXRsZSI6Iklyb24gb3hpZGUgbWFnbmV0aWMgbmFub3BhcnRpY2xlcyBiYXNlZCBsb3ctZmllbGQgTVIgdGhlcm1vbWV0cnkuIiwiYXV0aG9ycyI6IltZYXBlbmcsIFpoYW5nXVtTaWxpbiwgR3VvXVtQdSwgWmhhbmddW0ppbmcsIFpob25nXVtXZW56aG9uZywgTGl1XSIsImFzc2lnbmVkVG8iOnsiaWQiOjc0MzUsImZ1bGxOYW1lIjoiYmhhZ3lhIiwidXNlcm5hbWUiOiJiaGFneWEiLCJlbWFpbCI6Ik5SLkJoYWd5YWxha3NobWlAcnhsb2dpeC5jb20ifSwicHVibGljYXRpb25EYXRlIjoiMTQtTWF5LTIwMjAiLCJkaXNwb3NpdGlvbiI6Ik5ldyIsInByb2R1Y3ROYW1lIjoiV0hPLURJQU1JQ1JPTiBNUiIsImV2ZW50TmFtZSI6bnVsbCwiYWN0aW9uQ291bnQiOjAsImlzVmFsaWRhdGlvblN0YXRlQWNoaWV2ZWQiOmZhbHNlLCJhbGVydFRhZ3MiOltdLCJhbGVydENvbmZpZ0lkIjo3NjkwLCJhcnRpY2xlSWQiOiIzMjQwODI3NCIsImFydGljbGVBYnN0cmFjdCI6IlRoaXMgcGFwZXIgcmVwb3J0cyBvbiBhIGhpZ2hseSBhY2N1cmF0ZSBhcHByb2FjaCBvZiBtYWduZXRpYyByZXNvbmFuY2UgKE1SKSB0aGVybW9tZXRyeSB1c2luZyBpcm9uIG94aWRlIG1hZ25ldGljIG5hbm9wYXJ0aWNsZXMgKE1OUHMpIGFzIHRlbXBlcmF0dXJlIHNlbnNvcnMuIEFuIGVtcGlyaWNhbCBtb2RlbCBmb3IgdGhlIGRlc2NyaXB0aW9uIG9mIHRoZSB0ZW1wZXJhdHVyZSBkZXBlbmRlbnRSMnJlbGF4YXRpb24gcmF0ZSBpcyBwcm9wb3NlZCBieSB0YWtpbmcgaW50byBhY2NvdW50IHRoZSB0ZW1wZXJhdHVyZSBzZW5zaXRpdml0eSBvZiB0aGUgTU5QIG1hZ25ldGl6YXRpb24uIFRoZSB0ZW1wZXJhdHVyZSBzZW5zaXRpdml0eSBvZiB0aGUgTU5QIG1hZ25ldGl6YXRpb24gKM63KSBhbmQgdGhlIHRlbXBlcmF0dXJlIHNlbnNpdGl2aXR5IG9mIHRoZVIycmVsYXhhdGlvbiByYXRlICjOuikgYXJlIHNpbXVsYXRlZCB3aXRoIHRoZSBwcm9wb3NlZCBlbXBpcmljYWwgbW9kZWxzIHRvIGludmVzdGlnYXRlIHRoZWlyIGRlcGVuZGVuY2Ugb24gdGhlIG1hZ25ldGljIGZpZWxkIGFuZCB0aGUgcGFydGljbGUgc2l6ZS4gU2ltdWxhdGlvbiByZXN1bHRzIHNob3cgdGhlIGV4aXN0ZW5jZSBvZiBvcHRpbWFsIG1hZ25ldGljIGZpZWxkc0jOv863YW5kSM6/zrp0aGF0IG1heGltaXplIHRoZSB0ZW1wZXJhdHVyZSBzZW5zaXRpdml0aWVzzrdhbmTOui4gRnVydGhlcm1vcmUsIHNpbXVsYXRpb25zIGFuZCBleHBlcmltZW50cyBkZW1vbnN0cmF0ZSB0aGF0IHRoZSBvcHRpbWFsIG1hZ25ldGljIGZpZWxkSM6/zrcoSM6/zropIGRlY3JlYXNlcyB3aXRoIGluY3JlYXNpbmcgdGhlIHBhcnRpY2xlIHNpemUuIEV4cGVyaW1lbnRzIG9uIHRlbXBlcmF0dXJlIGRlcGVuZGVudFIycmVsYXhhdGlvbiByYXRlIGFyZSBwZXJmb3JtZWQgYXQgZGlmZmVyZW50IG1hZ25ldGljIGZpZWxkcyBmb3IgTU5QIHNhbXBsZXMgd2l0aCBkaWZmZXJlbnQgaXJvbiBjb25jZW50cmF0aW9uLiBFeHBlcmltZW50YWwgcmVzdWx0cyBzaG93IHRoYXQgdGhlIHByb3Bvc2VkIE1SIHRoZXJtb21ldHJ5IHVzaW5nIE1OUHMgYXMgdGVtcGVyYXR1cmUgc2Vuc29ycyBhbGxvd3MgYSB0ZW1wZXJhdHVyZSBlc3RpbWF0aW9uIGFjY3VyYWN5IG9mIGFib3V0IDAuMDUgwrBDLiBXZSBiZWxpZXZlIHRoYXQgdGhlIGFjaGlldmVkIGFwcHJvYWNoIG9mIGhpZ2hseSBhY2N1cmF0ZSBNUiB0aGVybW9tZXRyeSBpcyBvZiBncmVhdCBpbnRlcmVzdCBhbmQgc2lnbmlmaWNhbmNlIHRvIGJpb21lZGljaW5lIGFuZCBiaW9sb2d5LiIsImV4ZWNDb25maWdJZCI6NzcyMSwiaXNSZXZpZXdlZCI6ZmFsc2UsImNvbW1lbnQiOm51bGwsImlzQXR0YWNobWVudCI6ZmFsc2UsInNpZ25hbCI6W119LHsiaWQiOjg2NzAsImFsZXJ0TmFtZSI6IlBlcmZUZXN0NCIsInByaW9yaXR5Ijp7InZhbHVlIjoiTWVkaXVtIiwiaWNvbkNsYXNzIjoibWRpIG1kaS1hbHBoYS1tLWNpcmNsZSBibHVlLTEifSwidGl0bGUiOiJDdW11bGF0aXZlIEV2aWRlbmNlIGZvciBBc3NvY2lhdGlvbiBvZiBBY2V0YW1pbm9waGVuIEV4cG9zdXJlIGFuZCBBbGxlcmdpYyBSaGluaXRpcy4iLCJhdXRob3JzIjoiW1lhbiwgWmVuZ11bQmluLCBTb25nXVtZYW5nLCBHYW9dW1dlbiwgQ2FvXVtKaWEsIExpXVtRaWFuZmFuZywgTGl1XVtKaWFuLCBMaXVdIiwiYXNzaWduZWRUbyI6eyJpZCI6NjU3OCwiZnVsbE5hbWUiOiJBZG1pbiIsIm5hbWUiOiJBZG1pbiJ9LCJwdWJsaWNhdGlvbkRhdGUiOiIxMi1NYXktMjAyMCIsImRpc3Bvc2l0aW9uIjoiTmV3IiwicHJvZHVjdE5hbWUiOiJQQVJBQ0VUQU1PTCIsImV2ZW50TmFtZSI6bnVsbCwiYWN0aW9uQ291bnQiOjAsImlzVmFsaWRhdGlvblN0YXRlQWNoaWV2ZWQiOmZhbHNlLCJhbGVydFRhZ3MiOltdLCJhbGVydENvbmZpZ0lkIjo4NjAyLCJhcnRpY2xlSWQiOiIzMjM5NjkxMiIsImFydGljbGVBYnN0cmFjdCI6IlNldmVyYWwgc3R1ZGllcyBoYXZlIGxpbmtlZCBhY2V0YW1pbm9waGVuIGV4cG9zdXJlIHRvIHRoZSByaXNrIG9mIGFsbGVyZ2ljIHJoaW5pdGlzLCB3aXRoIGNvbnRyb3ZlcnNpYWwgcmVzdWx0cy5BIHN5c3RlbWF0aWMgc2VhcmNoIG9mIFB1Yk1lZCwgRW1iYXNlLCBDb2NocmFuZSBMaWJyYXJ5LCBhbmQgV2ViIG9mIFNjaWVuY2Ugd2FzIGNvbmR1Y3RlZCB1cCB0byBEZWNlbWJlciAxLCAyMDE5LiBXZSBpbmNsdWRlZCBvYnNlcnZhdGlvbmFsIHN0dWRpZXMgdGhhdCBleGFtaW5lZCB0aGUgYXNzb2NpYXRpb24gYmV0d2VlbiBhY2V0YW1pbm9waGVuIGV4cG9zdXJlIGFuZCB0aGUgcmlzayBvZiBhbGxlcmdpYyByaGluaXRpcy4gVHdvIHJldmlld2VycyBpbmRlcGVuZGVudGx5IGV4dHJhY3RlZCBkYXRhIGFuZCBhc3Nlc3NlZCBzdHVkeSBxdWFsaXR5LiBTdW1tYXJ5IG9kZHMgcmF0aW9zIChPUnMpIGFuZCA5NSUgY29uZmlkZW5jZSBpbnRlcnZhbHMgKENJcykgd2VyZSBjYWxjdWxhdGVkIHVzaW5nIHJhbmRvbS1lZmZlY3RzIG1ldGEtYW5hbHlzaXMuRWlnaHRlZW4gc3R1ZGllcyB3aXRoIDg3MCw0OTIgcGFydGljaXBhbnRzIHdlcmUgaW5jbHVkZWQuIEFuYWx5c2lzIHNob3dlZCB0aGF0IGFjZXRhbWlub3BoZW4gZXhwb3N1cmUgd2FzIGFzc29jaWF0ZWQgd2l0aCBhbiBpbmNyZWFzZWQgcmlzayBvZiBhbGxlcmdpYyByaGluaXRpcyAoT1I6IDEuNTQsIDk1JSBDSTogMS40MS0xLjY5KS4gQWxzbywgZWFybHkgZXhwb3N1cmUgYW5kIGV4cG9zdXJlIGluIHRoZSBwYXN0IHllYXIgdG8gYWNldGFtaW5vcGhlbiB3YXMgcG9zaXRpdmVseSBhc3NvY2lhdGVkIHdpdGggcmlzayBvZiBhbGxlcmdpYyByaGluaXRpcyAoT1I6IDEuMzQsIDk1JSBDSTogMS4yMS0xLjQ5IGFuZCBPUjogMS43NCwgOTUlIENJOiAxLjQ4LTIuMDQsIHJlc3BlY3RpdmVseSkuIFRoZSByaXNrIG9mIGFsbGVyZ2ljIHJoaW5pdGlzIHdhcyBncmVhdGVyIGZvciBwZW9wbGUgd2hvIGhhZCBhY2V0YW1pbm9waGVuIGV4cG9zdXJlIG9uY2UgcGVyIG1vbnRoIG92ZXIgdGhlIHBhc3QgeWVhciAoT1I6IDEuOTAsIDk1JSBDSTogMS42MC0yLjI2KSBjb21wYXJlZCB0byBvbmNlIHBlciB5ZWFyIChPUjogMS4yOCwgOTUlIENJOiAxLjExLTEuNDgpLldpdGggb3VyIG1ldGEtYW5hbHlzaXMsIHdlIHByb3ZpZGUgdGhlIGV2aWRlbmNlIHRoYXQgZXhwb3N1cmUgdG8gYWNldGFtaW5vcGhlbiBpcyBhc3NvY2lhdGVkIHdpdGggYW4gaW5jcmVhc2VkIHJpc2sgb2YgYWxsZXJnaWMgcmhpbml0aXMuIEluIGFkZGl0aW9uLCBhY2V0YW1pbm9waGVuIGV4cG9zdXJlIGluIGVhcmx5IGxpZmUgYW5kIGFjZXRhbWlub3BoZW4gZXhwb3N1cmUgaW4gdGhlIHBhc3QgeWVhciBhcmUgcG9zaXRpdmVseSBhc3NvY2lhdGVkIHdpdGggdGhlIHJpc2sgb2YgYWxsZXJnaWMgcmhpbml0aXMuIEZ1dHVyZSByZXNlYXJjaCBpcyBuZWVkZWQgdG8gZXZhbHVhdGUgd2hldGhlciB0aGUgYXNzb2NpYXRpb24gaXMgY2F1c2FsLiIsImV4ZWNDb25maWdJZCI6ODYzMywiaXNSZXZpZXdlZCI6ZmFsc2UsImNvbW1lbnQiOm51bGwsImlzQXR0YWNobWVudCI6ZmFsc2UsInNpZ25hbCI6W119LHsiaWQiOjc4OTIsImFsZXJ0TmFtZSI6IkxpdFBlcmYxIiwicHJpb3JpdHkiOnsidmFsdWUiOiJVcmdlbnQiLCJpY29uQ2xhc3MiOiJtZGkgbWRpLWFscGhhLXUtY2lyY2xlIHJlZC0xIn0sInRpdGxlIjoiRW5hYmxpbmcgZWxlY3Ryb2NoZW1pY2FsIGNvbXBhdGliaWxpdHkgb2Ygbm9uLWZsYW1tYWJsZSBwaG9zcGhhdGUgZWxlY3Ryb2x5dGVzIGZvciBsaXRoaXVtLWlvbiBiYXR0ZXJpZXMgYnkgdHVuaW5nIHRoZWlyIG1vbGFyIHJhdGlvcyBvZiBzYWx0IHRvIHNvbHZlbnQuIiwiYXV0aG9ycyI6IltYaW5nd2VpLCBMaXVdW1hpYW9odWksIFNoZW5dW0ZhcGluZywgWmhvbmddW1hpYW5nbWluZywgRmVuZ11bV2VpaHVhLCBDaGVuXVtYaW5waW5nLCBBaV1bSGFueGksIFlhbmddW1l1bGlhbmcsIENhb10iLCJhc3NpZ25lZFRvIjp7ImlkIjo3NDM1LCJmdWxsTmFtZSI6ImJoYWd5YSIsInVzZXJuYW1lIjoiYmhhZ3lhIiwiZW1haWwiOiJOUi5CaGFneWFsYWtzaG1pQHJ4bG9naXguY29tIn0sInB1YmxpY2F0aW9uRGF0ZSI6IjEyLU1heS0yMDIwIiwiZGlzcG9zaXRpb24iOiJOZXciLCJwcm9kdWN0TmFtZSI6IldITy1ESUFNSUNST04gTVIiLCJldmVudE5hbWUiOm51bGwsImFjdGlvbkNvdW50IjowLCJpc1ZhbGlkYXRpb25TdGF0ZUFjaGlldmVkIjpmYWxzZSwiYWxlcnRUYWdzIjpbXSwiYWxlcnRDb25maWdJZCI6NzY5MCwiYXJ0aWNsZUlkIjoiMzIzOTYxNTUiLCJhcnRpY2xlQWJzdHJhY3QiOiJXZSBkZXZlbG9wIGEgbmV3IHR5cGUgb2YgZWxlY3Ryb2x5dGUgd2l0aCBhIGhpZ2ggbW9sYXIgcmF0aW8gKE1SKSBvZiBzYWx0IHRvIHNvbHZlbnQgYnV0IGEgbG93IG1vbGFyIGNvbmNlbnRyYXRpb24gYnkgYWRqdXN0aW5nIHRoZSBtb2xhciBtYXNzIG9mIHRoZSBzb2x2ZW50LiBUaGUgcHJlc2VudCAx4oCJOuKAiTIgTGlGU0ktdHJpYW15bCBwaG9zcGhhdGUgZWxlY3Ryb2x5dGUgZXhoaWJpdHMgYSBsb3cgbW9sYXIgY29uY2VudHJhdGlvbiBvZiBvbmx5IDEuMzUgTSBhbG9uZyB3aXRoIGV4Y2VsbGVudCBlbGVjdHJvY2hlbWljYWwgc3RhYmlsaXR5IGFnYWluc3QgdGhlIGdyYXBoaXRlIGFub2RlLiIsImV4ZWNDb25maWdJZCI6NzcyMSwiaXNSZXZpZXdlZCI6ZmFsc2UsImNvbW1lbnQiOm51bGwsImlzQXR0YWNobWVudCI6ZmFsc2UsInNpZ25hbCI6W119LHsiaWQiOjc5OTEsImFsZXJ0TmFtZSI6IkxpdFBlcmYxIiwicHJpb3JpdHkiOnsidmFsdWUiOiJVcmdlbnQiLCJpY29uQ2xhc3MiOiJtZGkgbWRpLWFscGhhLXUtY2lyY2xlIHJlZC0xIn0sInRpdGxlIjoiQ2F1c2FsIGFzc29jaWF0aW9uIG9mIGNpcmN1bGF0aW5nIGNob2xlc3Rlcm9sIGxldmVscyB3aXRoIGRlbWVudGlhOiBhIG1lbmRlbGlhbiByYW5kb21pemF0aW9uIG1ldGEtYW5hbHlzaXMuIiwiYXV0aG9ycyI6IltYaWFveXUsIFpoYW5nXVtRaXV5dWUsIFRpYW5dW0RpLCBMaXVdW1RhbywgR2VuZ11bWGl6aHUsIFh1XVtTaXFpLCBHZV1bRGVxaWFuZywgWmhlbmddW0xpanVhbiwgV3VdW01hbnNodSwgU29uZ11bSGFpZmVuZywgSG91XVtXZWksIFdhbmddW1lvdXhpbiwgV2FuZ10iLCJhc3NpZ25lZFRvIjp7ImlkIjo3NDM1LCJmdWxsTmFtZSI6ImJoYWd5YSIsInVzZXJuYW1lIjoiYmhhZ3lhIiwiZW1haWwiOiJOUi5CaGFneWFsYWtzaG1pQHJ4bG9naXguY29tIn0sInB1YmxpY2F0aW9uRGF0ZSI6IjEyLU1heS0yMDIwIiwiZGlzcG9zaXRpb24iOiJOZXciLCJwcm9kdWN0TmFtZSI6IldITy1ESUFNSUNST04gTVIiLCJldmVudE5hbWUiOm51bGwsImFjdGlvbkNvdW50IjowLCJpc1ZhbGlkYXRpb25TdGF0ZUFjaGlldmVkIjpmYWxzZSwiYWxlcnRUYWdzIjpbXSwiYWxlcnRDb25maWdJZCI6NzY5MCwiYXJ0aWNsZUlkIjoiMzIzOTg2ODYiLCJhcnRpY2xlQWJzdHJhY3QiOiJQcm9zcGVjdGl2ZSBzdHVkaWVzIGhhdmUgc2hvd24gdGhhdCBhYm5vcm1hbGx5IGNpcmN1bGF0aW5nIGNob2xlc3Rlcm9sIGlzIGFzc29jaWF0ZWQgd2l0aCB0aGUgcmlzayBvZiBkZW1lbnRpYS4gSG93ZXZlciwgd2hldGhlciB0aGUgYXNzb2NpYXRpb24gaXMgY2F1c2FsIG9yIG5vdCByZW1haW5zIHVuY2xlYXIuIFdlIGF0dGVtcHQgdG8gaW5mZXIgdGhlIGNhdXNhbCBhc3NvY2lhdGlvbiBpbiBhIE1SIG1ldGEtYW5hbHlzaXMgYnkgdXNpbmcgQXBvRSBnZW5lIHBvbHltb3JwaGlzbXMgYXMgaW5zdHJ1bWVudCB2YXJpYWJsZXMuIFN0dWRpZXMgd2l0aCBkZW1lbnRpYSByaXNrICgyNyBzdHVkaWVzKSBvciBjaXJjdWxhdGluZyBsaXBpZCBsZXZlbHMgKDcgc3R1ZGllcykgd2VyZSBpbmNsdWRlZCwgd2l0aCB0b3RhbGx5IDMxMzYgZGVtZW50aWEgcGF0aWVudHMgYW5kIDMxMDMgaGVhbHRoeSBjb250cm9scy4gVGhlIGFuYWx5c2VzIHNob3dlZCB0aGF0IGNhcnJpZXJzIG9mIM61MiBhbGxlbGUgc2lnbmlmaWNhbnRseSB3ZXJlIG9mIGRlY3JlYXNlZCByaXNrIG9mIEFEIChPUuKAiT3igIkwLjcwOyA5NSUgQ0k6IDAuNTgtMC44NDsgUOKAiTzigIkwLjAxKSwgd2hlcmVhcyBjYXJyaWVycyBvZiDOtTQgYWxsZWxlIHdlcmUgb2YgaW5jcmVhc2VkIHJpc2sgb2YgQUQgKE9S4oCJPeKAiTMuNjI7IDk1JSBDSTogMy4wMy00LjMyOyBQ4oCJPOKAiTAuMDUpLCBjb21wYXJlZCB0byB0aGVzZSBvZiDOtTMgYWxsZWxlLiBDaXJjdWxhdGluZyBUQyB3YXMgc2lnbmlmaWNhbnRseSByZWR1Y2VkIGluIGNhcnJpZXJzIG9mIM61MiBhbGxlbGUgKFdNROKAiT3igIkt4oCJMC4yOeKAiW1tb2wvTDsgOTUlIENJOiAtMC41NCB0byAtMC4wMzsgUOKAiTzigIkwLjA1KSBhbmQgaW5jcmVhc2VkIGluIGNhcnJpZXJzIG9mIM61NCBhbGxlbGUgKFdNROKAiT3igIkwLjQy4oCJbW1vbC9sOyA5NSUgQ0k6IDAuMDAxLTAuODQ7IFDigIk84oCJMC4wNSkuIEluIGFkZGl0aW9uLCBjYXJyaWVycyBvZiDOtTQgYWxsZWxlIGhhZCByZWR1Y3Rpb24gaW4gY2lyY3VsYXRpbmcgSERMLUMgKFdNROKAiT3igIkt4oCJMC4wNOKAiW1tb2wvTDsgOTUlIENJOuKAiS3igIkwLjA3IHRvIC0wLjAwMTsgUOKAiTzigIkwLjA1KS4gSW4gY29tcGFyaW5nIGFsbGVsZSDOtTIgd2l0aCDOtTMsIHRoZSBwcmVkaWN0ZWQgT1Igb2YgaGF2aW5nIEFEIGZvciAx4oCJbWcvZEwgaW5jcmVtZW50IGluIGNpcmN1bGF0aW5nIFRDIHdhcyAwLjk3ICg5NSUgQ0k6IDAuODYtMC45ODsgUOKAiTzigIkwLjA1KS4gQ29tcGFyaW5nIGFsbGVsZSDOtTQgd2l0aCDOtTMsIHRoZSBwcmVkaWN0ZWQgT1IgZm9yIGEgMeKAiW1nL2RMIGluY3JlbWVudCBpbiBUQyB3YXMgMS4wOCAoOTUlIENJOiAxLjA1LTE3LjU4OyBQ4oCJPOKAiTAuMDUpLCBhbmQgcmVkdWN0aW9uIGluIEhETC1DIHdhcyAyLjMwICg5NSUgQ0k6IDEuNTEtNDMuOTk7IFDigIk84oCJMC4wNSkuIE91ciBmaW5kaW5ncyBkZW1vbnN0cmF0ZSB0aGF0IGhpZ2ggY2lyY3VsYXRpbmcgVEMgYW5kIHJlZHVjZWQgSERMLUMgbGV2ZWxzIG1pZ2h0IGJlIHBvdGVudGlhbCByaXNrIGZhY3RvcnMgb2YgdGhlIGRldmVsb3BtZW50IG9mIEFELiIsImV4ZWNDb25maWdJZCI6NzcyMSwiaXNSZXZpZXdlZCI6ZmFsc2UsImNvbW1lbnQiOm51bGwsImlzQXR0YWNobWVudCI6ZmFsc2UsInNpZ25hbCI6W119LHsiaWQiOjc5MDIsImFsZXJ0TmFtZSI6IkxpdFBlcmYxIiwicHJpb3JpdHkiOnsidmFsdWUiOiJVcmdlbnQiLCJpY29uQ2xhc3MiOiJtZGkgbWRpLWFscGhhLXUtY2lyY2xlIHJlZC0xIn0sInRpdGxlIjoiSW4gc2l0dSAzRC10by0yRCB0cmFuc2Zvcm1hdGlvbiBvZiBtYW5nYW5lc2UtYmFzZWQgbGF5ZXJlZCBzaWxpY2F0ZXMgZm9yIHR1bW9yLXNwZWNpZmljIFQxLXdlaWdodGVkIG1hZ25ldGljIHJlc29uYW5jZSBpbWFnaW5nIHdpdGggaGlnaCBzaWduYWwtdG8tbm9pc2UgYW5kIGV4Y3JldGFiaWxpdHkuIiwiYXV0aG9ycyI6IltYaWFvd2VpLCBMaV1bSGFvLCBaaG91XVtaaGlodWksIE5pdV1bS2FuZywgWmhlbmddW0RlY2hhbywgTml1XVtXZW5ydSwgWmhhb11bWGlhb2hhbmcsIExpdV1bV2VpbWVuZywgU2ldW0NoZW5nZmVuZywgTGldW1BlbmcsIFdhbmddW0p1biwgQ2FvXVtZb25nc2hlbmcsIExpXVtHdWFuZ3d1LCBXZW5dIiwiYXNzaWduZWRUbyI6eyJpZCI6NzQzNSwiZnVsbE5hbWUiOiJiaGFneWEiLCJ1c2VybmFtZSI6ImJoYWd5YSIsImVtYWlsIjoiTlIuQmhhZ3lhbGFrc2htaUByeGxvZ2l4LmNvbSJ9LCJwdWJsaWNhdGlvbkRhdGUiOiIxNC1NYXktMjAyMCIsImRpc3Bvc2l0aW9uIjoiTmV3IiwicHJvZHVjdE5hbWUiOiJXSE8tRElBTUlDUk9OIE1SIiwiZXZlbnROYW1lIjpudWxsLCJhY3Rpb25Db3VudCI6MCwiaXNWYWxpZGF0aW9uU3RhdGVBY2hpZXZlZCI6ZmFsc2UsImFsZXJ0VGFncyI6W10sImFsZXJ0Q29uZmlnSWQiOjc2OTAsImFydGljbGVJZCI6IjMyNDA3MDcyIiwiYXJ0aWNsZUFic3RyYWN0IjoiUmVjZW50bHksIE1uKElJKS1iYXNlZCBUMS13ZWlnaHRlZCBtYWduZXRpYyByZXNvbmFuY2UgaW1hZ2luZyAoTVJJKSBjb250cmFzdCBhZ2VudHMgKENBcykgaGF2ZSBiZWVuIGV4cGxvcmVkIHdpZGVseSBmb3IgY2FuY2VyIGRpYWdub3Npcy4gSG93ZXZlciwgdGhlIFwiYWx3YXlzLW9uXCIgcHJvcGVydGllcyBhbmQgcG9vciBleGNyZXRhYmlsaXR5IG9mIHRoZSBjb252ZW50aW9uYWwgTW4oSUkpLWJhc2VkIENBcyBsZWFkcyB0byBoaWdoIGJhY2tncm91bmQgc2lnbmFscyBhbmQgdW5zYXRpc2ZhY3RvcnkgY2xlYXJhbmNlIGZyb20gdGhlIGJvZHkuIEhlcmUsIHdlIHJlcG9ydCBhIFwiSW4gc2l0dSB0aHJlZS1kaW1lbnNpb25hbCB0byB0d28tZGltZW5zaW9uYWwgKDNELXRvLTJEKSB0cmFuc2Zvcm1hdGlvblwiIG1ldGhvZCB0byBwcmVwYXJlIG5vdmVsIGV4Y3JldGFibGUgMkQgbWFuZ2FuZXNlLWJhc2VkIGxheWVyZWQgc2lsaWNhdGVzIChNbi1MU05zKSB3aXRoIGV4dHJlbWVseSBoaWdoIHNpZ25hbC10by1ub2lzZSBmb3IgdHVtb3Itc3BlY2lmaWMgTVIgaW1hZ2luZyBmb3IgdGhlIGZpcnN0IHRpbWUuIE91ciBvYnNlcnZhdGlvbnMgY29tYmluZWQgd2l0aCBkZW5zaXR5IGZ1bmN0aW9uYWwgdGhlb3J5IChERlQpIGNhbGN1bGF0aW9ucyByZXZlYWwgdGhhdCAzRCBtZXRhbChNbiwgRmUsIENvKSBveGlkZXMgbmFub3BhcnRpY2xlcyBhcmUgaW5pdGlhbGx5IGZvcm1lZCBmcm9tIHRoZSBtb2xlY3VsYXIgcHJlY3Vyc29yIHNvbHV0aW9uIGFuZCB0aGVuIGluIHNpdHUgdHJhbnNmb3JtIGludG8gMkQgbWV0YWwoTW4sIEZlLCBDbyktYmFzZWQgbGF5ZXJlZCBzaWxpY2F0ZXMgdHJpZ2dlcmVkIGJ5IHRoZSBhZGRpdGlvbiBvZiB0ZXRyYWV0aHlsIG9ydGhvc2lsaWNhdGUsIHdoaWNoIHByb3ZpZGUgYSB0aW1lIHNhdmluZyBhbmQgdmVyc2F0aWxlIHdheSB0byBwcmVwYXJlIG5vdmVsIDJEIHNpbGljYXRlIG5hbm9tYXRlcmlhbHMuIFRoZSB1bmlxdWUgaW9uIGV4Y2hhbmdlYWJsZSBjYXBhY2l0eSBhbmQgaGlnaCBob3N0IGxheWVyIGNoYXJnZSBkZW5zaXR5IGVuZG93cyBNbi1MU05zIGFuIFwiT04vT0ZGXCIgcEgvR1NIIHN0aW11bGktYWN0aXZhdGlibGUgVDEgcmVsYXhpdml0eSB3aXRoIHN1cGVyYiBoaWdoIHNpZ25hbC10by1ub2lzZSAoNjQwLCAxMjAwLWZvbGQgZm9yIHNsaWdodGx5IGFjaWRpYyBhbmQgcmVkdWN0aXZlIGNoYW5nZXMsIHJlc3BlY3RpdmVseSkuIEZ1cnRoZXIgaW4gdml2byBNUiBpbWFnaW5nIHJldmVhbHMgdGhhdCBNbi1MU05zIGV4aGliaXQgYSBjb250aW51b3VzbHkgcmFwaWQgVDEtTVJJIHNpZ25hbCBlbmhhbmNlbWVudCBpbiB0dW1vciBhbmQgbm8gdmlzaWJsZSBzaWduYWwgZW5oYW5jZW1lbnQgaW4gbm9ybWFsIHRpc3N1ZSwgaW5kaWNhdGluZyBhbiBleGNlbGxlbnQgdHVtb3Itc3BlY2lmaWMgaW1hZ2luZy4gSW4gYWRkaXRpb24sIE1uLUxTTnMgZXhoaWJpdCBhIHJhcGlkIGV4Y3JldGlvbiBmcm9tIHRoZSBtaWNlIGJvZHkgaW4gMjQgaCBhbmQgaW52aXNpYmxlIG9yZ2FuIHRveGljaXR5LCB3aGljaCBjb3VsZCBoZWxwIHRvIHNvbHZlIHRoZSBjcml0aWNhbCBpbnRyYWN0YWJsZSBkZWdyYWRhdGlvbiBpc3N1ZSBvZiBjb252ZW50aW9uYWwgaW5vcmdhbmljIENBcy4gTW9yZW92ZXIsIHRoZSB0dW1vciBtaWNyb2Vudmlyb25tZW50IChwSC9HU0gvSDJPMikgc3BlY2lmaWMgZGVncmFkYWJpbGl0eSBvZiBNbi1MU05zIGNvdWxkIGhlbHAgdG8gaW1wcm92ZSBwZW5ldHJhdGlvbiBkZXB0aCBvZiBwYXJ0aWNsZXMgaW50byB0aGUgdHVtb3IgcGFyZW5jaHltYS4gRGV2ZWxvcGluZyB0aGlzIG5vdmVsIE1uLUxTTnMgY29udHJhc3QgYWdlbnQsIHRvZ2V0aGVyIHdpdGggYWxyZWFkeSBkZW1vbnN0cmF0ZWQgY2FwYWNpdHkgb2YgbGF5ZXJlZCBzaWxpY2F0ZXMgZm9yIGRydWcgYW5kIGdlbmUgZGVsaXZlcnksIHByb3ZpZGVzIG9wcG9ydHVuaXRpZXMgZm9yIGZ1dHVyZSBjYW5jZXIgdGhlcmFub3N0aWNzLiIsImV4ZWNDb25maWdJZCI6NzcyMSwiaXNSZXZpZXdlZCI6ZmFsc2UsImNvbW1lbnQiOm51bGwsImlzQXR0YWNobWVudCI6ZmFsc2UsInNpZ25hbCI6W119LHsiaWQiOjc5MjAsImFsZXJ0TmFtZSI6IkxpdFBlcmYxIiwicHJpb3JpdHkiOnsidmFsdWUiOiJVcmdlbnQiLCJpY29uQ2xhc3MiOiJtZGkgbWRpLWFscGhhLXUtY2lyY2xlIHJlZC0xIn0sInRpdGxlIjoiTm9uLWdlbmV0aWMgYmlvbWFya2VycyBhbmQgY29sb3JlY3RhbCBjYW5jZXIgcmlzazogVW1icmVsbGEgcmV2aWV3IGFuZCBldmlkZW5jZSB0cmlhbmd1bGF0aW9uLiIsImF1dGhvcnMiOiJbWGlhb21lbmcsIFpoYW5nXVtEaXBlbmRlciwgR2lsbF1bWWF6aG91LCBIZV1bVGlhbiwgWWFuZ11bWHVlLCBMaV1bR3JhY2UsIE1vbm9yaV1bSGFycnksIENhbXBiZWxsXVtNYWxjb2xtLCBEdW5sb3BdW0tvbnN0YW50aW5vcyBLLCBUc2lsaWRpc11bTWFyaWEsIFRpbW9mZWV2YV1bRXZyb3BpLCBUaGVvZG9yYXRvdV0iLCJhc3NpZ25lZFRvIjp7ImlkIjo3NDM1LCJmdWxsTmFtZSI6ImJoYWd5YSIsInVzZXJuYW1lIjoiYmhhZ3lhIiwiZW1haWwiOiJOUi5CaGFneWFsYWtzaG1pQHJ4bG9naXguY29tIn0sInB1YmxpY2F0aW9uRGF0ZSI6IjEyLU1heS0yMDIwIiwiZGlzcG9zaXRpb24iOiJOZXciLCJwcm9kdWN0TmFtZSI6IldITy1ESUFNSUNST04gTVIiLCJldmVudE5hbWUiOm51bGwsImFjdGlvbkNvdW50IjowLCJpc1ZhbGlkYXRpb25TdGF0ZUFjaGlldmVkIjpmYWxzZSwiYWxlcnRUYWdzIjpbXSwiYWxlcnRDb25maWdJZCI6NzY5MCwiYXJ0aWNsZUlkIjoiMzI0MDAwOTIiLCJhcnRpY2xlQWJzdHJhY3QiOiJTZXZlcmFsIGFzc29jaWF0aW9ucyBiZXR3ZWVuIG5vbi1nZW5ldGljIGJpb21hcmtlcnMgYW5kIGNvbG9yZWN0YWwgY2FuY2VyIChDUkMpIHJpc2sgaGF2ZSBiZWVuIGRldGVjdGVkLCBidXQgdGhlIHN0cmVuZ3RoIG9mIGV2aWRlbmNlIGFuZCB0aGUgZGlyZWN0aW9uIG9mIGFzc29jaWF0aW9ucyBhcmUgbm90IGNvbmZpcm1lZC4gV2UgYWltZWQgdG8gZXZhbHVhdGUgdGhlIGV2aWRlbmNlIG9mIHRoZXNlIGFzc29jaWF0aW9ucyBhbmQgaW50ZWdyYXRlIHJlc3VsdHMgZnJvbSBkaWZmZXJlbnQgYXBwcm9hY2hlcyB0byBhc3Nlc3MgY2F1c2FsIGluZmVyZW5jZS4gV2Ugc2VhcmNoZWQgTWVkbGluZSBhbmQgRW1iYXNlIGZvciBtZXRhLWFuYWx5c2VzIG9mIG9ic2VydmF0aW9uYWwgc3R1ZGllcywgbWV0YS1hbmFseXNlcyBvZiByYW5kb21pemVkIGNsaW5pY2FsIHRyaWFscyAoUkNUcyksIGFuZCBNZW5kZWxpYW4gcmFuZG9taXphdGlvbiAoTVIpIHN0dWRpZXMgbWVhc3VyaW5nIHRoZSBhc3NvY2lhdGlvbnMgYmV0d2VlbiBub24tZ2VuZXRpYyBiaW9tYXJrZXJzIGFuZCBDUkMgcmlzayBhbmQgbWV0YS1hbmFseXNlcyBvZiBSQ1RzIG9uIHN1cHBsZW1lbnRhcnkgbWljcm9udXRyaWVudHMuIFdlIHJlcGVhdGVkIHRoZSBtZXRhLWFuYWx5c2VzIHVzaW5nIHJhbmRvbS1lZmZlY3RzIG1vZGVscyBhbmQgY2F0ZWdvcml6ZWQgdGhlIGV2aWRlbmNlIGJhc2VkIG9uIHByZWRlZmluZWQgY3JpdGVyaWEuIFdlIGRlc2NyaWJlZCBlYWNoIE1SIHN0dWR5IGFuZCBldmFsdWF0ZWQgdGhlaXIgY3JlZGliaWxpdHkuIFNldmVudHktdHdvIG1ldGEtYW5hbHlzZXMgb2Ygb2JzZXJ2YXRpb25hbCBzdHVkaWVzIGFuZCAxOCBNUiBzdHVkaWVzIG9uIG5vbi1nZW5ldGljIGJpb21hcmtlcnMgYW5kIHNpeCBtZXRhLWFuYWx5c2VzIG9mIFJDVHMgb24gbWljcm9udXRyaWVudCBpbnRha2UgYW5kIENSQyByaXNrIGNvbnNpZGVyaW5nIDY1LCA0MiwgYW5kIGZpdmUgdW5pcXVlIGFzc29jaWF0aW9ucywgcmVzcGVjdGl2ZWx5LCB3ZXJlIGlkZW50aWZpZWQuIE5vIG1ldGEtYW5hbHlzZXMgb2YgUkNUcyBvbiBibG9vZCBsZXZlbCBiaW9tYXJrZXJzIGhhdmUgYmVlbiBmb3VuZC4gTm9uZSBvZiB0aGUgYXNzb2NpYXRpb25zIHdlcmUgY2xhc3NpZmllZCBhcyBjb252aW5jaW5nIG9yIGhpZ2hseSBzdWdnZXN0aXZlLCB0aHJlZSB3ZXJlIGNsYXNzaWZpZWQgYXMgc3VnZ2VzdGl2ZSwgYW5kIDI2IHdlcmUgY2xhc3NpZmllZCBhcyB3ZWFrLiBGb3IgdGhyZWUgYmlvbWFya2VycyBleHBsb3JlZCBpbiBNUiBzdHVkaWVzLCB0aGVyZSB3YXMgZXZpZGVuY2Ugb2YgY2F1c2FsaXR5IGFuZCBzZXZlbiB3ZXJlIGNsYXNzaWZpZWQgYXMgbGlrZWx5IG5vbmNhdXNhbC4gRm9yIHRoZSBmaXJzdCB0aW1lLCByZXN1bHRzIGZyb20gYm90aCBvYnNlcnZhdGlvbmFsIGFuZCBNUiBzdHVkaWVzIHdlcmUgaW50ZWdyYXRlZCBieSB0cmlhbmd1bGF0aW5nIHRoZSBldmlkZW5jZSBmb3IgYSB3aWRlIHZhcmlldHkgb2Ygbm9uLWdlbmV0aWMgYmlvbWFya2VycyBhbmQgQ1JDIHJpc2suIEF0IGJsb29kIGxldmVsLCBsb3dlciB2aXRhbWluIEQsIGhpZ2hlciBob21lb3N0YXRpYyBtb2RlbCBhc3Nlc3NtZW50LWluc3VsaW4gcmVzaXN0YW5jZSwgYW5kIGh1bWFuIHBhcGlsbG9tYXZpcnVzIGluZmVjdGlvbiB3ZXJlIGFzc29jaWF0ZWQgd2l0aCBoaWdoZXIgQ1JDIHJpc2sgd2hpbGUgaW5jcmVhc2VkIGxpbm9sZWljIGFjaWQgYW5kIG9sZWljIGFjaWQgYW5kIGRlY3JlYXNlZCBhcmFjaGlkb25pYyBhY2lkIHdlcmUgbGlrZWx5IGNhdXNhbGx5IGFzc29jaWF0ZWQgd2l0aCBsb3dlciBDUkMgcmlzay4gTm8gYXNzb2NpYXRpb24gd2FzIGZvdW5kIGNvbnZpbmNpbmcgaW4gYm90aCBzdHVkeSB0eXBlcy4iLCJleGVjQ29uZmlnSWQiOjc3MjEsImlzUmV2aWV3ZWQiOmZhbHNlLCJjb21tZW50IjpudWxsLCJpc0F0dGFjaG1lbnQiOmZhbHNlLCJzaWduYWwiOltdfSx7ImlkIjo3OTMxLCJhbGVydE5hbWUiOiJMaXRQZXJmMSIsInByaW9yaXR5Ijp7InZhbHVlIjoiVXJnZW50IiwiaWNvbkNsYXNzIjoibWRpIG1kaS1hbHBoYS11LWNpcmNsZSByZWQtMSJ9LCJ0aXRsZSI6IkdyYWRpbmcgb2YgR2xpb21hOiBjb21iaW5lZCBkaWFnbm9zdGljIHZhbHVlIG9mIGFtaWRlIHByb3RvbiB0cmFuc2ZlciB3ZWlnaHRlZCwgYXJ0ZXJpYWwgc3BpbiBsYWJlbGluZyBhbmQgZGlmZnVzaW9uIHdlaWdodGVkIG1hZ25ldGljIHJlc29uYW5jZSBpbWFnaW5nLiIsImF1dGhvcnMiOiJbWGlhby1XZWksIEthbmddW1lpLUJpbiwgWGldW1RpbmctVGluZywgTGl1XVtOaW5nLCBXYW5nXVtZdWFuLVFpYW5nLCBaaHVdW1hpbmctUnVpLCBXYW5nXVtGYW4sIEd1b10iLCJhc3NpZ25lZFRvIjp7ImlkIjo3NDM1LCJmdWxsTmFtZSI6ImJoYWd5YSIsInVzZXJuYW1lIjoiYmhhZ3lhIiwiZW1haWwiOiJOUi5CaGFneWFsYWtzaG1pQHJ4bG9naXguY29tIn0sInB1YmxpY2F0aW9uRGF0ZSI6IjE0LU1heS0yMDIwIiwiZGlzcG9zaXRpb24iOiJOZXciLCJwcm9kdWN0TmFtZSI6IldITy1ESUFNSUNST04gTVIiLCJldmVudE5hbWUiOm51bGwsImFjdGlvbkNvdW50IjowLCJpc1ZhbGlkYXRpb25TdGF0ZUFjaGlldmVkIjpmYWxzZSwiYWxlcnRUYWdzIjpbXSwiYWxlcnRDb25maWdJZCI6NzY5MCwiYXJ0aWNsZUlkIjoiMzI0MDg4NjciLCJhcnRpY2xlQWJzdHJhY3QiOiJUbyBpbnZlc3RpZ2F0ZSB0aGUgYWJpbGl0eSBvZiBhbWlkZSBwcm90b24gdHJhbnNmZXIgKEFQVCkgd2VpZ2h0ZWQgbWFnbmV0aWMgcmVzb25hbmNlIGltYWdpbmcgKE1SSSksIGFydGVyaWFsIHNwaW4gbGFiZWxpbmcgKEFTTCksIGRpZmZ1c2lvbiB3ZWlnaHRlZCBpbWFnaW5nIChEV0kpIGFuZCB0aGUgY29tYmluYXRpb24gZm9yIGRpZmZlcmVudGlhdGluZyBoaWdoLWdyYWRlIGdsaW9tYXMgKEhHR3MpIGZyb20gbG93LWdyYWRlIGdsaW9tYXMgKExHR3MpLlR3ZW50eS1zZXZlbiBwYXRpZW50cyBpbmNsdWRpbmcgbmluZSBMR0dzIGFuZCBlaWdodGVlbiBIR0dzIHVuZGVyd2VudCBjb252ZW50aW9uYWwsIEFQVCwgQVNMIGFuZCBEV0kgTVJJIHdpdGggYSAzLjAtVCBNUiBzY2FubmVyLiBIaXN0b2dyYW0gYW5hbHlzZXMgd2FzIHBlcmZvcm1lZCBhbmQgcXVhbnRpdGF0aXZlIHBhcmFtZXRlcnMgaW5jbHVkaW5nIG1lYW4gYXBwYXJlbnQgZGlmZnVzaW9uIGNvZWZmaWNpZW50IChBREMgbWVhbiksIDIwdGgtcGVyY2VudGlsZSBBREMgKEFEQyAyMHRoKSwgbWVhbiBBUFQgKEFQVCBtZWFuKSwgOTB0aC1wZXJjZW50aWxlIEFQVCAoQVBUIDkwdGgpLCByZWxhdGl2ZSBtZWFuIGNlcmVicmFsIGJsb29kIGZsb3cgKHJDQkYgbWVhbikgYW5kIHJlbGF0aXZlIDkwdGgtcGVyY2VudGlsZSBDQkYgKHJDQkYgOTB0aCkgd2VyZSBjb21wYXJlZCBiZXR3ZWVuIEhHR3MgYW5kIExHR3MuIFRoZSBkaWFnbm9zdGljIHBlcmZvcm1hbmNlIHdhcyBldmFsdWF0ZWQgd2l0aCByZWNlaXZlciBvcGVyYXRpbmcgY2hhcmFjdGVyaXN0aWMgKFJPQykgYW5hbHlzaXMgb2YgZWFjaCBwYXJhbWV0ZXIgYW5kIHRoZWlyIGNvbWJpbmF0aW9uLiBDb3JyZWxhdGlvbnMgd2VyZSBhbmFseXplZCBhbW9uZyB0aGUgTVJJIHBhcmFtZXRlcnMgYW5kIEtpLTY3LlRoZSBBUFQgdmFsdWVzIHdlcmUgc2lnbmlmaWNhbnRseSBoaWdoZXIgaW4gdGhlIEhHR3MgY29tcGFyZWQgdG8gdGhlIExHR3MgKHDigIk84oCJwqAwLjAwNSksIHdoZXJlYXMgQURDIHZhbHVlcyB3ZXJlIHNpZ25pZmljYW50bHkgbG93ZXIgaW4gSEdHcyB0aGFuIExHR3MgKFDigIk84oCJwqAwLjAwMDEpLiBUaGUgQURDIDIwdGggYW5kIEFQVCBtZWFuIGhhZCBoaWdoZXIgZGlzY3JpbWluYXRpb24gYWJpbGl0aWVzIGNvbXBhcmVkIHdpdGggb3RoZXIgc2luZ2xlIHBhcmFtZXRlcnMsIHdpdGggdGhlIGFyZWEgdW5kZXIgdGhlIFJPQyBjdXJ2ZSAoQVVDKSBvZiAwLjg3NyBhbmQgMC44NDAuIEFkZGluZyBBREMgcGFyYW1ldGVyLCB0aGUgZGlzY3JpbWluYXRpb24gYWJpbGl0eSBvZiBBUFQgYW5kIHJDQkYgc2lnbmlmaWNhbnRseSBpbXByb3ZlZC4gVGhlIEFEQyB3YXMgbmVnYXRpdmVseSBjb3JyZWxhdGVkIHdpdGggdGhlIEFQVCBhbmQgckNCRiB2YWx1ZSwgcmVzcGVjdGl2ZWx5LCB3aGlsZSBBUFQgdmFsdWUgd2FzIHBvc2l0aXZlbHkgY29ycmVsYXRlZCB3aXRoIHJDQkYgdmFsdWUuIFNpZ25pZmljYW50IGNvcnJlbGF0aW9ucyBiZXR3ZWVuIEFEQyB2YWx1ZXMgYW5kIEtpLTY3IHdlcmUgYWxzbyBvYnNlcnZlZC5BUFQgYW5kIERXSSBhcmUgdmFsdWFibGUgaW4gZGlmZmVyZW50aWF0aW5nIEhHR3MgZnJvbSBMR0dzLiBUaGUgY29tYmluYXRpb24gb2YgQVBULCBEV0kgYW5kIEFTTCBpbWFnaW5nIGNvdWxkIGltcHJvdmUgdGhlIGFiaWxpdHkgZm9yIGRpc2NyaW1pbmF0aW5nIEhHR3MgZnJvbSBMR0dzLiIsImV4ZWNDb25maWdJZCI6NzcyMSwiaXNSZXZpZXdlZCI6ZmFsc2UsImNvbW1lbnQiOm51bGwsImlzQXR0YWNobWVudCI6ZmFsc2UsInNpZ25hbCI6W119LHsiaWQiOjc5MTgsImFsZXJ0TmFtZSI6IkxpdFBlcmYxIiwicHJpb3JpdHkiOnsidmFsdWUiOiJVcmdlbnQiLCJpY29uQ2xhc3MiOiJtZGkgbWRpLWFscGhhLXUtY2lyY2xlIHJlZC0xIn0sInRpdGxlIjoiU3R1ZHkgb2YgdGhlIENvcnJlbGF0aW9uIEJldHdlZW4gTXVsdGlwbGUgQ2hlbWljYWwgU2Vuc2l0aXZpdHkgYW5kIFBlcnNvbmFsaXR5IFVzaW5nIHRoZSBRdWljayBFbnZpcm9ubWVudGFsIEV4cG9zdXJlIFNlbnNpdGl2aXR5IEludmVudG9yeSBRdWVzdGlvbm5haXJlIGFuZCB0aGUgVGVtcGVyYW1lbnQgYW5kIENoYXJhY3RlciBJbnZlbnRvcnkuIiwiYXV0aG9ycyI6IltYaSwgTHVdW0F5YSwgSGlzYWRhXVtBa2FuZSwgQW5haV1bQ2hpaGlybywgTmFrYXNoaXRhXVtTaG90YSwgTWFzdWRhXVtZdWtpLCBGdWppd2FyYV1bTmFva2ksIEt1bnVnaXRhXVtUYWthaGlrbywgS2F0b2hdIiwiYXNzaWduZWRUbyI6eyJpZCI6NzQzNSwiZnVsbE5hbWUiOiJiaGFneWEiLCJ1c2VybmFtZSI6ImJoYWd5YSIsImVtYWlsIjoiTlIuQmhhZ3lhbGFrc2htaUByeGxvZ2l4LmNvbSJ9LCJwdWJsaWNhdGlvbkRhdGUiOiIxMi1NYXktMjAyMCIsImRpc3Bvc2l0aW9uIjoiTmV3IiwicHJvZHVjdE5hbWUiOiJXSE8tRElBTUlDUk9OIE1SIiwiZXZlbnROYW1lIjpudWxsLCJhY3Rpb25Db3VudCI6MCwiaXNWYWxpZGF0aW9uU3RhdGVBY2hpZXZlZCI6ZmFsc2UsImFsZXJ0VGFncyI6W10sImFsZXJ0Q29uZmlnSWQiOjc2OTAsImFydGljbGVJZCI6IjMyNDA0ODMyIiwiYXJ0aWNsZUFic3RyYWN0IjoiV2UgY29uZHVjdGVkIGFuIGFuYWx5c2lzIHVzaW5nIHRoZSBRdWljayBFbnZpcm9ubWVudGFsIEV4cG9zdXJlIFNlbnNpdGl2aXR5IEludmVudG9yeSB0byBleGFtaW5lIHRoZSBjb3JyZWxhdGlvbiBiZXR3ZWVuIG11bHRpcGxlIGNoZW1pY2FsIHNlbnNpdGl2aXR5IChNQ1MpIGFuZCBwZXJzb25hbGl0eSB0cmFpdHMgYnkgdXNpbmcgdGVtcGVyYW1lbnQgYW5kIGNoYXJhY3RlciBpbnZlbnRvcnksIGFuZCBlbnZpcm9ubWVudGFsIGV4cG9zdXJlcy5BbiBhbm9ueW1vdXMgcXVlc3Rpb25uYWlyZSB3YXMgZGlzdHJpYnV0ZWQgdG8gNjY3IGVtcGxveWVlcyB3b3JraW5nIGF0IGFuIElUIG1hbnVmYWN0dXJpbmcgcGxhbnQgaW4gSmFwYW4uIFZhcmlhYmxlcyBpbmNsdWRpbmcgY2hlbWljYWxseSBzZW5zaXRpdmUgcG9wdWxhdGlvbiAoQ1NQKSwgcGVyc29uYWxpdHksIGFuZCBlbnZpcm9ubWVudGFsIGNoZW1pY2FsIGV4cG9zdXJlIHdlcmUgaW5kaXZpZHVhbGx5IGV2YWx1YXRlZCB1c2luZyBVLXRlc3QsIGNoaS1zcXVhcmVkIHRlc3QsIGFuZCBjb3JyZWxhdGlvbiBhbmFseXNlcy4gV2UgYWxzbyBkaWQgY292YXJpYW5jZSBzdHJ1Y3R1cmUgYW5hbHlzaXMgdG8gYnVpbGQgYSBzdHJ1Y3R1cmFsIGVxdWF0aW9uIG1vZGVsLlRoZXJlIHdhcyBsaXR0bGUgZGlyZWN0IGltcGFjdCBvZiB0ZW1wZXJhbWVudCBvbiB0aGUgQ1NQLCB3aGlsZSB0aGVyZSB3YXMgYSBzaWduaWZpY2FudCBpbXBhY3Qgb2YgY2hhcmFjdGVyIG9uIHRoZSBDU1AuIFdvbWVuIHdlcmUgbW9yZSBsaWtlbHkgdG8gZXhoaWJpdCBzeW1wdG9tcyBvZiBDU1AuTUNTIGlzIGNvcnJlbGF0ZWQgd2l0aCBwZXJzb25hbGl0eSwgaW1wYWN0ZWQgbW9yZSBieSBjaGFyYWN0ZXIgYWNxdWlyZWQgbGF0ZXIgaW4gbGlmZSB0aGFuIGlubmF0ZSB0ZW1wZXJhbWVudC4gVGhlcmUgd2VyZSBzZXggZGlmZmVyZW5jZXMgaW4gdGhlIGluY2lkZW5jZSBvZiBNQ1MuIiwiZXhlY0NvbmZpZ0lkIjo3NzIxLCJpc1Jldmlld2VkIjpmYWxzZSwiY29tbWVudCI6bnVsbCwiaXNBdHRhY2htZW50IjpmYWxzZSwic2lnbmFsIjpbXX0seyJpZCI6ODY2MSwiYWxlcnROYW1lIjoiUGVyZlRlc3Q0IiwicHJpb3JpdHkiOnsidmFsdWUiOiJNZWRpdW0iLCJpY29uQ2xhc3MiOiJtZGkgbWRpLWFscGhhLW0tY2lyY2xlIGJsdWUtMSJ9LCJ0aXRsZSI6Ik5hdHVyZSBhbmQgbnVydHVyZSBvZiBzZXh1YWwgcGFydG5lciBwcmVmZXJlbmNlOiBUZWFjaGluZ3MgZnJvbSBwcmVuYXRhbCBhZG1pbmlzdHJhdGlvbiBvZiBhY2V0YW1pbm9waGVuIGluIG1hbGUgcmF0cy4iLCJhdXRob3JzIjoiW1gsIETDrWF6LUVzdHJhZGEgVmljdG9yXVtNLCBCYXJyYWRhcy1Nb2N0ZXp1bWFdW0QsIEhlcnJlcmEtQ292YXJydWJpYXNdW0osIE1hbnpvXVtBLCBDb3JpYS1BdmlsYSBHZW5hcm9dIiwiYXNzaWduZWRUbyI6eyJpZCI6NjU3OCwiZnVsbE5hbWUiOiJBZG1pbiIsIm5hbWUiOiJBZG1pbiJ9LCJwdWJsaWNhdGlvbkRhdGUiOiIxNS1NYXktMjAyMCIsImRpc3Bvc2l0aW9uIjoiTmV3IiwicHJvZHVjdE5hbWUiOiJQQVJBQ0VUQU1PTCIsImV2ZW50TmFtZSI6bnVsbCwiYWN0aW9uQ291bnQiOjAsImlzVmFsaWRhdGlvblN0YXRlQWNoaWV2ZWQiOmZhbHNlLCJhbGVydFRhZ3MiOltdLCJhbGVydENvbmZpZ0lkIjo4NjAyLCJhcnRpY2xlSWQiOiIzMjQyMjE5NSIsImFydGljbGVBYnN0cmFjdCI6IlRoZSBvcmdhbml6YXRpb25hbC1hY3RpdmF0aW9uYWwgaHlwb3RoZXNpcyBpbmRpY2F0ZXMgdGhhdCBhY3RpdmF0aW9uIG9mIGFkdWx0IHNleHVhbCBiZWhhdmlvciBpbiBtYWxlcyBkZXBlbmRzIG9uIG9yZ2FuaXphdGlvbiBvZiB0aGUgbWFzY3VsaW5lIGJyYWluIGR1cmluZyB0aGUgcGVyaW5hdGFsIHNlbnNpdGl2ZSBwZXJpb2QuIEluIHRoZSBtZWRpYWwgcHJlb3B0aWMgYXJlYSBzdWNoIG1hc2N1bGluaXphdGlvbiBkZXBlbmRzIG9uIGEgbmV1cm9lbmRvY3JpbmUgY2FzY2FkZSB0aGF0IGluY2x1ZGVzIGV4cG9zdXJlIHRvIHRlc3Rvc3Rlcm9uZSwgYXJvbWF0aXphdGlvbiB0byBlc3RyYWRpb2wsIGFjdGl2YXRpb24gb2YgZXN0cm9nZW4gcmVjZXB0b3JzLCBzeW50aGVzaXMgb2YgY3ljbG9veHlnZW5hc2UgKENPWCksIGluY3JlYXNlIG9mIHByb3N0YWdsYW5kaW5zLCByZWxlYXNlIG9mIGdsdXRhbWF0ZSwgYW5kIGFjdGl2YXRpb24gb2YgQU1QQSByZWNlcHRvcnMgdGhhdCByZXN1bHQgaW4gdGhlIGZvcm1hdGlvbiBvZiBtb3JlIGRlbmRyaXRpYyBzcGluZXMuIFRodXMsIGluIHRoZSBwcmVzZW50IHN0dWR5IHdlIGFzc2Vzc2VkIHRoZSBzZXh1YWwgcGFydG5lciBwcmVmZXJlbmNlIChTUFApIG9mIGFkdWx0IG1hbGUgcmF0cyBwcmVuYXRhbGx5IHRyZWF0ZWQgd2l0aCBhY2V0YW1pbm9waGVuIChBUEFQKSwgYW4gYW5hbGdlc2ljL2FudGlweXJldGljIGRydWcgdGhhdCBpbmhpYml0cyBDT1gtMiBhbmQgaXMgY29tbW9ubHkgdXNlZCBhbmQgcHJlc2NyaWJlZCBkdXJpbmcgcHJlZ25hbmN5LiBGZW1hbGUgcmF0cyByZWNlaXZlZCBlaXRoZXIgc2FsaW5lICgy4oCvbWwva2cgcy5jLikgb3IgQVBBUCAoNTDigK9tZy9rZyBzLmMuKSBldmVyeSAxMuKAr2gsIGR1cmluZyBkYXlzIDE2LTIwIG9mIHByZWduYW5jeS4gQXQgcG9zdG5hdGFsIGRheSBQRDYwIGhhbGYgb2YgdGhlIG1hbGUgb2Zmc3ByaW5nIHdlcmUgZXhwb3NlZCB0byBzZXh1YWwgZXhwZXJpZW5jZSB3aXRoIHJlY2VwdGl2ZSBmZW1hbGVzIGR1cmluZyA1IHRyaWFscywgYW5kIHRoZSBvdGhlciBoYWxmIHJlbWFpbmVkIHNleHVhbGx5IG5hw692ZS4gQXQgUEQ5MCBhbGwgdGhlbSB3ZXJlIHRlc3RlZCBmb3IgU1BQIHdpdGggb25lIHNleHVhbGx5IHJlY2VwdGl2ZSBmZW1hbGUgYW5kIG9uZSBzdHVkIG1hbGUuIFRoZSByZXN1bHRzIGluZGljYXRlZCB0aGF0IG9ubHkgQVBBUC1uYcOvdmUgbWFsZXMgZmFpbGVkIHRvIGRpc3BsYXkgU1BQLiBIb3dldmVyLCBBUEFQLWV4cGVyaWVuY2VkIG1hbGVzIGRpc3BsYXllZCBTUFAgZm9yIGZlbWFsZXMuIFdlIGRpc2N1c3MgdGhlIGVmZmVjdHMgb2YgcHJlbmF0YWwgQVBBUCBpbiB0aGUgZGlzcnVwdGlvbiBvZiB1bmNvbmRpdGlvbmVkIHJlc3BvbnNlcyB0b3dhcmRzIGZlbWFsZXMgKG5hdHVyZSBtZWNoYW5pc21zKSwgYW5kIHRoZSBlZmZlY3RzIG9mIHNleHVhbCBleHBlcmllbmNlIChudXJ0dXJlIG1lY2hhbmlzbXMpIGluIHRoZSBkZXZlbG9wbWVudCBvZiBjb25kaXRpb25lZCBoZXRlcm9zZXh1YWwgcHJlZmVyZW5jZS4iLCJleGVjQ29uZmlnSWQiOjg2MzMsImlzUmV2aWV3ZWQiOmZhbHNlLCJjb21tZW50IjpudWxsLCJpc0F0dGFjaG1lbnQiOmZhbHNlLCJzaWduYWwiOltdfSx7ImlkIjo3OTQ5LCJhbGVydE5hbWUiOiJMaXRQZXJmMSIsInByaW9yaXR5Ijp7InZhbHVlIjoiVXJnZW50IiwiaWNvbkNsYXNzIjoibWRpIG1kaS1hbHBoYS11LWNpcmNsZSByZWQtMSJ9LCJ0aXRsZSI6IkFjY2VsZXJhdGVkIE1SIHNwZWN0cm9zY29waWMgaW1hZ2luZy1hIHJldmlldyBvZiBjdXJyZW50IGFuZCBlbWVyZ2luZyB0ZWNobmlxdWVzLiIsImF1dGhvcnMiOiJbV29sZmdhbmcsIEJvZ25lcl1bUmljYXJkbywgT3Rhem9dW0Fua2UsIEhlbm5pbmddIiwiYXNzaWduZWRUbyI6eyJpZCI6NzQzNSwiZnVsbE5hbWUiOiJiaGFneWEiLCJ1c2VybmFtZSI6ImJoYWd5YSIsImVtYWlsIjoiTlIuQmhhZ3lhbGFrc2htaUByeGxvZ2l4LmNvbSJ9LCJwdWJsaWNhdGlvbkRhdGUiOiIxMi1NYXktMjAyMCIsImRpc3Bvc2l0aW9uIjoiTmV3IiwicHJvZHVjdE5hbWUiOiJXSE8tRElBTUlDUk9OIE1SIiwiZXZlbnROYW1lIjpudWxsLCJhY3Rpb25Db3VudCI6MCwiaXNWYWxpZGF0aW9uU3RhdGVBY2hpZXZlZCI6ZmFsc2UsImFsZXJ0VGFncyI6W10sImFsZXJ0Q29uZmlnSWQiOjc2OTAsImFydGljbGVJZCI6IjMyMzk5OTc0IiwiYXJ0aWNsZUFic3RyYWN0IjoiT3ZlciBtb3JlIHRoYW4gMzAgeWVhcnMgaW4gdml2byBNUiBzcGVjdHJvc2NvcGljIGltYWdpbmcgKE1SU0kpIGhhcyB1bmRlcmdvbmUgYW4gZW5vcm1vdXMgZXZvbHV0aW9uIGZyb20gdGhlb3JldGljYWwgY29uY2VwdHMgaW4gdGhlIGVhcmx5IDE5ODBzIHRvIHRoZSByb2J1c3QgaW1hZ2luZyB0ZWNobmlxdWUgdGhhdCBpdCBpcyB0b2RheS4gVGhlIGRldmVsb3BtZW50IG9mIGJvdGggZmFzdCBhbmQgZWZmaWNpZW50IHNhbXBsaW5nIGFuZCByZWNvbnN0cnVjdGlvbiB0ZWNobmlxdWVzIGhhcyBwbGF5ZWQgYSBmdW5kYW1lbnRhbCByb2xlIGluIHRoaXMgcHJvY2Vzcy4gU3RhdGUtb2YtdGhlLWFydCBNUlNJIGhhcyBncm93biBmcm9tIGEgc2xvdyBwdXJlbHkgcGhhc2UtZW5jb2RlZCBhY3F1aXNpdGlvbiB0ZWNobmlxdWUgdG8gYSBtZXRob2QgdGhhdCB0b2RheSBjb21iaW5lcyB0aGUgYmVuZWZpdHMgb2YgZGlmZmVyZW50IGFjY2VsZXJhdGlvbiB0ZWNobmlxdWVzLiBUaGVzZSBpbmNsdWRlIHNob3J0ZW5pbmcgb2YgcmVwZXRpdGlvbiB0aW1lcywgc3BhdGlhbC1zcGVjdHJhbCBlbmNvZGluZywgdW5kZXJzYW1wbGluZyBvZiBrLXNwYWNlIGFuZCB0aW1lIGRvbWFpbiwgYW5kIHVzZSBvZiBzcGF0aWFsLXNwZWN0cmFsIHByaW9yIGtub3dsZWRnZSBpbiB0aGUgcmVjb25zdHJ1Y3Rpb24uIEluIHRoaXMgd2F5IGluIHZpdm8gTVJTSSBoYXMgY29uc2lkZXJhYmx5IGFkdmFuY2VkIGluIHRlcm1zIG9mIHNwYXRpYWwgY292ZXJhZ2UsIHNwYXRpYWwgcmVzb2x1dGlvbiwgYWNxdWlzaXRpb24gc3BlZWQsIGFydGlmYWN0IHN1cHByZXNzaW9uLCBudW1iZXIgb2YgZGV0ZWN0YWJsZSBtZXRhYm9saXRlcyBhbmQgcXVhbnRpZmljYXRpb24gcHJlY2lzaW9uLiBBY2NlbGVyYXRpb24gbm90IG9ubHkgaGFzIGJlZW4gdGhlIGVuYWJsaW5nIGZhY3RvciBpbiBoaWdoLXJlc29sdXRpb24gd2hvbGUtYnJhaW4gMSBILU1SU0ksIGJ1dCB0b2RheSBpcyBhbHNvIGNvbW1vbiBpbiBub24tcHJvdG9uIE1SU0kgKDMxIFAsIDIgSCBhbmQgMTMgQykgYW5kIGFwcGxpZWQgaW4gbWFueSBkaWZmZXJlbnQgb3JnYW5zLiBJbiB0aGlzIHByb2Nlc3MsIE1SU0kgdGVjaG5pcXVlcyBoYWQgdG8gY29uc3RhbnRseSBhZGFwdCwgYnV0IGhhdmUgYWxzbyBiZW5lZml0dGVkIGZyb20gdGhlIHNpZ25pZmljYW50IGluY3JlYXNlIG9mIG1hZ25ldGljIGZpZWxkIHN0cmVuZ3RoIGJvb3N0aW5nIHRoZSBzaWduYWwtdG8tbm9pc2UgcmF0aW8gYWxvbmcgd2l0aCBoaWdoIGdyYWRpZW50IGZpZGVsaXR5IGFuZCBoaWdoLWRlbnNpdHkgcmVjZWl2ZSBhcnJheXMuIEluIGNvbWJpbmF0aW9uIHdpdGggcmVjZW50IHRyZW5kcyBpbiBpbWFnZSByZWNvbnN0cnVjdGlvbiBhbmQgbXVjaCBpbXByb3ZlZCBjb21wdXRhdGlvbiBwb3dlciwgdGhlc2UgYWR2YW5jZXMgbGVkIHRvIGEgbnVtYmVyIG9mIG5vdmVsIGRldmVsb3BtZW50cyB3aXRoIHJlc3BlY3QgdG8gTVJTSSBhY2NlbGVyYXRpb24uIFRvZGF5IE1SU0kgYWxsb3dzIGZvciBub24taW52YXNpdmUgYW5kIG5vbi1pb25pemluZyBtYXBwaW5nIG9mIHRoZSBzcGF0aWFsIGRpc3RyaWJ1dGlvbiBvZiB2YXJpb3VzIG1ldGFib2xpdGVzJyB0aXNzdWUgY29uY2VudHJhdGlvbnMgaW4gYW5pbWFscyBvciBodW1hbnMsIGlzIGFwcGxpZWQgZm9yIGNsaW5pY2FsIGRpYWdub3N0aWNzIGFuZCBoYXMgYmVlbiBlc3RhYmxpc2hlZCBhcyBhbiBpbXBvcnRhbnQgdG9vbCBmb3IgbmV1cm8tc2NpZW50aWZpYyBhbmQgbWV0YWJvbGlzbSByZXNlYXJjaC4gVGhpcyByZXZpZXcgaGlnaGxpZ2h0cyB0aGUgZGV2ZWxvcG1lbnRzIG9mIHRoZSBsYXN0IGZpdmUgeWVhcnMgYW5kIHB1dHMgdGhlbSBpbnRvIHRoZSBjb250ZXh0IG9mIGVhcmxpZXIgTVJTSSBhY2NlbGVyYXRpb24gdGVjaG5pcXVlcy4gSW4gYWRkaXRpb24gdG8gMSBILU1SU0kgaXQgYWxzbyBpbmNsdWRlcyBvdGhlciByZWxldmFudCBudWNsZWkgYW5kIGlzIG5vdCBsaW1pdGVkIHRvIGNlcnRhaW4gYm9keSByZWdpb25zIG9yIHNwZWNpZmljIGFwcGxpY2F0aW9ucy4iLCJleGVjQ29uZmlnSWQiOjc3MjEsImlzUmV2aWV3ZWQiOmZhbHNlLCJjb21tZW50IjpudWxsLCJpc0F0dGFjaG1lbnQiOmZhbHNlLCJzaWduYWwiOltdfSx7ImlkIjo3OTMwLCJhbGVydE5hbWUiOiJMaXRQZXJmMSIsInByaW9yaXR5Ijp7InZhbHVlIjoiVXJnZW50IiwiaWNvbkNsYXNzIjoibWRpIG1kaS1hbHBoYS11LWNpcmNsZSByZWQtMSJ9LCJ0aXRsZSI6IkxhY2sgb2YgTTQgbXVzY2FyaW5pYyByZWNlcHRvcnMgaW4gdGhlIHN0cmlhdHVtLCB0aGFsYW11cyBhbmQgaW50ZXJnZW5pY3VsYXRlIGxlYWZsZXQgYWx0ZXJzIHRoZSBiaW9sb2dpY2FsIHJoeXRobSBvZiBsb2NvbW90b3IgYWN0aXZpdHkgaW4gbWljZS4iLCJhdXRob3JzIjoiW1ZsYWRpbWlyLCBSaWxqYWtdW0thdGVyaW5hLCBKYW5pc292YV1bSmFyb21pciwgTXlzbGl2ZWNla10iLCJhc3NpZ25lZFRvIjp7ImlkIjo3NDM1LCJmdWxsTmFtZSI6ImJoYWd5YSIsInVzZXJuYW1lIjoiYmhhZ3lhIiwiZW1haWwiOiJOUi5CaGFneWFsYWtzaG1pQHJ4bG9naXguY29tIn0sInB1YmxpY2F0aW9uRGF0ZSI6IjE0LU1heS0yMDIwIiwiZGlzcG9zaXRpb24iOiJOZXciLCJwcm9kdWN0TmFtZSI6IldITy1ESUFNSUNST04gTVIiLCJldmVudE5hbWUiOm51bGwsImFjdGlvbkNvdW50IjowLCJpc1ZhbGlkYXRpb25TdGF0ZUFjaGlldmVkIjpmYWxzZSwiYWxlcnRUYWdzIjpbXSwiYWxlcnRDb25maWdJZCI6NzY5MCwiYXJ0aWNsZUlkIjoiMzI0MDk5MTgiLCJhcnRpY2xlQWJzdHJhY3QiOiJUaGUgZGVsZXRpb24gb2YgTTQgbXVzY2FyaW5pYyByZWNlcHRvcnMgKE1ScykgY2hhbmdlcyBiaW9sb2dpY2FsIHJoeXRobSBwYXJhbWV0ZXJzIGluIGZlbWFsZXMuIEhlcmUsIHdlIHNlYXJjaGVkIGZvciB0aGUgbWVjaGFuaXNtcyByZXNwb25zaWJsZSBmb3IgdGhlc2UgY2hhbmdlcy4gV2UgcGVyZm9ybWVkIGJpb2xvZ2ljYWwgcmh5dGhtIGFuYWx5c2lzIGluIHR3byBleHBlcmltZW50czogaW4gZXhwZXJpbWVudCAxLCB0aGUgbWljZSBbQzU3QmwvNk5UYWMgKFdUKSBhbmQgTTQgTVIgLS8tIG1pY2UgKEtPKV0gd2VyZSBmaXJzdCBleHBvc2VkIHRvIGEgc3RhbmRhcmQgTEQgcmVnaW1lICgxMi8xMi1oIGxpZ2h0L2RhcmsgY3ljbGUpIGZvciA4wqBkYXlzIGFuZCB0aGVuIHN1YnNlcXVlbnRseSBleHBvc2VkIHRvIGNvbnN0YW50IGRhcmtuZXNzIChmb3IgMjTCoGgvZGF5LCBERCByZWdpbWUpIGZvciBhbm90aGVyIDE2wqBkYXlzLiBJbiBleHBlcmltZW50IDIsIHRoZSBtaWNlIChhZnRlciB0aGUgc3RhbmRhcmQgTEQgcmVnaW1lKSB3ZXJlIGV4cG9zZWQgdG8gdGhlIEREIHJlZ2ltZSBhbmQgdG8gb25lIGxpZ2h0IHB1bHNlICh6ZWl0Z2ViZXIgdGltZSAxNCkgb24gZGF5IDkuIFdlIGFsc28gZGV0ZWN0ZWQgTTEgTVJzIGluIGJyYWluIGFyZWFzIGltcGxpY2F0ZWQgaW4gbG9jb21vdG9yIGJpb2xvZ2ljYWwgcmh5dGhtIHJlZ3VsYXRpb24uIEluIGV4cGVyaW1lbnQgMSwgdGhlIGJpb2xvZ2ljYWwgcmh5dGhtIGFjdGl2aXR5IGN1cnZlcyBkaWZmZXJlZDogdGhlIHBlcmlvZCAoz4QsIGR1cmF0aW9uIG9mIGRpdXJuYWwgY3ljbGUpIHdhcyBzaG9ydGVyIGluIHRoZSBERCByZWdpbWUuIE1vcmVvdmVyLCB0aGUgZGF5IG1lYW4sIG1lc29yIChtaWRsaW5lIHZhbHVlKSwgbmlnaHQgbWVhbiBhbmQgdGhlaXIgZGlmZmVyZW5jZSB3ZXJlIGhpZ2hlciBpbiBLTyBhbmltYWxzLiBUaGUgdGltZSBpbiB3aGljaCB0aGUgbWF4aW1hbCBzbG9wZSBvY2N1cnJlZCB3YXMgbG93ZXIgaW4gdGhlIEREIHJlZ2ltZSB0aGFuIGluIHRoZSBMRCByZWdpbWUgaW4gYm90aCBXVCBhbmQgS08gYnV0IHdhcyBsb3dlciBpbiBLTyB0aGFuIGluIFdUIG1pY2UuIEluIGV4cGVyaW1lbnQgMiwgdGhlcmUgd2VyZSBubyBkaWZmZXJlbmNlcyBpbiBiaW9sb2dpY2FsIHJoeXRobSBwYXJhbWV0ZXJzIGJldHdlZW4gV1QgYW5kIEtPIG1pY2UuIFRoZSBkZW5zaXRpZXMgb2YgTTEgTVJzIGluIHRoZSBtYWpvcml0eSBvZiBhcmVhcyBpbXBsaWNhdGVkIGluIGxvY29tb3RvciBiaW9sb2dpY2FsIHJoeXRobSB3ZXJlIGxvdy4gQSBzaWduaWZpY2FudCBhbW91bnQgb2YgTTEgTVIgd2FzIGZvdW5kIGluIHRoZSBzdHJpYXR1bS4gVGhlc2UgcmVzdWx0cyBzdWdnZXN0IHRoYXQgYWx0aG91Z2ggY29yZSBjbG9jayBvdXRwdXQgaXMgY2hhbmdlZCBieSBNNCBNUiBkZWxldGlvbiwgdGhlIHN0cnVjdHVyZXMgaW52b2x2ZWQgaW4gYmlvbG9naWNhbCByaHl0aG0gcmVndWxhdGlvbiBpbiBXVCBhbmQgS08gYW5pbWFscyBhcmUgbGlrZWx5IHRoZSBzYW1lLCBhbmQgdGhlIG1vc3QgaW1wb3J0YW50IGFyZWFzIGFyZSB0aGUgc3RyaWF0dW0sIHRoYWxhbXVzIGFuZCBpbnRlcmdlbmljdWxhdGUgbGVhZmxldC4iLCJleGVjQ29uZmlnSWQiOjc3MjEsImlzUmV2aWV3ZWQiOmZhbHNlLCJjb21tZW50IjpudWxsLCJpc0F0dGFjaG1lbnQiOmZhbHNlLCJzaWduYWwiOltdfSx7ImlkIjo4MDA0LCJhbGVydE5hbWUiOiJMaXRQZXJmMSIsInByaW9yaXR5Ijp7InZhbHVlIjoiVXJnZW50IiwiaWNvbkNsYXNzIjoibWRpIG1kaS1hbHBoYS11LWNpcmNsZSByZWQtMSJ9LCJ0aXRsZSI6IlZhcmlhYmlsaXR5IGluIHRoZSBMYWJvcmF0b3J5IE1lYXN1cmVtZW50IG9mIEN5dG9raW5lczogQSBMb25naXR1ZGluYWwgU3VtbWFyeSBvZiBhIENvbGxlZ2Ugb2YgQW1lcmljYW4gUGF0aG9sb2dpc3RzIFByb2ZpY2llbmN5IFRlc3RpbmcgU3VydmV5LiIsImF1dGhvcnMiOiJbVmlqYXlhLCBLbmlnaHRdW1Rob21hcywgTG9uZ11bUWluZyBILCBNZW5nXVtNaWNoYWVsIEEsIExpbmRlbl1bRGFuaWVsIEQsIFJob2Fkc10iLCJhc3NpZ25lZFRvIjp7ImlkIjo3NDM1LCJmdWxsTmFtZSI6ImJoYWd5YSIsInVzZXJuYW1lIjoiYmhhZ3lhIiwiZW1haWwiOiJOUi5CaGFneWFsYWtzaG1pQHJ4bG9naXguY29tIn0sInB1YmxpY2F0aW9uRGF0ZSI6IjEzLU1heS0yMDIwIiwiZGlzcG9zaXRpb24iOiJOZXciLCJwcm9kdWN0TmFtZSI6IldITy1ESUFNSUNST04gTVIiLCJldmVudE5hbWUiOm51bGwsImFjdGlvbkNvdW50IjowLCJpc1ZhbGlkYXRpb25TdGF0ZUFjaGlldmVkIjpmYWxzZSwiYWxlcnRUYWdzIjpbXSwiYWxlcnRDb25maWdJZCI6NzY5MCwiYXJ0aWNsZUlkIjoiMzI0MDEwNTMiLCJhcnRpY2xlQWJzdHJhY3QiOiJUaGUgbWVhc3VyZW1lbnQgb2YgY3l0b2tpbmVzIGluIGNsaW5pY2FsIGxhYm9yYXRvcmllcyBpcyBiZWNvbWluZyBhbiBpbmNyZWFzaW5nbHkgcm91dGluZSBwYXJ0IG9mIGltbXVuZSBtb25pdG9yaW5nIHdoZW4gYWRtaW5pc3RlcmluZyBiaW9sb2dpYyBhbmQgY2VsbC1iYXNlZCBpbW11bm90aGVyYXBpZXMgYW5kIGFsc28gZm9yIGNsaW5pY2FsIGFzc2Vzc21lbnQgb2YgaW5mbGFtbWF0b3J5IGNvbmRpdGlvbnMuIFdoaWxlIGEgbnVtYmVyIG9mIGNvbW1lcmNpYWwgYXNzYXlzIGFuZCBwbGF0Zm9ybXMgYXJlIGF2YWlsYWJsZSBmb3IgY3l0b2tpbmUgbWVhc3VyZW1lbnQsIHRoZXJlIGlzIGN1cnJlbnRseSBsaXR0bGUgc3RhbmRhcmRpemF0aW9uIGFtb25nIHRoZXNlIGFuYWx5dGljYWwgbWV0aG9kcy5UbyBjaGFyYWN0ZXJpemUgdGhlIHZhcmlhYmlsaXR5IGFuZCBjb21wYXJhYmlsaXR5IGFtb25nIGN5dG9raW5lIHRlc3RpbmcgcGxhdGZvcm1zIHRoYXQgYXJlIGNvbW1vbmx5IHVzZWQgaW4gY2xpbmljYWwgbGFib3JhdG9yaWVzLldlIGFuYWx5emVkIGRhdGEgZm9yIDQgY3l0b2tpbmVzIChpbnRlcmxldWtpbiBbSUxdLTEsIElMLTYsIElMLTgsIGFuZCB0dW1vciBuZWNyb3NpcyBmYWN0b3ItYWxwaGEgW1RORi3OsV0pIGZyb20gNiBDb2xsZWdlIG9mIEFtZXJpY2FuIFBhdGhvbG9naXN0cyBjeXRva2luZSBzdXJ2ZXlzIGFkbWluaXN0ZXJlZCBmcm9tIDIwMTUgdG8gMjAxOC4gQW5hbHlzZXMgaW50ZXJyb2dhdGVkIHZhcmlhYmlsaXR5IGJldHdlZW4gdGVzdGluZyBtZXRob2RzIGFuZCB2YXJpYWJpbGl0eSB3aXRoaW4gZWFjaCBsYWJvcmF0b3J5IGFjcm9zcyB0aGUgbWFpbGluZ3MuU2lnbmlmaWNhbnQgdmFyaWFiaWxpdHkgd2FzIG5vdGVkIGFjcm9zcyBtZXRob2RzIHdpdGggYW5hbHlzaXMgb2YgSUwtMSBzaG93aW5nIHRoZSBsZWFzdCB2YXJpYWJpbGl0eSBhbmQgSUwtNiwgSUwtOCwgYW5kIFRORi3OsSB2YXJ5aW5nIGJldHdlZW4gbWV0aG9kcyB0byBhIGdyZWF0ZXIgZXh0ZW50LiBJbnRyYWxhYiB2YXJpYWJpbGl0eSB3YXMgYWxzbyBzaWduaWZpY2FudCB3aXRoIFRORi3OsSBtZWFzdXJlbWVudHMgYWdhaW4gc2hvd2luZyB0aGUgZ3JlYXRlc3QgdmFyaWFiaWxpdHkuVGhpcyByZXRyb3NwZWN0aXZlIGFuYWx5c2lzIG9mIENvbGxlZ2Ugb2YgQW1lcmljYW4gUGF0aG9sb2dpc3RzIHByb2ZpY2llbmN5IHRlc3RpbmcgZGF0YSBmb3IgY3l0b2tpbmUgbWVhc3VyZW1lbnQgaXMgdGhlIGxhcmdlc3QgbWV0aG9kIGNvbXBhcmlzb24gdG8gZGF0ZSwgYW5kIHRoaXMgc3R1ZHkgcHJvdmlkZXMgYSBkZXNjcmlwdGlvbiBvZiB0aGUgdmFyaWF0aW9uIG9mIGN5dG9raW5lIG1lYXN1cmVtZW50IGFjcm9zcyBtZXRob2RzLCBhY3Jvc3MgbGFib3JhdG9yaWVzLCBhbmQgd2l0aGluIGxhYm9yYXRvcmllcy4gU2VyaWFsIG1vbml0b3Jpbmcgb2YgY3l0b2tpbmVzIHNob3VsZCBwcmVmZXJlbnRpYWxseSBiZSBwZXJmb3JtZWQgYnkgdGhlIHNhbWUgbWV0aG9kIHdpdGhpbiB0aGUgc2FtZSBsYWJvcmF0b3J5LiIsImV4ZWNDb25maWdJZCI6NzcyMSwiaXNSZXZpZXdlZCI6ZmFsc2UsImNvbW1lbnQiOm51bGwsImlzQXR0YWNobWVudCI6ZmFsc2UsInNpZ25hbCI6W119LHsiaWQiOjc5NzAsImFsZXJ0TmFtZSI6IkxpdFBlcmYxIiwicHJpb3JpdHkiOnsidmFsdWUiOiJVcmdlbnQiLCJpY29uQ2xhc3MiOiJtZGkgbWRpLWFscGhhLXUtY2lyY2xlIHJlZC0xIn0sInRpdGxlIjoiSW5oaWJpdGlvbiBpcyBhc3NvY2lhdGVkIHdpdGggd2hvbGUtYnJhaW4gc3RydWN0dXJhbCBicmFpbiBjb25uZWN0aXZpdHkgb24gbmV0d29yayBsZXZlbCBpbiBzY2hvb2wtYWdlZCBjaGlsZHJlbiBib3JuIHZlcnkgcHJldGVybSBhbmQgYXQgdGVybS4iLCJhdXRob3JzIjoiW1ZlcmEsIERpc3NlbGhvZmZdW0FuZHJhcywgSmFrYWJdW0JhcmJhcmEsIFNjaG5pZGVyXVtCZWEsIExhdGFsXVtGbGF2aWEsIFdlaHJsZV1bQ29ybmVsaWEsIEhhZ21hbm5dW10iLCJhc3NpZ25lZFRvIjp7ImlkIjo3NDM1LCJmdWxsTmFtZSI6ImJoYWd5YSIsInVzZXJuYW1lIjoiYmhhZ3lhIiwiZW1haWwiOiJOUi5CaGFneWFsYWtzaG1pQHJ4bG9naXguY29tIn0sInB1YmxpY2F0aW9uRGF0ZSI6IjEzLU1heS0yMDIwIiwiZGlzcG9zaXRpb24iOiJOZXciLCJwcm9kdWN0TmFtZSI6IldITy1ESUFNSUNST04gTVIiLCJldmVudE5hbWUiOm51bGwsImFjdGlvbkNvdW50IjowLCJpc1ZhbGlkYXRpb25TdGF0ZUFjaGlldmVkIjpmYWxzZSwiYWxlcnRUYWdzIjpbXSwiYWxlcnRDb25maWdJZCI6NzY5MCwiYXJ0aWNsZUlkIjoiMzI0MTYyMjgiLCJhcnRpY2xlQWJzdHJhY3QiOiJJbmhpYml0aW9uIGFiaWxpdGllcyBhcmUgb2Z0ZW4gaW1wYWlyZWQgaW4gY2hpbGRyZW4gYm9ybiB2ZXJ5IHByZXRlcm0uIEluIHR5cGljYWxseS1kZXZlbG9waW5nIGluZGl2aWR1YWxzLCBpbmhpYml0aW9uIGhhcyBiZWVuIGFzc29jaWF0ZWQgd2l0aCBzdHJ1Y3R1cmFsIGJyYWluIGNvbm5lY3Rpdml0eSAoU0MpLiBBcyBTQyBpcyBmcmVxdWVudGx5IGFsdGVyZWQgZm9sbG93aW5nIHByZXRlcm0gYmlydGgsIHRoaXMgc3R1ZHkgaW52ZXN0aWdhdGVkIHdoZXRoZXIgYWJlcnJhbnQgU0MgdW5kZXJsaWVzIGluaGliaXRpb24gZGVmaWNpdHMgaW4gc2Nob29sLWFnZWQgY2hpbGRyZW4gYm9ybiB2ZXJ5IHByZXRlcm0uIEluIGEgZ3JvdXAgb2YgNjcgdmVyeSBwcmV0ZXJtIHBhcnRpY2lwYW50cyBhZ2VkIDggdG8gMTMgeWVhcnMgYW5kIDY5IHRlcm0tYm9ybiBwZWVycywgaW5oaWJpdGlvbiBhYmlsaXRpZXMgd2VyZSBhc3Nlc3NlZCB3aXRoIHR3byB0YXNrcy4gSW4gYSBzdWJncm91cCBvZiA1MCB2ZXJ5IHByZXRlcm0gYW5kIDYyIHRlcm0tYm9ybiBwYXJ0aWNpcGFudHMsIGRpZmZ1c2lvbiB0ZW5zb3IgaW1hZ2luZyAoRFRJKSBkYXRhIHdlcmUgY29sbGVjdGVkLiBVc2luZyBuZXR3b3JrLWJhc2VkIHN0YXRpc3RpY3MgKE5CUyksIG1lYW4gZnJhY3Rpb25hbCBhbmlzb3Ryb3B5IChGQW1lYW4pIHdhcyBjb21wYXJlZCBiZXR3ZWVuIGdyb3Vwcy4gQXNzb2NpYXRpb25zIG9mIEZBbWVhbiBhbmQgaW5oaWJpdGlvbiBhYmlsaXRpZXMgd2VyZSBleHBsb3JlZCB0aHJvdWdoIGxpbmVhciByZWdyZXNzaW9uLiBUaGUgY29tcG9zaXRlIHNjb3JlIG9mIGluaGliaXRpb24gYWJpbGl0aWVzIHdhcyBsb3dlciBpbiB0aGUgdmVyeSBwcmV0ZXJtIGdyb3VwIChNID0gLTAuNCwgU0QgPSAwLjgpIHRoYW4gaW4gdGhlIHRlcm0tYm9ybiBncm91cCAoTSA9IDAuMCwgU0QgPSAwLjgpIGJ1dCBncm91cCBkaWZmZXJlbmNlcyB3ZXJlIG5vdCBzaWduaWZpY2FudCB3aGVuIGFkanVzdGluZyBmb3IgYWdlLCBzZXggYW5kIHNvY2lvLWVjb25vbWljIHN0YXR1cyAozrIgPSAtMC4xMywgOTUlLUNJIFstMC4zMCwgMC4wNF0sIHAgPSAuMTMpLiBJbiB0aGUgdmVyeSBwcmV0ZXJtIGdyb3VwLCBGQW1lYW4gd2FzIHNpZ25pZmljYW50bHkgbG93ZXIgaW4gYSBuZXR3b3JrIGNvbXByaXNpbmcgdGhhbGFtby1mcm9udGFsLCB0aGFsYW1vLXRlbXBvcmFsLCBmcm9udGFsLCBjZXJlYmVsbGFyIGFuZCBpbnRyYS1oZW1pc3BoZXJpYyBjb25uZWN0aW9ucyB0aGFuIGluIHRoZSB0ZXJtLWJvcm4gZ3JvdXAgKHQgPSA1LjIxLCBsb3dlc3QgcC12YWx1ZSA9IDAuMDAxKS4gSXJyZXNwZWN0aXZlIG9mIGJpcnRoIHN0YXR1cywgYSBuZXR3b3JrIGNvbXByaXNpbmcgcGFyaWV0YWwsIGNlcmViZWxsYXIgYW5kIHN1YmNvcnRpY2FsIGNvbm5lY3Rpb25zIHdhcyBwb3NpdGl2ZWx5IGFzc29jaWF0ZWQgd2l0aCBpbmhpYml0aW9uIGFiaWxpdGllcyAodCA9IDQuMjMsIGxvd2VzdCBwLXZhbHVlID0gMC4wMikuIFZlcnkgcHJldGVybSBiaXJ0aCByZXN1bHRzIGluIGxvbmctdGVybSBhbHRlcmF0aW9ucyBvZiBTQyBhdCBuZXR3b3JrLWxldmVsLiBBcyBuZXR3b3JrcyB1bmRlcmx5aW5nIGluaGliaXRpb24gYWJpbGl0aWVzIGRvIG5vdCBvdmVybGFwIHdpdGggdGhvc2UgZGlmZmVyaW5nIGJldHdlZW4gdGhlIGdyb3VwcywgRkFtZWFuIG1heSBub3QgYmUgYWRlcXVhdGUgdG8gZXhwbGFpbiBpbmhpYml0aW9uIHByb2JsZW1zIGluIHZlcnkgcHJldGVybSBjaGlsZHJlbi4gRnV0dXJlIHN0dWRpZXMgc2hvdWxkIGNvbWJpbmUgY29tcGxlbWVudGFyeSBtZWFzdXJlcyBvZiBicmFpbiBjb25uZWN0aXZpdHkgdG8gYWRkcmVzcyBuZXVyYWwgY29ycmVsYXRlcyBvZiBpbmhpYml0aW9uIGFiaWxpdGllcy4iLCJleGVjQ29uZmlnSWQiOjc3MjEsImlzUmV2aWV3ZWQiOmZhbHNlLCJjb21tZW50IjpudWxsLCJpc0F0dGFjaG1lbnQiOmZhbHNlLCJzaWduYWwiOltdfSx7ImlkIjo3OTg4LCJhbGVydE5hbWUiOiJMaXRQZXJmMSIsInByaW9yaXR5Ijp7InZhbHVlIjoiVXJnZW50IiwiaWNvbkNsYXNzIjoibWRpIG1kaS1hbHBoYS11LWNpcmNsZSByZWQtMSJ9LCJ0aXRsZSI6IlRlY2huaWNhbCBOb3RlOiBOZXcgc2ltaWxhcml0eSBpbmRleCBmb3IgcmFkaW90aGVyYXB5IGFuZCBtZWRpY2FsIGltYWdpbmcuIiwiYXV0aG9ycyI6IltWYWRpbSBZLCBLdXBlcm1hbl1bR3VzdGF2byBGLCBMdW5lbGxpXSIsImFzc2lnbmVkVG8iOnsiaWQiOjc0MzUsImZ1bGxOYW1lIjoiYmhhZ3lhIiwidXNlcm5hbWUiOiJiaGFneWEiLCJlbWFpbCI6Ik5SLkJoYWd5YWxha3NobWlAcnhsb2dpeC5jb20ifSwicHVibGljYXRpb25EYXRlIjoiMTQtTWF5LTIwMjAiLCJkaXNwb3NpdGlvbiI6Ik5ldyIsInByb2R1Y3ROYW1lIjoiV0hPLURJQU1JQ1JPTiBNUiIsImV2ZW50TmFtZSI6bnVsbCwiYWN0aW9uQ291bnQiOjAsImlzVmFsaWRhdGlvblN0YXRlQWNoaWV2ZWQiOmZhbHNlLCJhbGVydFRhZ3MiOltdLCJhbGVydENvbmZpZ0lkIjo3NjkwLCJhcnRpY2xlSWQiOiIzMjQwNjUzOCIsImFydGljbGVBYnN0cmFjdCI6InRvIGRlc2NyaWJlIGEgbmV3IHNpbWlsYXJpdHkgaW5kZXggYW5kIGNvbnNpZGVyIGl0cyBiaW9tZWRpY2FsIGFwcGxpY2F0aW9ucy5zaW1pbGFyaXR5IGluZGV4IGZvciBhIHBhaXIgb2Ygb2JqZWN0cyBpcyBkZWZpbmVkIGJ5IHRoZSBudW1iZXIgb2Ygc2hhcmVkIGZlYXR1cmVzIGFuZCB0b3RhbCBudW1iZXIgb2YgZmVhdHVyZXMgaW4gdGhlc2Ugb2JqZWN0cy4gU2ltaWxhcml0eSBtZWFzdXJlIGZvciBtb3JlIHRoYW4gdHdvIG9iamVjdHMgaXMgY29tbW9ubHkgZGVmaW5lZCBieSB1c2luZyBwYWlyd2lzZSBzaW1pbGFyaXR5IGluZGljZXMuIEluIHRoZSBjdXJyZW50IHN0dWR5IHdlIHN1Z2dlc3QgYSBub3ZlbCBzaW1pbGFyaXR5IGluZGV4IHdoaWNoIGRlcGVuZHMgb24gdGhlIG51bWJlciBvZiBmZWF0dXJlcyBzaGFyZWQgYmV0d2VlbiBtdWx0aXBsZSBvYmplY3RzIGFuZCBkb2Vzbid0IGhhdmUgdGhlIGxpbWl0YXRpb25zIG9mIHRoZSByZWNlbnRseSBkZXNjcmliZWQgc2ltaWxhcml0eSBtZWFzdXJlcy4gSW4gb3JkZXIgdG8gaW50cm9kdWNlIHRoZSBuZXcgaW5kZXgsIHdlIGNvbnNpZGVyIGEgY29uY2VwdCBvZiBcImNvbW1vbmFsaXR5XCIuIEZvciBhIGNvbGxlY3Rpb24gb2Ygc2V0cyBBMSAsQTIgLi4uLi4sIEFOICwgY29tbW9uYWxpdHkgb2YgYSBnaXZlbiBlbGVtZW50IGVxdWFscyB0aGUgbnVtYmVyIG9mIHNldHMgdGhpcyBlbGVtZW50IGJlbG9uZ3MgdG8uIFRoZSBzaW1pbGFyaXR5IGluZGV4IGZvciB0aGUgY29tcGFyZWQgc2V0cyBpcyB0aGVuIGRlZmluZWQgYnkgYSB3ZWlnaHRlZCBzdW0gb2Ygbm9ybWFsaXplZCBjb21tb25hbGl0aWVzLnRoZSBjb25zaWRlcmVkIGJpb21lZGljYWwgYXBwbGljYXRpb25zIG9mIHRoZSBwcm9wb3NlZCBpbmRleCBpbmNsdWRlIGNvbXBhcmlzb24gb2YgaW5kZXBlbmRlbnQgZGVsaW5lYXRpb25zIG9mIGNyaXRpY2FsIGNyYW5pYWwgc3RydWN0dXJlcyBpbiBNUiBpbWFnZXMgYW5kIGNvbXBhcmlzb24gb2YgaXNvZG9zZSBkaXN0cmlidXRpb25zIGZyb20gZGlmZmVyZW50IHJhZGlvdGhlcmFweSBwbGFucy50aGlzIHN0dWR5IGRlc2NyaWJlcyBhIG5vdmVsIHNpbWlsYXJpdHkgaW5kZXggd2hpY2ggY2FuIGJlIHVzZWQgdG8gYXNzZXNzIHNpbWlsYXJpdHkgb2YgbXVsdGlwbGUgaW5kZXBlbmRlbnQgZGVsaW5lYXRpb25zIG9mIHRoZSBhbmF0b21pY2FsIHN0cnVjdHVyZSBvciBzaW1pbGFyaXR5IG9mIG11bHRpcGxlIGRvc2UgZGlzdHJpYnV0aW9ucy4gVW5saWtlIHRoZSBjb21tb25seSB1c2VkIHBhaXJ3aXNlIHNpbWlsYXJpdHkgaW5kaWNlcywgdGhlIG5ldyBpbmRleCBpcyBkZWZpbmVkIGJ5IHRoZSBudW1iZXIgb2YgZWxlbWVudHMgc2hhcmVkIGJldHdlZW4gbXVsdGlwbGUgc2V0cy4gUG90ZW50aWFsIGFwcGxpY2F0aW9ucyBvZiB0aGUgc3VnZ2VzdGVkIHNpbWlsYXJpdHkgaW5kZXggZm9yIHJhZGlvdGhlcmFweSBhbmQgbWVkaWNhbCBpbWFnaW5nIGhhdmUgYmVlbiBkZXNjcmliZWQuIiwiZXhlY0NvbmZpZ0lkIjo3NzIxLCJpc1Jldmlld2VkIjpmYWxzZSwiY29tbWVudCI6bnVsbCwiaXNBdHRhY2htZW50IjpmYWxzZSwic2lnbmFsIjpbXX0seyJpZCI6Nzg2NywiYWxlcnROYW1lIjoiTGl0UGVyZjEiLCJwcmlvcml0eSI6eyJ2YWx1ZSI6IlVyZ2VudCIsImljb25DbGFzcyI6Im1kaSBtZGktYWxwaGEtdS1jaXJjbGUgcmVkLTEifSwidGl0bGUiOiJSYWRpb2xvZ3kgcHJvZmlsZSBhcyBhIHBvdGVudGlhbCBpbnN0cnVtZW50IHRvIGRpZmZlcmVudGlhdGUgYmV0d2VlbiBwb3N0ZXJpb3IgZm9zc2EgZXBlbmR5bW9tYSAoUEYtRVBOKSBncm91cCBBIGFuZCBCLiIsImF1dGhvcnMiOiJbVXNoaW8sIFlvbmV6YXdhXVtWZWdhLCBLYXJsb3dlZV1bVmlzaHdhIEplZXQsIEFtYXR5YV1bVGFrZXNoaSwgVGFrYXlhc3VdW01vdG9raSwgVGFrYW5vXVtZdWtpbywgVGFrZXNoaW1hXVtLYXp1aGlrbywgU3VnaXlhbWFdW0thb3J1LCBLdXJpc3VdW0Z1bWl5dWtpLCBZYW1hc2FraV0iLCJhc3NpZ25lZFRvIjp7ImlkIjo3NDM1LCJmdWxsTmFtZSI6ImJoYWd5YSIsInVzZXJuYW1lIjoiYmhhZ3lhIiwiZW1haWwiOiJOUi5CaGFneWFsYWtzaG1pQHJ4bG9naXguY29tIn0sInB1YmxpY2F0aW9uRGF0ZSI6IjE2LU1heS0yMDIwIiwiZGlzcG9zaXRpb24iOiJOZXciLCJwcm9kdWN0TmFtZSI6IldITy1ESUFNSUNST04gTVIiLCJldmVudE5hbWUiOm51bGwsImFjdGlvbkNvdW50IjowLCJpc1ZhbGlkYXRpb25TdGF0ZUFjaGlldmVkIjpmYWxzZSwiYWxlcnRUYWdzIjpbXSwiYWxlcnRDb25maWdJZCI6NzY5MCwiYXJ0aWNsZUlkIjoiMzI0Mjg3MjUiLCJhcnRpY2xlQWJzdHJhY3QiOiJQb3N0ZXJpb3IgZm9zc2EgZXBlbmR5bW9tYSAoUEYtRVBOKSB3YXMgY2F0ZWdvcml6ZWQgaW50byBQRi1FUE4tQSBhbmQgUEYtRVBOLUIgc3ViZ3JvdXBzIGJhc2VkIG9uIHRoZSBETkEgbWV0aHlsYXRpb24gcHJvZmlsaW5nLiBQRi1FUE4tQSB3YXMgcmVwb3J0ZWQgdG8gaGF2ZSBwb29yZXIgcHJvZ25vc2lzIGNvbXBhcmVkIHRvIFBGLUVQTi1CLiBJbiB0aGlzIHN0dWR5LCB3ZSBwYXJ0aWN1bGFybHkgZXZhbHVhdGVkIHByZW9wZXJhdGl2ZSBpbWFnaW5nIHRvIGRpc3Rpbmd1aXNoIFBGLUVQTi1BIGZyb20gUEYtRVBOLUIuU2l4dGVlbiBjYXNlcyBvZiBQRi1FUE4gd2VyZSB0cmVhdGVkIGluIG91ciBpbnN0aXR1dGlvbiBmcm9tIDE5OTkgdG8gMjAxOC4gVGhlIHBhdGllbnRzIHdlcmUgZGl2aWRlZCBpbnRvIFBGLUVQTi1BIGFuZCBQRi1FUE4tQiBncm91cCBiYXNlZCBvbiB0aGUgSDNLMjdtZTMgaW1tdW5vc3RhaW5pbmcgcG9zaXRpdml0eS4gV2UgZXZhbHVhdGVkIHByb2dyZXNzaW9uIGZyZWUgc3Vydml2YWwgKFBGUyksIG92ZXJhbGwgc3Vydml2YWwgKE9TKSwgYXMgd2VsbCBhcyBwcmVvcGVyYXRpdmUgTVJJIGFuZCBDVCBzY2FuIGltYWdlcyBpbiBib3RoIGdyb3Vwcy4gQmFzZWQgb24gVDFXSSBhbmQgR2QtVDFXSSBNUiBpbWFnZXMsIHRoZSB0dW1vciBjb250cmFzdCByYXRlIHdhcyBkZXRlcm1pbmVkIGZyb20gZGl2aWRpbmcgdGhlIHZvbHVtZSBvZiBnYWRvbGluaXVtIGVuaGFuY2VkIHR1bW9yIGJ5IHRoZSBvdmVyYWxsIHR1bW9yIHZvbHVtZS5OaW5lIGNhc2VzICg0IG1hbGVzIGFuZCA1IGZlbWFsZXMpIHdlcmUgZ3JvdXBlZCBhcyBQRi1FUE4tQSwgYW5kIDcgKDQgbWFsZXMgYW5kIDMgZmVtYWxlcykgYXMgUEYtRVBOLUIuIFRoZSBtZWRpYW4gYWdlIG9mIFBGLUVQTi1BIGFuZCBCIHdlcmUgNCBhbmQgNDMgeWVhciBvbGQsIHJlc3BlY3RpdmVseS4gSW4gUEYtRVBOLUEgZ3JvdXAsIHRoZSBQRlMgbWVkaWFuIHZhbHVlIHdhcyAzMi42IG1vbnRocywgYW5kIHRoZSBPUyBtZWRpYW4gd2FzIDk2LjkgbW9udGhzLiBJbiBjb250cmFzdCwgUEZTIGluIFBGLUVQTi1CIHdhcyBub3QgcmVhY2hlZCBhIG1lZGlhbiB2YWx1ZSAoUDwwLjA1KSBhbmQgYWxsIHRoZSBwYXRpZW50cyB3ZXJlIGFsaXZlIChQPDAuMDUpLiBXaXRoIGltYWdpbmcsIHR1bW9yIGNvbnRyYXN0IHJhdGUgaW4gUEYtRVBOLUIgd2FzIG1vcmUgdGhhbiA1MCUgYW5kIHNpZ25pZmljYW50bHkgZGlmZmVyZW50IGZyb20gUEYtRVBOLUEgKFA9MC4wMjk0KS4gQ2FsY2lmaWNhdGlvbiB3YXMgbWFpbmx5IG9ic2VydmVkIGluIFBGLUVQTi1BLCB3aGlsZSBjeXN0aWMgZm9ybWF0aW9uIHdhcyBvbmx5IGluIFBGLUVQTi1CLkNvbnRyYXN0IHJhdGUgbGVzcyB0aGFuIDUwJSwgYmFzZWQgb24gdGhlIE1SIGltYWdlcywgd2FzIGNoYXJhY3RlcmlzdGljIGluIFBGLUVQTi1BIGdyb3VwLiBDb21wYXJhdGl2ZWx5LCBjeXN0aWMgY29tcG9uZW50IGFuZCBhYnNlbmNlIG9mIGNhbGNpZmljYXRpb24gd2VyZSBtb3JlIGNoYXJhY3RlcmlzdGljIGluIHRoZSBQRi1FUE4tQiBncm91cC4iLCJleGVjQ29uZmlnSWQiOjc3MjEsImlzUmV2aWV3ZWQiOmZhbHNlLCJjb21tZW50IjpudWxsLCJpc0F0dGFjaG1lbnQiOmZhbHNlLCJzaWduYWwiOltdfSx7ImlkIjo3ODk3LCJhbGVydE5hbWUiOiJMaXRQZXJmMSIsInByaW9yaXR5Ijp7InZhbHVlIjoiVXJnZW50IiwiaWNvbkNsYXNzIjoibWRpIG1kaS1hbHBoYS11LWNpcmNsZSByZWQtMSJ9LCJ0aXRsZSI6IkxvY2F0aW9uIGFuZCBEaWFtZXRlciBvZiBJbnRyYWNyYW5pYWwgTWVuaW5naW9tYSBhcyBQcmVkaWN0b3JzIG9mIFBlcml0dW1vcmFsIEJyYWluIE9lZGVtYSBhbmQgTWFzcyBFZmZlY3QuIiwiYXV0aG9ycyI6IltVZGFyaSBBcHNhcmEsIExpeWFuYWdlXVtZYXNpdGgsIE1hdGhhbmdhc2luZ2hlXVtQcmFkZWVwIEt1bWFyYSwgV2lqZXJhdGhuZV1bU2FoYXRoZXZhbiwgVml0aG9vc2FuXVtBcnVuYSwgUGFsbGV3YXR0ZV0iLCJhc3NpZ25lZFRvIjp7ImlkIjo3NDM1LCJmdWxsTmFtZSI6ImJoYWd5YSIsInVzZXJuYW1lIjoiYmhhZ3lhIiwiZW1haWwiOiJOUi5CaGFneWFsYWtzaG1pQHJ4bG9naXguY29tIn0sInB1YmxpY2F0aW9uRGF0ZSI6IjE1LU1heS0yMDIwIiwiZGlzcG9zaXRpb24iOiJOZXciLCJwcm9kdWN0TmFtZSI6IldITy1ESUFNSUNST04gTVIiLCJldmVudE5hbWUiOm51bGwsImFjdGlvbkNvdW50IjowLCJpc1ZhbGlkYXRpb25TdGF0ZUFjaGlldmVkIjpmYWxzZSwiYWxlcnRUYWdzIjpbXSwiYWxlcnRDb25maWdJZCI6NzY5MCwiYXJ0aWNsZUlkIjoiMzI0MjM3ODUiLCJhcnRpY2xlQWJzdHJhY3QiOiJUaGUgcHJlc2VuY2Ugb2YgcGVyaXR1bW9yYWwgb2VkZW1hIG9yIG1hc3MgZWZmZWN0IHdpdGggaW50cmFjcmFuaWFsIG1lbmluZ2lvbWFzIGlzIGFzc29jaWF0ZWQgd2l0aCBwb29yIGNsaW5pY2FsIG91dGNvbWVzLiBUaGlzIHN0dWR5IGFpbWVkIHRvIGludmVzdGlnYXRlIG1hZ25ldGljIHJlc29uYW5jZSAoTVIpIG1vcnBob2xvZ2ljIGZlYXR1cmVzIG9mIG1lbmluZ2lvbWEsIHdoaWNoIGNhbiBwcmVkaWN0IHBlcml0dW1vcmFsIG9lZGVtYSBhbmQgbWFzcyBlZmZlY3QuRGF0YSBvZiAxMDAgY29uc2VjdXRpdmUgcGF0aWVudHMgZGlhZ25vc2VkIHdpdGggbWVuaW5naW9tYSBvbiBNUkkgYnJhaW4gYXQgdGhlIG5ldXJvc3VyZ2ljYWwgTVJJIHVuaXQsIE5hdGlvbmFsIEhvc3BpdGFsIG9mIFNyaSBMYW5rYSwgcmVwb3J0ZWQgYnkgYSBDb25zdWx0YW50IFJhZGlvbG9naXN0IHdlcmUgYW5hbHlzZWQgaW4gYSByZXRyb3NwZWN0aXZlIHN0dWR5LiBCaW5hcnkgbG9naXN0aWMgcmVncmVzc2lvbiBtb2RlbHMgd2VyZSBmaXR0ZWQgdG8gaWRlbnRpZnkgcHJlZGljdG9ycyBvZiBwZXJpbGVzaW9uYWwgb2VkZW1hIGFuZCBtYXNzIGVmZmVjdC5GZW1hbGUtdG8tbWFsZSByYXRpbyB3YXMgNS44OjEuIFBhdGllbnRzIHdlcmUgYWdlZCAxOC04MMKgeWVhcnMuIE1ham9yaXR5IChuID0gNzgpIHdlcmUgaW4gc3VwcmF0ZW50b3JpYWwgY29tcGFydG1lbnQgd2l0aCAxNiBhdCBwYXJhc2FnaXR0YWwgbG9jYXRpb24uIENlcmViZWxsb3BvbnRpbmUgYW5nbGUgd2FzIHRoZSBjb21tb25lc3QgaW5mcmF0ZW50b3JpYWwgc2l0ZSAobiA9IDkpLiBTaXplIG9mIG1lbmluZ2lvbWFzIHJhbmdlZCBmcm9tIDEuMSB0byA5LjHCoGNtIChsYXJnZXN0IGRpbWVuc2lvbikuIE1hc3MgZWZmZWN0IChuID0gNjgpLCBwZXJpbGVzaW9uYWwgb2VkZW1hIChuID0gMzcpLCBhbmQgbWlkbGluZSBkZXZpYXRpb24gKG4gPSAzMSkgd2VyZSB0aGUgbW9zdCBjb21tb25seSByZXBvcnRlZCBjb21wbGljYXRpb25zLiBNYXhpbXVtIGRpYW1ldGVyIG9mIG1lbmluZ2lvbWEgYW5kIGl0cyBsb2NhdGlvbiBzaWduaWZpY2FudGx5IHByZWRpY3RlZCB0aGUgcHJlc2VuY2Ugb2YgcGVyaWxlc2lvbmFsIG9lZGVtYSBbz4cyKDIsNDcpID0gNi4wMywgUCA9IC4wNDksIE5hZ2Vsa2Vya2UgUjIgPSAxOC4yJV0gYW5kIG1hc3MgZWZmZWN0IFvPhzIoMiw3MSkgPSAxNi43MywgUCA9IC4wMDAsIE5hZ2Vsa2Vya2UgUjIgPSAzOS40JV0gaW4gdHdvIGxvZ2lzdGljIHJlZ3Jlc3Npb24gbW9kZWxzLlRoZSBwcm9iYWJpbGl0eSBvZiBtYXNzIGVmZmVjdCBhbmQgcGVyaWxlc2lvbmFsIG9lZGVtYSBpbmNyZWFzZWQgd2l0aCB0aGUgbWF4aW11bSBkaWFtZXRlci4gTWVuaW5naW9tYSBleHRlbmRpbmcgdG8gYm90aCBzdXByYXRlbnRvcmlhbCBhbmQgaW5mcmF0ZW50b3JpYWwgY29tcGFydG1lbnRzIGhhZCB0aGUgaGlnaGVzdCByaXNrIG9mIGhhdmluZyBjb25jb21pdGFudCBwZXJpbGVzaW9uYWwgb2VkZW1hIGFuZCBtYXNzIGVmZmVjdC4iLCJleGVjQ29uZmlnSWQiOjc3MjEsImlzUmV2aWV3ZWQiOmZhbHNlLCJjb21tZW50IjpudWxsLCJpc0F0dGFjaG1lbnQiOmZhbHNlLCJzaWduYWwiOltdfSx7ImlkIjo3OTc2LCJhbGVydE5hbWUiOiJMaXRQZXJmMSIsInByaW9yaXR5Ijp7InZhbHVlIjoiVXJnZW50IiwiaWNvbkNsYXNzIjoibWRpIG1kaS1hbHBoYS11LWNpcmNsZSByZWQtMSJ9LCJ0aXRsZSI6Ik5vdmVsIGluc2lnaHRzIGludG8gYnJlYXN0IGNhbmNlciBjb3B5IG51bWJlciBnZW5ldGljIGhldGVyb2dlbmVpdHkgcmV2ZWFsZWQgYnkgc2luZ2xlLWNlbGwgZ2Vub21lIHNlcXVlbmNpbmcuIiwiYXV0aG9ycyI6IltUaW1vdXIsIEJhc2xhbl1bSnVkZSwgS2VuZGFsbF1bS29uc3RhbnRpbiwgVm9seWFuc2t5eV1bS2F0aGVyaW5lLCBNY05hbWFyYV1bSGlsYXJ5LCBDb3hdW1NlYW4sIEQnSXRhbGlhXVtGcmFuaywgQW1icm9zaW9dW01pY2hhZWwsIFJpZ2dzXVtMaW5kYSwgUm9kZ2Vyc11bQW50aG9ueSwgTGVvdHRhXVtKdW55YW4sIFNvbmddW1lvbmcsIE1hb11bSmllLCBXdV1bUm9uYWssIFNoYWhdW1JvZHJpZ28sIEd1bGFydGUtTcOpcmlkYV1bS2FseWFuaSwgQ2hhZGFsYXZhZGFdW0dvdXJpLCBOYW5qYW5ndWRdW1ZpbmF5LCBWYXJhZGFuXVtBc3NhZiwgR29yZG9uXVtDaHJpc3RpbmEsIEN1cnRpc11bQWxleCwgS3Jhc25pdHpdW05ldmVua2EsIERpbWl0cm92YV1bTHluZHNheSwgSGFycmlzXVtNaWNoYWVsLCBXaWdsZXJdW0phbWVzLCBIaWNrc10iLCJhc3NpZ25lZFRvIjp7ImlkIjo3NDM1LCJmdWxsTmFtZSI6ImJoYWd5YSIsInVzZXJuYW1lIjoiYmhhZ3lhIiwiZW1haWwiOiJOUi5CaGFneWFsYWtzaG1pQHJ4bG9naXguY29tIn0sInB1YmxpY2F0aW9uRGF0ZSI6IjEzLU1heS0yMDIwIiwiZGlzcG9zaXRpb24iOiJOZXciLCJwcm9kdWN0TmFtZSI6IldITy1ESUFNSUNST04gTVIiLCJldmVudE5hbWUiOm51bGwsImFjdGlvbkNvdW50IjowLCJpc1ZhbGlkYXRpb25TdGF0ZUFjaGlldmVkIjpmYWxzZSwiYWxlcnRUYWdzIjpbXSwiYWxlcnRDb25maWdJZCI6NzY5MCwiYXJ0aWNsZUlkIjoiMzI0MDExOTgiLCJhcnRpY2xlQWJzdHJhY3QiOiJDb3B5IG51bWJlciBhbHRlcmF0aW9ucyAoQ05BcykgcGxheSBhbiBpbXBvcnRhbnQgcm9sZSBpbiBtb2xkaW5nIHRoZSBnZW5vbWVzIG9mIGJyZWFzdCBjYW5jZXJzIGFuZCBoYXZlIGJlZW4gc2hvd24gdG8gYmUgY2xpbmljYWxseSB1c2VmdWwgZm9yIHByb2dub3N0aWMgYW5kIHRoZXJhcGV1dGljIHB1cnBvc2VzLiBIb3dldmVyLCBvdXIga25vd2xlZGdlIG9mIGludHJhLXR1bW9yYWwgZ2VuZXRpYyBoZXRlcm9nZW5laXR5IG9mIHRoaXMgaW1wb3J0YW50IGNsYXNzIG9mIHNvbWF0aWMgYWx0ZXJhdGlvbnMgaXMgbGltaXRlZC4gSGVyZSwgdXNpbmcgc2luZ2xlLWNlbGwgc2VxdWVuY2luZywgd2UgY29tcHJlaGVuc2l2ZWx5IG1hcCBvdXQgdGhlIGZhY2V0cyBvZiBjb3B5IG51bWJlciBhbHRlcmF0aW9uIGhldGVyb2dlbmVpdHkgaW4gYSBjb2hvcnQgb2YgYnJlYXN0IGNhbmNlciB0dW1vcnMuIE91L3Zhci93d3cvaHRtbC9lbGlmZS8xMi0wNS0yMDIwL2JhY2t1cC9yIGFuYWx5c2VzIHJldmVhbDogZ2VuZXRpYyBoZXRlcm9nZW5laXR5IG9mIG5vbi10dW1vciBjZWxscyAoaS5lLiBzdHJvbWEpIHdpdGhpbiB0aGUgdHVtb3IgbWFzczsgdGhlIGV4dGVudCB0byB3aGljaCBjb3B5IG51bWJlciBoZXRlcm9nZW5laXR5IGltcGFjdHMgYnJlYXN0IGNhbmNlciBnZW5vbWVzIGFuZCB0aGUgaW1wb3J0YW5jZSBvZiBib3RoIHRoZSBnZW5vbWljIGxvY2F0aW9uIGFuZCBkb3NhZ2Ugb2Ygc3ViLWNsb25hbCBldmVudHM7IHRoZSBwZXJ2YXNpdmUgbmF0dXJlIG9mIGdlbmV0aWMgaGV0ZXJvZ2VuZWl0eSBvZiBjaHJvbW9zb21hbCBhbXBsaWZpY2F0aW9uczsgYW5kIHRoZSBhc3NvY2lhdGlvbiBvZiBjb3B5IG51bWJlciBoZXRlcm9nZW5laXR5IHdpdGggY2xpbmljYWwgYW5kIGJpb2xvZ2ljYWwgcGFyYW1ldGVycyBzdWNoIGFzIHBvbHlwbG9pZHkgYW5kIGVzdHJvZ2VuIHJlY2VwdG9yIG5lZ2F0aXZlIHN0YXR1cy4gT3VyIGRhdGEgaGlnaGxpZ2h0IHRoZSBwb3dlciBvZiBzaW5nbGUtY2VsbCBnZW5vbWljcyBpbiBkaXNzZWN0aW5nLCBpbiBpdHMgbWFueSBmb3JtcywgaW50cmEtdHVtb3JhbCBnZW5ldGljIGhldGVyb2dlbmVpdHkgb2YgQ05BcywgdGhlIG1hZ25pdHVkZSB3aXRoIHdoaWNoIENOQSBoZXRlcm9nZW5laXR5IGFmZmVjdHMgdGhlIGdlbm9tZXMgb2YgYnJlYXN0IGNhbmNlcnMsIGFuZCB0aGUgcG90ZW50aWFsIGltcG9ydGFuY2Ugb2YgQ05BIGhldGVyb2dlbmVpdHkgaW4gcGhlbm9tZW5hIHN1Y2ggYXMgdGhlcmFwZXV0aWMgcmVzaXN0YW5jZSBhbmQgZGlzZWFzZSByZWxhcHNlLiIsImV4ZWNDb25maWdJZCI6NzcyMSwiaXNSZXZpZXdlZCI6ZmFsc2UsImNvbW1lbnQiOm51bGwsImlzQXR0YWNobWVudCI6ZmFsc2UsInNpZ25hbCI6W119LHsiaWQiOjc5NjIsImFsZXJ0TmFtZSI6IkxpdFBlcmYxIiwicHJpb3JpdHkiOnsidmFsdWUiOiJVcmdlbnQiLCJpY29uQ2xhc3MiOiJtZGkgbWRpLWFscGhhLXUtY2lyY2xlIHJlZC0xIn0sInRpdGxlIjoiRmVhc2liaWxpdHkgb2YgUmVhbC10aW1lIE1vdGlvbiBUcmFja2luZyBVc2luZyBDaW5lIE1SSSBEdXJpbmcgTVItR3VpZGVkIFJhZGlhdGlvbiBUaGVyYXB5IGZvciBBYmRvbWluYWwgVGFyZ2V0cy4iLCJhdXRob3JzIjoiW1RpbW90aHkgRCwgS2VpcGVyXVtBbiwgVGFpXVtYaW5mZW5nLCBDaGVuXVtFcmljLCBQYXVsc29uXVtGYWJpZW5uZSwgTGF0aHVpbGnDqHJlXVtTaWx2YWluLCBCw6lyaWF1bHRdW0ZyYW7Dp29pcywgSMOpYmVydF1bRGF2aWQgVCwgQ29vcGVyXVtNYXJ0aW4sIExhY2hhaW5lXVtYIEFsbGVuLCBMaV0iLCJhc3NpZ25lZFRvIjp7ImlkIjo3NDM1LCJmdWxsTmFtZSI6ImJoYWd5YSIsInVzZXJuYW1lIjoiYmhhZ3lhIiwiZW1haWwiOiJOUi5CaGFneWFsYWtzaG1pQHJ4bG9naXguY29tIn0sInB1YmxpY2F0aW9uRGF0ZSI6IjEzLU1heS0yMDIwIiwiZGlzcG9zaXRpb24iOiJOZXciLCJwcm9kdWN0TmFtZSI6IldITy1ESUFNSUNST04gTVIiLCJldmVudE5hbWUiOm51bGwsImFjdGlvbkNvdW50IjowLCJpc1ZhbGlkYXRpb25TdGF0ZUFjaGlldmVkIjpmYWxzZSwiYWxlcnRUYWdzIjpbXSwiYWxlcnRDb25maWdJZCI6NzY5MCwiYXJ0aWNsZUlkIjoiMzI0MDIxMTEiLCJhcnRpY2xlQWJzdHJhY3QiOiJSZWFsLXRpbWUgaGlnaC1zb2Z0IHRpc3N1ZSBjb250cmFzdCBNUkkgZnJvbSB0aGUgTVItTGluYWMgb2ZmZXJzIHRoZSBiZXN0IG9wcG9ydHVuaXR5IGZvciBhY2N1cmF0ZSBtb3Rpb24gdHJhY2tpbmcgZHVyaW5nIHJhZGlhdGlvbiB0aGVyYXB5IGRlbGl2ZXJ5IHZpYSBoaWdoLWZyZXF1ZW5jeSAyRCBjaW5lIGltYWdpbmcuIFRoaXMgd29yayBpbnZlc3RpZ2F0ZXMgdGhlIGVmZmljYWN5IG9mIHJlYWwtdGltZSBvcmdhbiBtb3Rpb24gdHJhY2tpbmcgYmFzZWQgb24gdGhlIHJlZ2lzdHJhdGlvbiBvZiBNUkkgYWNxdWlyZWQgb24gTVItTGluYWMuQWxnb3JpdGhtcyBiYXNlZCBvbiBpbWFnZSBpbnRlbnNpdHkgd2VyZSBkZXZlbG9wZWQgdG8gZGV0ZXJtaW5lIHRoZSAzRCB0cmFuc2xhdGlvbiBvZiBhYmRvbWluYWwgdGFyZ2V0cy4gMkQgYW5kIDNEIGFiZG9taW5hbCBNUklzIHdlcmUgYWNxdWlyZWQgZm9yIDEwIGhlYWx0aHkgdm9sdW50ZWVycyB1c2luZyBhIGhpZ2gtZmllbGQgTVItTGluYWMuIEZvciBlYWNoIHZvbHVudGVlciwgM0QgcmVzcGlyYXRpb24tZ2F0ZWQgVDIgYW5kIDJEIFQyL1QxLXdlaWdodGVkIGNpbmUgaW4gc2FnaXR0YWwsIGNvcm9uYWwsIGFuZCBheGlhbCBwbGFuZXMgd2l0aCBwbGFuYXIgdGVtcG9yYWwgcmVzb2x1dGlvbiBvZiAwLjYgcyBmb3IgNjAgcyB3YXMgY2FwdHVyZWQuIERhdGFzZXRzIHdlcmUgYWxzbyBjb2xsZWN0ZWQgb24gTVItY29tcGF0aWJsZSBwaHlzaWNhbCBhbmQgdmlydHVhbCA0RCBtb3Rpb24gcGhhbnRvbXMuIFRhcmdldCBjb250b3VycyBmb3IgdGhlIGxpdmVyIGFuZCBwYW5jcmVhcyBmcm9tIHRoZSAzRCBUMiB3ZXJlIHBvcHVsYXRlZCB0byB0aGUgY2luZSBhbmQgYXNzdW1lZCBhcyB0aGUgZ3JvdW5kLXRydXRoIG1vdGlvbi4gV2UgcGVyZm9ybWVkIGltYWdlIHJlZ2lzdHJhdGlvbiB1c2luZyBhIHJlc2VhcmNoIHNvZnR3YXJlIHRvIHRyYWNrIHRoZSB0YXJnZXQgM0QgbW90aW9uLiBTdGFuZGFyZCBkZXZpYXRpb25zIG9mIHRoZSBkaWZmZXJlbmNlIChTREUpIGJldHdlZW4gdGhlIGdyb3VuZC10cnV0aCBhbmQgdHJhY2tpbmcgd2VyZSBhbmFseXplZC5BbGdvcml0aG1zIHVzaW5nIGEgcmVzZWFyY2ggc29mdHdhcmUgd2VyZSBkZW1vbnN0cmF0ZWQgdG8gYmUgY2FwYWJsZSBvZiB0cmFja2luZyBhcmJpdHJhcnkgdGFyZ2V0cyBpbiB0aGUgYWJkb21lbiBhdCA1IEh6IHdpdGggYW4gb3ZlcmFsbCBhY2N1cmFjeSBvZiAwLjYgbW0gaW4gcGhhbnRvbSBzdHVkaWVzIGFuZCAyLjEgbW0gaW4gdm9sdW50ZWVycy4gSG93ZXZlciwgdGhpcyB2YWx1ZSBpcyBzdWJqZWN0IHRvIHBhdGllbnQtc3BlY2lmaWMgY29uc2lkZXJhdGlvbnMsIG5hbWVseSBtb3Rpb24gYW1wbGl0dWRlLiBDYWxjdWxhdGlvbiB0aW1lcyBvZiBsZXNzIHRoYW4gNTAgbXMgcHJvdmlkZSBhIHBhdGh3YXkgb2YgcmVhbC10aW1lIG1vdGlvbiB0cmFja2luZyBpbnRlZ3JhdGlvbi4gQSBtYWpvciBjaGFsbGVuZ2UgaW4gdXNpbmcgMkQgY2luZSBNUkkgdG8gdHJhY2sgdGhlIHRhcmdldCBpcyBoYW5kbGluZyB0aGUgZnVsbCAzRCBtb3Rpb24gb2YgdGhlIHRhcmdldC5GZWFzaWJpbGl0eSB0byB0cmFjayBvcmdhbiBtb3Rpb24gdXNpbmcgaW50ZW5zaXR5LWJhc2VkIHJlZ2lzdHJhdGlvbiBvZiBNUklzIHdhcyBkZW1vbnN0cmF0ZWQgZm9yIGFiZG9taW5hbCB0YXJnZXRzLiBUcmFja2luZyBhY2N1cmFjeSBvZiBhYm91dCAyIG1tIHdhcyBhY2hpZXZlZCBmb3IgdGhlIG1vdGlvbiBvZiB0aGUgcGFuY3JlYXRpYyBoZWFkIGZvciB0eXBpY2FsIHBhdGllbnQgbW90aW9uLiBGdXJ0aGVyIGRldmVsb3BtZW50IGlzIG9uZ29pbmcgdG8gaW1wcm92ZSB0aGUgdHJhY2tpbmcgYWxnb3JpdGhtIGZvciBsYXJnZSBhbmQgY29tcGxleCBtb3Rpb25zLiIsImV4ZWNDb25maWdJZCI6NzcyMSwiaXNSZXZpZXdlZCI6ZmFsc2UsImNvbW1lbnQiOm51bGwsImlzQXR0YWNobWVudCI6ZmFsc2UsInNpZ25hbCI6W119LHsiaWQiOjc4ODIsImFsZXJ0TmFtZSI6IkxpdFBlcmYxIiwicHJpb3JpdHkiOnsidmFsdWUiOiJVcmdlbnQiLCJpY29uQ2xhc3MiOiJtZGkgbWRpLWFscGhhLXUtY2lyY2xlIHJlZC0xIn0sInRpdGxlIjoiQXR5cGljYWwgQ09WSUQgLTE5IHByZXNlbnRhdGlvbiBpbiBwYXRpZW50IHVuZGVyZ29pbmcgc3RhZ2VkIFRBQUEgcmVwYWlyLiIsImF1dGhvcnMiOiJbVGltLCBSZXNjaF1bS2F0amEsIFZvZ3RdW05pa29sYWogRWxkcnVwLCBNZF0iLCJhc3NpZ25lZFRvIjp7ImlkIjo3NDM1LCJmdWxsTmFtZSI6ImJoYWd5YSIsInVzZXJuYW1lIjoiYmhhZ3lhIiwiZW1haWwiOiJOUi5CaGFneWFsYWtzaG1pQHJ4bG9naXguY29tIn0sInB1YmxpY2F0aW9uRGF0ZSI6IjE2LU1heS0yMDIwIiwiZGlzcG9zaXRpb24iOiJOZXciLCJwcm9kdWN0TmFtZSI6IldITy1ESUFNSUNST04gTVIiLCJldmVudE5hbWUiOm51bGwsImFjdGlvbkNvdW50IjowLCJpc1ZhbGlkYXRpb25TdGF0ZUFjaGlldmVkIjpmYWxzZSwiYWxlcnRUYWdzIjpbXSwiYWxlcnRDb25maWdJZCI6NzY5MCwiYXJ0aWNsZUlkIjoiMzI0MjY1NjAiLCJhcnRpY2xlQWJzdHJhY3QiOiJUaGlzIHJlcG9ydCBvdXRsaW5lcyBhIGNhc2Ugb2YgYXR5cGljYWwgcHJlc2VudGF0aW9uIG9mIENvdmlkIDE5IHZpcmFsIGluZmVjdGlvbi4gQSA2NS15ZWFyIG9sZCBtYWxlIHdhcyBwbGFubmVkIGZvciBhIHR3byBzdGFnZWQgcmVwYWlyIG9mIGEgQ3Jhd2ZvcmQgdHlwZSAzIHRob3JhY29hYmRvbWluYWwgYW9ydGljIGFuZXVyeXNtLiBUaGUgZmlyc3Qgc3RhZ2UsIFRFVkFSIGluIGRlc2NlbmRpbmcgYW9ydGEsIHdhcyB1bmV2ZW50ZnVsIGFuZCBwYXRpZW50IHdhcyBkaXNjaGFyZ2VkIG9uIHBvc3RvcGVyYXRpdmUgZGF5IDIuIEhlIHdhcyByZWFkbWl0dGVkIDEwIGRheXMgbGF0ZXIsIHByZXNlbnRpbmcgd2l0aCBkaWFycmhlYSwgbG93ZXIgbGltYiBwYWluIGFuZCB3ZWFrbmVzcyBhZnRlciAyNSBtZXRlcnMgd2Fsa2luZy4gVGhlIHBhdGllbnQgZGlzcGxheWVkIG5vIGZldmVyIG9yIHVwcGVyIHJlc3BpcmF0b3J5IHRyYWN0IHNpZ25zIG9yIHN5bXB0b21zLiBDb21wdXRlciB0b21vZ3JhcGh5IGFuZCBNUiBvZiB0aGUgc3BpbmFsIGNvcmQgd2VyZSBub3JtYWwuIFBhdGllbnQgd2FzIHRlc3RlZCBwb3NpdGl2ZSBmb3IgQ292aWQgMTkgdmlydXMgYW5kIGxhdGVyIGR1cmluZyBob3NwaXRhbGl6YXRpb24gZGV2ZWxvcGVkIG1vcmUgdHlwaWNhbCBmZXZlciBhbmQgcmVzcGlyYXRvcnkgc3ltcHRvbXMgdGhhdCB3ZXJlIG1hbmFnZWQgbWVkaWNhbGx5LiIsImV4ZWNDb25maWdJZCI6NzcyMSwiaXNSZXZpZXdlZCI6ZmFsc2UsImNvbW1lbnQiOm51bGwsImlzQXR0YWNobWVudCI6ZmFsc2UsInNpZ25hbCI6W119LHsiaWQiOjc5OTIsImFsZXJ0TmFtZSI6IkxpdFBlcmYxIiwicHJpb3JpdHkiOnsidmFsdWUiOiJVcmdlbnQiLCJpY29uQ2xhc3MiOiJtZGkgbWRpLWFscGhhLXUtY2lyY2xlIHJlZC0xIn0sInRpdGxlIjoiRmVhciBhbmQgc3RvY2sgcHJpY2UgYnViYmxlcy4iLCJhdXRob3JzIjoiW1Rob3JzdGVuLCBMZWhuZXJ0XSIsImFzc2lnbmVkVG8iOnsiaWQiOjc0MzUsImZ1bGxOYW1lIjoiYmhhZ3lhIiwidXNlcm5hbWUiOiJiaGFneWEiLCJlbWFpbCI6Ik5SLkJoYWd5YWxha3NobWlAcnhsb2dpeC5jb20ifSwicHVibGljYXRpb25EYXRlIjoiMjAyMCIsImRpc3Bvc2l0aW9uIjoiTmV3IiwicHJvZHVjdE5hbWUiOiJXSE8tRElBTUlDUk9OIE1SIiwiZXZlbnROYW1lIjpudWxsLCJhY3Rpb25Db3VudCI6MCwiaXNWYWxpZGF0aW9uU3RhdGVBY2hpZXZlZCI6ZmFsc2UsImFsZXJ0VGFncyI6W10sImFsZXJ0Q29uZmlnSWQiOjc2OTAsImFydGljbGVJZCI6IjMyMzk2NTY3IiwiYXJ0aWNsZUFic3RyYWN0IjoiSSBldmFsdWF0ZSBBbGFuIEdyZWVuc3BhbidzIGNsYWltIHRoYXQgc3RvY2sgcHJpY2UgYnViYmxlcyBidWlsZCB1cCBpbiBwZXJpb2RzIG9mIGV1cGhvcmlhIGFuZCB0ZW5kIHRvIGJ1cnN0IGR1ZSB0byBpbmNyZWFzaW5nIGZlYXIuIEluZGVlZCwgdGhlcmUgaXMgZXZpZGVuY2UgdGhhdCBlLmcuIGR1cmluZyBhIGNyaXNpcywgdHJpZ2dlcmVkIGJ5IGluY3JlYXNpbmcgZmVhciwgYm90aCBxdWFsaXRhdGl2ZSBhbmQgcXVhbnRpdGF0aXZlIG1lYXN1cmVzIG9mIHJpc2sgYXZlcnNpb24gaW5jcmVhc2Ugc3Vic3RhbnRpYWxseS4gSXQgaXMgYXJndWVkIHRoYXQgZmVhciBpcyBhIHBvdGVudGlhbCBtZWNoYW5pc20gdW5kZXJseWluZyBmaW5hbmNpYWwgZGVjaXNpb25zIGFuZCBkcml2ZXMgdGhlIGNvdW50ZXJjeWNsaWNhbCByaXNrIGF2ZXJzaW9uLiBJbnNwaXJlZCBieSB0aGlzIGV2aWRlbmNlLCBJIGNvbnN0cnVjdCBhbiBldXBob3JpYS9mZWFyIGluZGV4LCB3aGljaCBpcyBiYXNlZCBvbiBhbiBlY29ub21pYyBtb2RlbCBvZiB0aW1lIHZhcnlpbmcgcmlzayBhdmVyc2lvbi4gQmFzZWQgb24gVVMgaW5kdXN0cnkgcmV0dXJucyAxOTU5LTIwMTQsIG15IGZpbmRpbmdzIHN1Z2dlc3QgdGhhdCAoMSkgR3JlZW5zcGFuIGlzIGNvcnJlY3QgaW4gdGhhdCB0aGUgcHJpY2UgcnVuLXVwIGluaXRpYWxseSBvY2N1cnMgaW4gcGVyaW9kcyBvZiBldXBob3JpYSBmb2xsb3dlZCBieSBhIGNyYXNoIGR1ZSB0byBpbmNyZWFzaW5nIGZlYXI7ICgyKSBvbiBhdmVyYWdlIGFscmVhZHkgcm91Z2hseSBhIHllYXIgYmVmb3JlIGFuIGluZHVzdHJ5IGlzIGNyYXNoaW5nLCBldXBob3JpYSBpcyB0dXJuaW5nIGludG8gZmVhciwgd2hpbGUgdGhlIG1hcmtldCBpcyBzdGlsbCBidWxsaXNoOyAoMykgdGhlcmUgaXMgbm8gcGFydGljdWxhciBldXBob3JpYS1mZWFyLXBhdHRlcm4gZm9yIHByaWNlLXJ1bnMgaW4gaW5kdXN0cmllcyB0aGF0IGRvIG5vdCBzdWJzZXF1ZW50bHkgY3Jhc2guIEkgaW50ZXJwcmV0IHRoZSBldmlkZW5jZSBpbiBmYXZvciBvZiBHcmVlbnNwYW4sIHdobyB3YXMgbGFiZWxlZCBcIk1yLiBCdWJibGVcIiBieSB0aGUgTmV3IFlvcmsgVGltZXMsIGFuZCB3aG8gd2FzIGFjY3VzZWQgdG8gYmUgYSBzZXJpYWwgYnViYmxlIGJsb3dlci4iLCJleGVjQ29uZmlnSWQiOjc3MjEsImlzUmV2aWV3ZWQiOmZhbHNlLCJjb21tZW50IjpudWxsLCJpc0F0dGFjaG1lbnQiOmZhbHNlLCJzaWduYWwiOltdfSx7ImlkIjo3ODczLCJhbGVydE5hbWUiOiJMaXRQZXJmMSIsInByaW9yaXR5Ijp7InZhbHVlIjoiVXJnZW50IiwiaWNvbkNsYXNzIjoibWRpIG1kaS1hbHBoYS11LWNpcmNsZSByZWQtMSJ9LCJ0aXRsZSI6IkhlcGF0b2JpbGlhcnkgTVIgY29udHJhc3QgYWdlbnQgdXB0YWtlIGFzIGEgcHJlZGljdGl2ZSBiaW9tYXJrZXIgb2YgYWdncmVzc2l2ZSBmZWF0dXJlcyBvbiBwYXRob2xvZ3kgYW5kIHJlZHVjZWQgcmVjdXJyZW5jZS1mcmVlIHN1cnZpdmFsIGluIHJlc2VjdGFibGUgaGVwYXRvY2VsbHVsYXIgY2FyY2lub21hOiBjb21wYXJpc29uIHdpdGggZHVhbC10cmFjZXIgMThGLUZERyBhbmQgMThGLUZDSCBQRVQvQ1QuIiwiYXV0aG9ycyI6IltTw6liYXN0aWVuLCBNdWzDqV1bSnVsaWEsIENoYWxheWVdW0ZyYW7Dp29pcywgTGVnb3VdW0FydGh1ciwgVGVuZW5oYXVzXVtKdWxpZW4sIENhbGRlcmFyb11bQXRoZW5hLCBHYWxsZXR0byBQcmVnbGlhc2NvXVtBbGV4aXMsIExhdXJlbnRdW1J5bSwgS2hhcnJhdF1bR2l1bGlhbmEsIEFtYWRkZW9dW0jDqWzDqG5lLCBSZWduYXVsdF1bVmFuaWEsIFRhY2hlcl1bSGljaGFtLCBLb2JlaXRlcl1bRW1tYW51ZWwsIEl0dGldW0FsYWluLCBMdWNpYW5pXSIsImFzc2lnbmVkVG8iOnsiaWQiOjc0MzUsImZ1bGxOYW1lIjoiYmhhZ3lhIiwidXNlcm5hbWUiOiJiaGFneWEiLCJlbWFpbCI6Ik5SLkJoYWd5YWxha3NobWlAcnhsb2dpeC5jb20ifSwicHVibGljYXRpb25EYXRlIjoiMTMtTWF5LTIwMjAiLCJkaXNwb3NpdGlvbiI6Ik5ldyIsInByb2R1Y3ROYW1lIjoiV0hPLURJQU1JQ1JPTiBNUiIsImV2ZW50TmFtZSI6bnVsbCwiYWN0aW9uQ291bnQiOjAsImlzVmFsaWRhdGlvblN0YXRlQWNoaWV2ZWQiOmZhbHNlLCJhbGVydFRhZ3MiOltdLCJhbGVydENvbmZpZ0lkIjo3NjkwLCJhcnRpY2xlSWQiOiIzMjQwNTc1MyIsImFydGljbGVBYnN0cmFjdCI6IlRvIGNvbXBhcmUgdGhlIHBlcmZvcm1hbmNlIG9mIHRoZSBxdWFudGl0YXRpdmUgYW5hbHlzaXMgb2YgdGhlIGhlcGF0b2JpbGlhcnkgcGhhc2UgKEhCUCkgdHVtb3IgZW5oYW5jZW1lbnQgaW4gZ2Fkb2JlbmF0ZSBkaW1lZ2x1bWluZSAoR2QtQk9QVEEpLWVuaGFuY2VkIE1SSSBhbmQgb2YgZHVhbC10cmFjZXIgMThGLUZERyBhbmQgMThGLWZsdW9yb2Nob2xpbmUgKEZDSCkgUEVUL0NUIGZvciB0aGUgcHJlZGljdGlvbiBvZiB0dW1vciBhZ2dyZXNzaXZlbmVzcyBhbmQgcmVjdXJyZW5jZS1mcmVlIHN1cnZpdmFsIChSRlMpIGluIHJlc2VjdGFibGUgaGVwYXRvY2VsbHVsYXIgY2FyY2lub21hIChIQ0MpLlRoaXMgcmV0cm9zcGVjdGl2ZSwgSVJCIGFwcHJvdmVkIHN0dWR5IGluY2x1ZGVkIDMyIHBhdGllbnRzIHdpdGggMzUgc3VyZ2ljYWxseSBwcm92ZW4gSENDcy4gQWxsIHBhdGllbnRzIHVuZGVyd2VudCBHZC1CT1BUQS1lbmhhbmNlZCBNUkkgaW5jbHVkaW5nIGRlbGF5ZWQgSEJQIGltYWdlcywgMThGLUZERyBQRVQvQ1QsIGFuZCAoZm9yIDI5LzMyIHBhdGllbnRzKSAxOEYtRkNIIFBFVC9DVCBkdXJpbmcgdGhlIDLCoG1vbnRocyBwcmlvciB0byBzdXJnZXJ5LiBGb3IgZWFjaCBsZXNpb24sIHRoZSBsZXNpb24tdG8tbGl2ZXIgY29udHJhc3QgZW5oYW5jZW1lbnQgcmF0aW8gKExMQ0VSKSBvbiBNUkkgSEJQIGltYWdlcyBhbmQgdGhlIFNVVm1heCB0dW1vci10by1saXZlciByYXRpbyAoU1VWVC9MKSBmb3IgYm90aCB0cmFjZXJzIHdlcmUgY2FsY3VsYXRlZC4gVGhlaXIgcHJlZGljdGl2ZSB2YWx1ZSBmb3IgYWdncmVzc2l2ZSBwYXRob2xvZ2ljYWwgZmVhdHVyZXMtaW5jbHVkaW5nIHRoZSBoaXN0b2xvZ2ljYWwgZ3JhZGUgYW5kIG1pY3JvdmFzY3VsYXIgaW52YXNpb24gKE1WSSktYW5kIFJGUyB3ZXJlIGFuYWx5emVkIGFuZCBjb21wYXJlZCB1c2luZyBhcmVhIHVuZGVyIHJlY2VpdmVyIG9wZXJhdGluZyBjaGFyYWN0ZXJpc3RpYyAoQVVST0MpIGN1cnZlcyBhbmQgQ294IHJlZ3Jlc3Npb24gbW9kZWxzLCByZXNwZWN0aXZlbHkuVGhlIEFVUk9DcyBmb3IgdGhlIGlkZW50aWZpY2F0aW9uIG9mIGFnZ3Jlc3NpdmUgSENDcyBvbiBwYXRob2xvZ3kgd2l0aCBMTENFUiwgMThGLUZERyBTVVZUL0wsIGFuZCAxOEYtRkNIIFNVVlQvTCB3ZXJlIDAuOTIgKDk1JSBDSSAwLjc4LCAwLjk4KSwgMC44OSAoOTUlIENJIDAuNzQsIDAuOTc7IHDigIk94oCJMC43MCksIGFuZCAwLjY0ICg5NSUgQ0kgMC40NSwgMC44MDsgcOKAiT3igIkwLjAzNSkuIEF0IG11bHRpdmFyaWF0ZSBDb3ggcmVncmVzc2lvbiBhbmFseXNpcywgTExDRVIgd2FzIGlkZW50aWZpZWQgYXMgYW4gaW5kZXBlbmRlbnQgcHJlZGljdG9yIG9mIFJGUyAoSFIgKDk1JSBDSSnigIk94oCJMC45MSAoMC44NCwgMC45OSksIHDigIk94oCJMC4wMjIpLiBMTENFUiAt4oCJNC43MiUgb3IgbGVzcyBhbHNvIGFjY3VyYXRlbHkgcHJlZGljdGVkIG1vZGVyYXRlLXBvb3IgZGlmZmVyZW50aWF0aW9uIGdyYWRlIChTZeKAiT3igIkxMDAlLCBTcOKAiT3igIk5Mi45JSkgYW5kIE1WSSAoU2XigIk94oCJOTMuMyUsIFNw4oCJPeKAiTYwJSkgYW5kIGlkZW50aWZpZWQgcGF0aWVudHMgd2l0aCBwb29yIFJGUyBhZnRlciBzdXJnaWNhbCByZXNlY3Rpb24gKHDigIk94oCJMC4wMzApLkhCUCB0dW1vciBlbmhhbmNlbWVudCBhZnRlciBHZC1CT1BUQSBpbmplY3Rpb24gbWF5IGhlbHAgaWRlbnRpZnkgYWdncmVzc2l2ZSBIQ0MgcGF0aG9sb2dpY2FsIGZlYXR1cmVzLCBhbmQgcGF0aWVudHMgd2l0aCByZWR1Y2VkIHJlY3VycmVuY2UtZnJlZSBzdXJ2aXZhbCBhZnRlciBzdXJnaWNhbCByZXNlY3Rpb24u4oCiIEluIHBhdGllbnRzIHdpdGggcmVzZWN0YWJsZSBIQ0MsIHRoZSBxdWFudGl0YXRpdmUgYW5hbHlzaXMgb2YgdGhlIEhCUCB0dW1vciBlbmhhbmNlbWVudCBpbiBHZC1CT1BUQS1lbmhhbmNlZCBNUkkgKExMQ0VSKSBhY2N1cmF0ZWx5IGlkZW50aWZpZXMgbW9kZXJhdGVseS1wb29ybHkgZGlmZmVyZW50aWF0ZWQgYW5kL29yIE1WSS1wb3NpdGl2ZSBIQ0NzLiDigKIgQWZ0ZXIgc3VyZ2ljYWwgcmVzZWN0aW9uIGZvciBIQ0MsIHBhdGllbnRzIHdpdGggTExDRVIgLeKAiTQuNzIlIG9yIGxlc3MgaGFkIHNpZ25pZmljYW50bHkgcG9vcmVyIHJlY3VycmVuY2UtZnJlZSBzdXJ2aXZhbCB0aGFuIHBhdGllbnRzIHdpdGggTExDRVIgc3VwZXJpb3IgdG8gLeKAiTQuNzIlLiDigKIgR2QtQk9QVEEtZW5oYW5jZWQgTVJJIHdpdGggZGVsYXllZCBIQlAgaW1hZ2VzIG1heSBiZSBzdWdnZXN0ZWQgYXMgcGFydCBvZiBwcmUtc3VyZ2VyeSB3b3JrdXAgaW4gcGF0aWVudHMgd2l0aCByZXNlY3RhYmxlIEhDQy4iLCJleGVjQ29uZmlnSWQiOjc3MjEsImlzUmV2aWV3ZWQiOmZhbHNlLCJjb21tZW50IjpudWxsLCJpc0F0dGFjaG1lbnQiOmZhbHNlLCJzaWduYWwiOltdfSx7ImlkIjo3OTI2LCJhbGVydE5hbWUiOiJMaXRQZXJmMSIsInByaW9yaXR5Ijp7InZhbHVlIjoiVXJnZW50IiwiaWNvbkNsYXNzIjoibWRpIG1kaS1hbHBoYS11LWNpcmNsZSByZWQtMSJ9LCJ0aXRsZSI6IkJsb29kIHByZXNzdXJlIGFuZCByaXNrIG9mIGNhbmNlciBpbiB0aGUgRXVyb3BlYW4gUHJvc3BlY3RpdmUgSW52ZXN0aWdhdGlvbiBpbnRvIENhbmNlciBhbmQgTnV0cml0aW9uLiIsImF1dGhvcnMiOiJbU29maWEsIENocmlzdGFrb3VkaV1bQXJ0ZW1pc2lhLCBLYWtvdXJvdV1bR2Vvcmdpb3MsIE1hcmtvemFubmVzXVtJb2FubmEsIFR6b3VsYWtpXVtFbGlzYWJldGUsIFdlaWRlcnBhc3NdW1BhdWwsIEJyZW5uYW5dW01hcmMsIEd1bnRlcl1bQ2hyaXN0aW5hIEMsIERhaG1dW0tpbSwgT3ZlcnZhZF1bQW5qYSwgT2xzZW5dW0FubmUsIFRqw7hubmVsYW5kXVtNYXJpZS1DaHJpc3RpbmUsIEJvdXRyb24tUnVhdWx0XVtBbm5lLUxhdXJlLCBNYWRpa2FdW0dpYW5sdWNhLCBTZXZlcmldW1ZlcmVuYSwgS2F0emtlXVtUaWxtYW4sIEvDvGhuXVtNYW51ZWxhIE0sIEJlcmdtYW5uXVtIZWluZXIsIEJvZWluZ11bQW5uYSwgS2FyYWthdHNhbmldW0dlb3JnaWEsIE1hcnRpbWlhbmFraV1bUGFzY2hhbGlzLCBUaHJpc2tvc11bR2lvdmFubmEsIE1hc2FsYV1bU2FiaW5hLCBTaWVyaV1bU2FsdmF0b3JlLCBQYW5pY29dW1Jvc2FyaW8sIFR1bWlub11bRnVsdmlvLCBSaWNjZXJpXVtBbnRvbmlvLCBBZ3Vkb11bRGFuaWVsLCBSZWRvbmRvLVPDoW5jaGV6XVtTYW5kcmEgTSwgQ29sb3JhZG8tWW9oYXJdW09sYXR6LCBNb2tvcm9hXVtPbGxlLCBNZWxhbmRlcl1bVGFuamEsIFN0b2Nrc11bQ2hyaXN0ZWwsIEjDpGdnc3Ryw7ZtXVtTb3BoaWEsIEhhcmxpZF1bQmFzLCBCdWVuby1kZS1NZXNxdWl0YV1bQ2FybGEgSCwgdmFuIEdpbHNdW1JvZWwgQyBILCBWZXJtZXVsZW5dW0theS1UZWUsIEtoYXddW05pY2hvbGFzIEosIFdhcmVoYW1dW1RhbW15IFkgTiwgVG9uZ11bSGVpbnosIEZyZWlzbGluZ11bTWF0dGlhcywgSm9oYW5zc29uXVtIYW5uYWgsIExlbm5vbl1bRGFnZmlubiwgQXVuZV1bRWxpbywgUmlib2xpXVtEaW1pdHJpb3MsIFRyaWNob3BvdWxvc11bQW50b25pYSwgVHJpY2hvcG91bG91XVtLb25zdGFudGlub3MgSywgVHNpbGlkaXNdIiwiYXNzaWduZWRUbyI6eyJpZCI6NzQzNSwiZnVsbE5hbWUiOiJiaGFneWEiLCJ1c2VybmFtZSI6ImJoYWd5YSIsImVtYWlsIjoiTlIuQmhhZ3lhbGFrc2htaUByeGxvZ2l4LmNvbSJ9LCJwdWJsaWNhdGlvbkRhdGUiOiIxNS1NYXktMjAyMCIsImRpc3Bvc2l0aW9uIjoiTmV3IiwicHJvZHVjdE5hbWUiOiJXSE8tRElBTUlDUk9OIE1SIiwiZXZlbnROYW1lIjpudWxsLCJhY3Rpb25Db3VudCI6MCwiaXNWYWxpZGF0aW9uU3RhdGVBY2hpZXZlZCI6ZmFsc2UsImFsZXJ0VGFncyI6W10sImFsZXJ0Q29uZmlnSWQiOjc2OTAsImFydGljbGVJZCI6IjMxMzE5MDAyIiwiYXJ0aWNsZUFic3RyYWN0IjoiU2V2ZXJhbCBzdHVkaWVzIGhhdmUgcmVwb3J0ZWQgYXNzb2NpYXRpb25zIG9mIGh5cGVydGVuc2lvbiB3aXRoIGNhbmNlciwgYnV0IG5vdCBhbGwgcmVzdWx0cyB3ZXJlIGNvbmNsdXNpdmUuIFdlIGV4YW1pbmVkIHRoZSBhc3NvY2lhdGlvbiBvZiBzeXN0b2xpYyAoU0JQKSBhbmQgZGlhc3RvbGljIChEQlApIGJsb29kIHByZXNzdXJlIHdpdGggdGhlIGRldmVsb3BtZW50IG9mIGluY2lkZW50IGNhbmNlciBhdCBhbGwgYW5hdG9taWNhbCBzaXRlcyBpbiB0aGUgRXVyb3BlYW4gUHJvc3BlY3RpdmUgSW52ZXN0aWdhdGlvbiBpbnRvIENhbmNlciBhbmQgTnV0cml0aW9uIChFUElDKS4gSGF6YXJkIHJhdGlvcyAoSFJzKSAoOTUlIGNvbmZpZGVuY2UgaW50ZXJ2YWxzKSB3ZXJlIGVzdGltYXRlZCB1c2luZyBtdWx0aXZhcmlhYmxlIENveCBwcm9wb3J0aW9uYWwgaGF6YXJkcyBtb2RlbHMsIHN0cmF0aWZpZWQgYnkgRVBJQy1wYXJ0aWNpcGF0aW5nIGNlbnRlciBhbmQgYWdlIGF0IHJlY3J1aXRtZW50LCBhbmQgYWRqdXN0ZWQgZm9yIHNleCwgZWR1Y2F0aW9uLCBzbW9raW5nLCBib2R5IG1hc3MgaW5kZXgsIHBoeXNpY2FsIGFjdGl2aXR5LCBkaWFiZXRlcyBhbmQgZGlldGFyeSAoaW4gd29tZW4gYWxzbyByZXByb2R1Y3RpdmUpIGZhY3RvcnMuIFRoZSBzdHVkeSBpbmNsdWRlZCAzMDcsMzE4IG1lbiBhbmQgd29tZW4sIHdpdGggYW4gYXZlcmFnZSBmb2xsb3ctdXAgb2YgMTMuNyAoc3RhbmRhcmQgZGV2aWF0aW9uIDQuNCkgeWVhcnMgYW5kIDM5LDI5OCBpbmNpZGVudCBjYW5jZXJzLiBXZSBjb25maXJtZWQgdGhlIGV4cGVjdGVkIHBvc2l0aXZlIGFzc29jaWF0aW9uIHdpdGggcmVuYWwgY2VsbCBjYXJjaW5vbWE6IEhSID0gMS4xMiAoMS4wOC0xLjE3KSBwZXIgMTAgbW3igIlIZyBoaWdoZXIgU0JQIGFuZCBIUiA9IDEuMjMgKDEuMTQtMS4zMikgZm9yIERCUC4gV2UgYWRkaXRpb25hbGx5IGZvdW5kIHBvc2l0aXZlIGFzc29jaWF0aW9ucyBmb3IgZXNvcGhhZ2VhbCBzcXVhbW91cyBjZWxsIGNhcmNpbm9tYSAoU0NDKTogSFIgPSAxLjE2ICgxLjA3LTEuMjYpIChTQlApLCBIUiA9IDEuMzEgKDEuMTMtMS41MSkgKERCUCksIHdlYWtlciBmb3IgaGVhZCBhbmQgbmVjayBjYW5jZXJzOiBIUiA9IDEuMDggKDEuMDQtMS4xMikgKFNCUCksIEhSID0gMS4wOSAoMS4wMS0xLjE3KSAoREJQKSBhbmQsIHNpbWlsYXJseSwgZm9yIHNraW4gU0NDLCBjb2xvbiBjYW5jZXIsIHBvc3RtZW5vcGF1c2FsIGJyZWFzdCBjYW5jZXIgYW5kIHV0ZXJpbmUgYWRlbm9jYXJjaW5vbWEgKEFDKSwgYnV0IG5vdCBmb3IgZXNvcGhhZ2VhbCBBQywgbHVuZyBTQ0MsIGx1bmcgQUMgb3IgdXRlcmluZSBlbmRvbWV0cm9pZCBjYW5jZXIuIFdlIG9ic2VydmVkIHdlYWsgaW52ZXJzZSBhc3NvY2lhdGlvbnMgb2YgU0JQIHdpdGggY2VydmljYWwgU0NDOiBIUiA9IDAuOTEgKDAuODItMS4wMCkgYW5kIGx5bXBob21hczogSFIgPSAwLjk3ICgwLjkzLTEuMDApLiBUaGVyZSB3ZXJlIG5vIGNvbnNpc3RlbnQgYXNzb2NpYXRpb25zIHdpdGggY2FuY2VycyBpbiBvdGhlciBsb2NhdGlvbnMuIE91ciByZXN1bHRzIGFyZSBsYXJnZWx5IGNvbXBhdGlibGUgd2l0aCBwdWJsaXNoZWQgc3R1ZGllcyBhbmQgc3VwcG9ydCB3ZWFrIGFzc29jaWF0aW9ucyBvZiBibG9vZCBwcmVzc3VyZSB3aXRoIGNhbmNlcnMgaW4gc3BlY2lmaWMgbG9jYXRpb25zIGFuZCBtb3JwaG9sb2dpZXMuIiwiZXhlY0NvbmZpZ0lkIjo3NzIxLCJpc1Jldmlld2VkIjpmYWxzZSwiY29tbWVudCI6bnVsbCwiaXNBdHRhY2htZW50IjpmYWxzZSwic2lnbmFsIjpbXX0seyJpZCI6Nzk5MCwiYWxlcnROYW1lIjoiTGl0UGVyZjEiLCJwcmlvcml0eSI6eyJ2YWx1ZSI6IlVyZ2VudCIsImljb25DbGFzcyI6Im1kaSBtZGktYWxwaGEtdS1jaXJjbGUgcmVkLTEifSwidGl0bGUiOiJDb2xsZWN0aW9uIGFuZCBIYW5kbGluZyBvZiBUaG9yYWNpYyBTbWFsbCBCaW9wc3kgYW5kIEN5dG9sb2d5IFNwZWNpbWVucyBmb3IgQW5jaWxsYXJ5IFN0dWRpZXM6IEd1aWRlbGluZSBGcm9tIHRoZSBDb2xsZWdlIG9mIEFtZXJpY2FuIFBhdGhvbG9naXN0cyBpbiBDb2xsYWJvcmF0aW9uIFdpdGggdGhlIEFtZXJpY2FuIENvbGxlZ2Ugb2YgQ2hlc3QgUGh5c2ljaWFucywgQXNzb2NpYXRpb24gZm9yIE1vbGVjdWxhciBQYXRob2xvZ3ksIEFtZXJpY2FuIFNvY2lldHkgb2YgQ3l0b3BhdGhvbG9neSwgQW1lcmljYW4gVGhvcmFjaWMgU29jaWV0eSwgUHVsbW9uYXJ5IFBhdGhvbG9neSBTb2NpZXR5LCBQYXBhbmljb2xhb3UgU29jaWV0eSBvZiBDeXRvcGF0aG9sb2d5LCBTb2NpZXR5IG9mIEludGVydmVudGlvbmFsIFJhZGlvbG9neSwgYW5kIFNvY2lldHkgb2YgVGhvcmFjaWMgUmFkaW9sb2d5LiIsImF1dGhvcnMiOiJbU2luY2hpdGEsIFJveS1DaG93ZGh1cmldW1NhbmphLCBEYWNpY11bTW9oaWVkZWFuLCBHaG9mcmFuaV1bUGV0ZXIgQiwgSWxsZWldW0xlc3RlciBKLCBMYXlmaWVsZF1bQ2hyaXN0b3BoZXIsIExlZV1bQ2xhaXJlIFcsIE1pY2hhZWxdW1Jvc3MgQSwgTWlsbGVyXVtKYXNvbiBXLCBNaXRjaGVsbF1bQm9yaXMsIE5pa29saWNdW0phbiBBLCBOb3dha11bTmljaG9sYXMgSiwgUGFzdGlzXVtDYXJvbCBBbm4sIFJhdWNoXVtBbWl0YSwgU2hhcm1hXVtMZXNsZXksIFNvdXRlcl1bQnJvb2tlIEwsIEJpbGxtYW5dW05pY29sZSBFLCBUaG9tYXNdW1BhdWwgQSwgVmFuZGVyTGFhbl1bSmVzc2UgUywgVm9zc11bTW9tZW4gTSwgV2FoaWRpXVtMb25ueSBCLCBZYXJtdXNdW0NocmlzdG9waGVyIFIsIEdpbGJlcnRdIiwiYXNzaWduZWRUbyI6eyJpZCI6NzQzNSwiZnVsbE5hbWUiOiJiaGFneWEiLCJ1c2VybmFtZSI6ImJoYWd5YSIsImVtYWlsIjoiTlIuQmhhZ3lhbGFrc2htaUByeGxvZ2l4LmNvbSJ9LCJwdWJsaWNhdGlvbkRhdGUiOiIxMy1NYXktMjAyMCIsImRpc3Bvc2l0aW9uIjoiTmV3IiwicHJvZHVjdE5hbWUiOiJXSE8tRElBTUlDUk9OIE1SIiwiZXZlbnROYW1lIjpudWxsLCJhY3Rpb25Db3VudCI6MCwiaXNWYWxpZGF0aW9uU3RhdGVBY2hpZXZlZCI6ZmFsc2UsImFsZXJ0VGFncyI6W10sImFsZXJ0Q29uZmlnSWQiOjc2OTAsImFydGljbGVJZCI6IjMyNDAxMDU0IiwiYXJ0aWNsZUFic3RyYWN0IjoiVGhlIG5lZWQgZm9yIGFwcHJvcHJpYXRlIHNwZWNpbWVuIHVzZSBmb3IgYW5jaWxsYXJ5IHRlc3RpbmcgaGFzIGJlY29tZSBtb3JlIGNvbW1vbnBsYWNlIGluIHRoZSBwcmFjdGljZSBvZiBwYXRob2xvZ3kuIFRoaXMsIGNvdXBsZWQgd2l0aCBpbXByb3ZlbWVudHMgaW4gdGVjaG5vbG9neSwgb2Z0ZW4gcHJvdmlkZXMgbGVzcyBpbnZhc2l2ZSBtZXRob2RzIG9mIHRlc3RpbmcsIGJ1dCBwcmVzZW50cyBuZXcgY2hhbGxlbmdlcyB0byBhcHByb3ByaWF0ZSBzcGVjaW1lbiBjb2xsZWN0aW9uIGFuZCBoYW5kbGluZyBvZiB0aGVzZSBzbWFsbCBzcGVjaW1lbnMsIGluY2x1ZGluZyB0aG9yYWNpYyBzbWFsbCBiaW9wc3kgYW5kIGN5dG9sb2d5IHNhbXBsZXMuVG8gZGV2ZWxvcCBhIGNsaW5pY2FsIHByYWN0aWNlIGd1aWRlbGluZSBpbmNsdWRpbmcgcmVjb21tZW5kYXRpb25zIG9uIGhvdyB0byBvYnRhaW4sIGhhbmRsZSwgYW5kIHByb2Nlc3MgdGhvcmFjaWMgc21hbGwgYmlvcHN5IGFuZCBjeXRvbG9neSB0aXNzdWUgc3BlY2ltZW5zIGZvciBkaWFnbm9zdGljIHRlc3RpbmcgYW5kIGFuY2lsbGFyeSBzdHVkaWVzLlRoZSBDb2xsZWdlIG9mIEFtZXJpY2FuIFBhdGhvbG9naXN0cyBjb252ZW5lZCBhbiBleHBlcnQgcGFuZWwgdG8gcGVyZm9ybSBhIHN5c3RlbWF0aWMgcmV2aWV3IG9mIHRoZSBsaXRlcmF0dXJlIGFuZCBkZXZlbG9wIHJlY29tbWVuZGF0aW9ucy4gQ29yZSBuZWVkbGUgYmlvcHN5LCB0b3VjaCBwcmVwYXJhdGlvbiwgZmluZS1uZWVkbGUgYXNwaXJhdGlvbiwgYW5kIGVmZnVzaW9uIHNwZWNpbWVucyB3aXRoIHRob3JhY2ljIGRpc2Vhc2VzIGluY2x1ZGluZyBtYWxpZ25hbmN5LCBncmFudWxvbWF0b3VzIHByb2Nlc3Mvc2FyY29pZG9zaXMsIGFuZCBpbmZlY3Rpb24gKGVnLCB0dWJlcmN1bG9zaXMpIHdlcmUgZGVlbWVkIHdpdGhpbiBzY29wZS4gQW5jaWxsYXJ5IHN0dWRpZXMgaW5jbHVkZWQgaW1tdW5vaGlzdG9jaGVtaXN0cnkgYW5kIGltbXVub2N5dG9jaGVtaXN0cnksIGZsdW9yZXNjZW5jZSBpbiBzaXR1IGh5YnJpZGl6YXRpb24sIG11dGF0aW9uYWwgYW5hbHlzaXMsIGZsb3cgY3l0b21ldHJ5LCBjeXRvZ2VuZXRpY3MsIGFuZCBtaWNyb2Jpb2xvZ2ljIHN0dWRpZXMgcm91dGluZWx5IHBlcmZvcm1lZCBpbiB0aGUgY2xpbmljYWwgcGF0aG9sb2d5IGxhYm9yYXRvcnkuIFRoZSB1c2Ugb2YgcmFwaWQgb24tc2l0ZSBldmFsdWF0aW9uIHdhcyBhbHNvIGNvdmVyZWQuU2l4dGVlbiBndWlkZWxpbmUgc3RhdGVtZW50cyB3ZXJlIGRldmVsb3BlZCB0byBhc3Npc3QgY2xpbmljaWFucyBhbmQgcGF0aG9sb2dpc3RzIGluIGNvbGxlY3RpbmcgYW5kIHByb2Nlc3NpbmcgdGhvcmFjaWMgc21hbGwgYmlvcHN5IGFuZCBjeXRvbG9neSB0aXNzdWUgc2FtcGxlcy5CYXNlZCBvbiB0aGUgc3lzdGVtYXRpYyByZXZpZXcgYW5kIGV4cGVydCBwYW5lbCBjb25zZW5zdXMsIHRob3JhY2ljIHNtYWxsIHNwZWNpbWVucyBjYW4gYmUgaGFuZGxlZCBhbmQgcHJvY2Vzc2VkIHRvIHBlcmZvcm0gZG93bnN0cmVhbSB0ZXN0aW5nIChlZywgbW9sZWN1bGFyIG1hcmtlcnMsIGltbXVub2hpc3RvY2hlbWljYWwgYmlvbWFya2VycyksIGNvcmUgbmVlZGxlIGFuZCBmaW5lLW5lZWRsZSB0ZWNobmlxdWVzIGNhbiBwcm92aWRlIGFwcHJvcHJpYXRlIGN5dG9sb2dpYyBhbmQgaGlzdG9sb2dpYyBzcGVjaW1lbnMgZm9yIGFuY2lsbGFyeSBzdHVkaWVzLCBhbmQgcmFwaWQgb24tc2l0ZSBjeXRvbG9naWMgZXZhbHVhdGlvbiByZW1haW5zIGhlbHBmdWwgaW4gYXBwcm9wcmlhdGUgdHJpYWdlLCBoYW5kbGluZywgYW5kIHByb2Nlc3Npbmcgb2Ygc3BlY2ltZW5zLiIsImV4ZWNDb25maWdJZCI6NzcyMSwiaXNSZXZpZXdlZCI6ZmFsc2UsImNvbW1lbnQiOm51bGwsImlzQXR0YWNobWVudCI6ZmFsc2UsInNpZ25hbCI6W119LHsiaWQiOjc5NjksImFsZXJ0TmFtZSI6IkxpdFBlcmYxIiwicHJpb3JpdHkiOnsidmFsdWUiOiJVcmdlbnQiLCJpY29uQ2xhc3MiOiJtZGkgbWRpLWFscGhhLXUtY2lyY2xlIHJlZC0xIn0sInRpdGxlIjoiQ29tYmluYXRpb24gb2YgZXh0cmFjZWxsdWxhciB2b2x1bWUgZnJhY3Rpb24gYnkgY2FyZGlhYyBtYWduZXRpYyByZXNvbmFuY2UgaW1hZ2luZyBhbmQgUVJTIGR1cmF0aW9uIGZvciB0aGUgcmlzayBzdHJhdGlmaWNhdGlvbiBmb3IgcGF0aWVudHMgd2l0aCBub24taXNjaGVtaWMgZGlsYXRlZCBjYXJkaW9teW9wYXRoeS4iLCJhdXRob3JzIjoiW1NobywgS29kYW1hXVtTaGluZ28sIEthdG9dW0tlaWdvLCBIYXlha2F3YV1bTWFpLCBBenVtYV1bTWluYWtvLCBLYWdpbW90b11bS29oZWksIElndWNoaV1bTWFzYWhpcm8sIEZ1a3Vva2FdW0thenVraSwgRnVrdWldW1RhZSwgSXdhc2F3YV1bRGFpc3VrZSwgVXRzdW5vbWl5YV1bTWFzYW1pLCBLb3N1Z2VdW0thenVvLCBLaW11cmFdW0tvdWljaGksIFRhbXVyYV0iLCJhc3NpZ25lZFRvIjp7ImlkIjo3NDM1LCJmdWxsTmFtZSI6ImJoYWd5YSIsInVzZXJuYW1lIjoiYmhhZ3lhIiwiZW1haWwiOiJOUi5CaGFneWFsYWtzaG1pQHJ4bG9naXguY29tIn0sInB1YmxpY2F0aW9uRGF0ZSI6IjE2LU1heS0yMDIwIiwiZGlzcG9zaXRpb24iOiJOZXciLCJwcm9kdWN0TmFtZSI6IldITy1ESUFNSUNST04gTVIiLCJldmVudE5hbWUiOm51bGwsImFjdGlvbkNvdW50IjowLCJpc1ZhbGlkYXRpb25TdGF0ZUFjaGlldmVkIjpmYWxzZSwiYWxlcnRUYWdzIjpbXSwiYWxlcnRDb25maWdJZCI6NzY5MCwiYXJ0aWNsZUlkIjoiMzI0MTc5NTciLCJhcnRpY2xlQWJzdHJhY3QiOiJUaGUgZXh0cmFjZWxsdWxhciB2b2x1bWUgZnJhY3Rpb24gKEVDVikgYnkgVDEgbWFwcGluZyBjYW4gcXVhbnRpZnkgZGlmZnVzZSBteW9jYXJkaWFsIGZpYnJvc2lzLCBhbmQgdXNlZnVsIGFzIGEgbm9uLWludmFzaXZlIG1hcmtlciBmb3IgcmlzayBzdHJhdGlmaWNhdGlvbiBmb3IgcGF0aWVudHMgd2l0aCBub24taXNjaGVtaWMgZGlsYXRlZCBjYXJkaW9teW9wYXRoeSAoTklEQ00pLiBQcm9sb25nZWQgUVJTIGludGVydmFsIG9uIGVsZWN0cm9jYXJkaW9ncmFtIGlzIHJlbGF0ZWQgdG8gd29yc2UgY2xpbmljYWwgb3V0Y29tZSBmb3IgaGVhcnQgZmFpbHVyZSBwYXRpZW50cy4gVGhlIHB1cnBvc2Ugb2YgdGhpcyBzdHVkeSB3YXMgdG8gZXZhbHVhdGUgdGhlIHByb2dub3N0aWMgdmFsdWUgb2YgdGhlIGNvbWJpbmF0aW9uIG9mIEVDViBhbmQgUVJTIGR1cmF0aW9uIGZvciBOSURDTSBwYXRpZW50cy4gQSB0b3RhbCBvZiA2MCBOSURDTSBwYXRpZW50cyAobWVhbiBhZ2UgNjHigInCseKAiTEywqB5ZWFycywgbWVhbiBsZWZ0IHZlbnRyaWN1bGFyIGVqZWN0aW9uIGZyYWN0aW9uIDM34oCJwrHigIkxMCUsIG1lYW4gUVJTIGR1cmF0aW9uIDExMOKAicKx4oCJMTnCoG1zKSB3ZXJlIGVucm9sbGVkLiBVc2luZyBhIDEuNS1UIE1SIHNjYW5uZXIgYW5kIDMyLWNoYW5uZWwgY2FyZGlhYyBjb2lscywgdGhlIG1lYW4gRUNWIHZhbHVlIG9mIHNpeCBteW9jYXJkaWFsIHNlZ21lbnRzIGF0IHRoZSBtaWQtdmVudHJpY3VsYXIgbGV2ZWwgd2FzIG1lYXN1cmVkIGJ5IHRoZSBtb2RpZmllZCBsb29rLWxvY2tlciBpbnZlcnNpb24gcmVjb3ZlcnkgbWV0aG9kLiBBZHZlcnNlIGV2ZW50cyB3ZXJlIGRlZmluZWQgYXMgZm9sbG93czogY2FyZGlhYyBkZWF0aDsgcmVjdXJyZW50IGhvc3BpdGFsaXphdGlvbiBkdWUgdG8gaGVhcnQgZmFpbHVyZS4gUGF0aWVudHMgd2VyZSBhbGxvY2F0ZWQgaW50byB0aHJlZSBncm91cHMgYmFzZWQgb24gRUNWIHZhbHVlIGFuZCBRUlMgZHVyYXRpb24gKGdyb3VwIDE6IEVDVsKg4ommwqAwLjMwIGFuZCBRUlPCoOKJpsKgMTIwwqBtczsgZ3JvdXAgMjogRUNW4oCJPuKAiTAuMzAgb3IgUVJT4oCJPuKAiTEyMMKgbXM7IGdyb3VwIDM6IEVDVuKAiT7igIkwLjMwIGFuZCBRUlPigIk+4oCJMTIwwqBtcykuIER1cmluZyBhIG1lZGlhbiBmb2xsb3ctdXAgZHVyYXRpb24gb2YgMzcwwqBkYXlzLCA3IG9mIDYwICgxMiUpIE5JRENNIHBhdGllbnRzIGV4cGVyaWVuY2VkIGFkdmVyc2UgZXZlbnRzLiBOSURDTSBwYXRpZW50cyB3aXRoIGV2ZW50cyBoYWQgbG9uZ2VyIFFSUyBkdXJhdGlvbiAoMTM04oCJwrHigIkzMcKgbXMgdnMuIDEwNuKAicKx4oCJMTTCoG1zLCBw4oCJPeKAiTAuMDEpIGFuZCBoaWdoZXIgRUNWICgwLjM04oCJwrHigIkwLjA3IHZzIDAuMjnigInCseKAiTAuMDUsIHDigIk94oCJMC4wMjYpIGNvbXBhcmVkIHdpdGggdGhvc2Ugd2l0aG91dCBldmVudHMuIE9uIEthcGxhbi1NZWllciBjdXJ2ZSBhbmFseXNpcywgc2lnbmlmaWNhbnQgZGlmZmVyZW5jZSB3YXMgZm91bmQgYmV0d2VlbiBncm91cCAxIGFuZCBncm91cCAzIChw4oCJPOKAiTAuMDAxLCBsb2ctcmFuayB0ZXN0KS4gTm8gc2lnbmlmaWNhbnQgZGlmZmVyZW5jZSB3YXMgZm91bmQgYmV0d2VlbiBncm91cCAxIGFuZCBncm91cCAyIChw4oCJPeKAiTAuMDUzKSwgZ3JvdXAgMiBhbmQgZ3JvdXAgMyAocOKAiT3igIkwLjExNSkuIFRoZSBhcmVhIHVuZGVyIHRoZSByZWNlaXZlciBvcGVyYXRpbmcgY2hhcmFjdGVyaXN0aWMgY3VydmUgKEFVQykgZm9yIHByZWRpY3RpbmcgYWR2ZXJzZSBldmVudHMgd2FzIDAuNzc4ICg5NSUgY29uZmlkZW5jZSBpbnRlcnZhbCBDSSAwLjYxMi0wLjkzOSkgZm9yIEVDViwgMC43OTIgKDk1JSBDSSAwLjUzOS0wLjkyNCkgZm9yIFFSUyBkdXJhdGlvbiwgMC44MjIgKDk1JSBDSSAwLjY4OC0wLjk2NikgZm9yIGNvbWJpbmF0aW9uIG9mIEVDViBhbmQgUVJTIGR1cmF0aW9uLiBOSURDTSBwYXRpZW50cyB3aXRoIGhpZ2ggRUNWIGFuZCBwcm9sb25nZWQgUVJTIGR1cmF0aW9uIGhhZCBzaWduaWZpY2FudGx5IHdvcnNlIHByb2dub3NpcyBjb21wYXJlZCB0byB0aG9zZSB3aXRoIG5vcm1hbCBFQ1YgYW5kIG5vcm1hbCBRUlMgZHVyYXRpb24uIFRoZSBjb21iaW5hdGlvbiBvZiBFQ1YgYW5kIFFSUyBkdXJhdGlvbiBjb3VsZCBiZSB1c2VmdWwgYXMgYSBub24taW52YXNpdmUgbWV0aG9kIGZvciBiZXR0ZXIgcmlzayBzdHJhdGlmaWNhdGlvbiBmb3IgcGF0aWVudHMgd2l0aCBOSURDTS4iLCJleGVjQ29uZmlnSWQiOjc3MjEsImlzUmV2aWV3ZWQiOmZhbHNlLCJjb21tZW50IjpudWxsLCJpc0F0dGFjaG1lbnQiOmZhbHNlLCJzaWduYWwiOltdfSx7ImlkIjo4Njc5LCJhbGVydE5hbWUiOiJQZXJmVGVzdDQiLCJwcmlvcml0eSI6eyJ2YWx1ZSI6Ik1lZGl1bSIsImljb25DbGFzcyI6Im1kaSBtZGktYWxwaGEtbS1jaXJjbGUgYmx1ZS0xIn0sInRpdGxlIjoiU2VydW0gZ2x1dGFtYXRlIGRlaHlkcm9nZW5hc2UgYWN0aXZpdHkgZW5hYmxlcyBlYXJseSBkZXRlY3Rpb24gb2YgbGl2ZXIgaW5qdXJ5IGluIHN1YmplY3RzIHdpdGggdW5kZXJseWluZyBtdXNjbGUgaW1wYWlybWVudHMuIiwiYXV0aG9ycyI6IltTaGVsbGksIFNjaG9tYWtlcl1bRGF2aWQsIFBvdHRlcl1bUm9zY29lLCBXYXJuZXJdW0phbmUsIExhcmtpbmRhbGVdW05pY2hvbGFzLCBLaW5nXVtBbXkgQywgUG9ydGVyXVtKYW5lLCBPd2Vuc11bTGluZHNheSwgVG9tbGluc29uXVtKb2huLU1pY2hhZWwsIFNhdWVyXVtLZW50LCBKb2huc29uXVtKaXJpLCBBdWJyZWNodF0iLCJhc3NpZ25lZFRvIjp7ImlkIjo2NTc4LCJmdWxsTmFtZSI6IkFkbWluIiwibmFtZSI6IkFkbWluIn0sInB1YmxpY2F0aW9uRGF0ZSI6IjIwMjAiLCJkaXNwb3NpdGlvbiI6Ik5ldyIsInByb2R1Y3ROYW1lIjoiUEFSQUNFVEFNT0wiLCJldmVudE5hbWUiOm51bGwsImFjdGlvbkNvdW50IjowLCJpc1ZhbGlkYXRpb25TdGF0ZUFjaGlldmVkIjpmYWxzZSwiYWxlcnRUYWdzIjpbXSwiYWxlcnRDb25maWdJZCI6ODYwMiwiYXJ0aWNsZUlkIjoiMzI0MDczMzMiLCJhcnRpY2xlQWJzdHJhY3QiOiJTZXJ1bSBhY3Rpdml0aWVzIG9mIGFsYW5pbmUgYW5kIGFzcGFydGF0ZSBhbWlub3RyYW5zZmVyYXNlcyAoQUxUIGFuZCBBU1QpIGFyZSB1c2VkIGFzIGdvbGQgc3RhbmRhcmQgYmlvbWFya2VycyBmb3IgdGhlIGRpYWdub3NpcyBvZiBoZXBhdG9jZWxsdWxhciBpbmp1cnkuIFNpbmNlIEFMVCBhbmQgQVNUIGxhY2sgbGl2ZXIgc3BlY2lmaWNpdHksIHRoZSBkaWFnbm9zaXMgb2YgdGhlIG9uc2V0IG9mIGhlcGF0b2NlbGx1bGFyIGluanVyeSBpbiBwYXRpZW50cyB3aXRoIHVuZGVybHlpbmcgbXVzY2xlIGltcGFpcm1lbnRzIGlzIHNldmVyZWx5IGxpbWl0ZWQuIFRodXMsIHdlIGV2YWx1YXRlZCB0aGUgcG90ZW50aWFsIG9mIGdsdXRhbWF0ZSBkZWh5ZHJvZ2VuYXNlIChHTERIKSBhcyBhIGxpdmVyIHNwZWNpZmljIGFsdGVybmF0aXZlIGJpb21hcmtlciBvZiBoZXBhdG9jZWxsdWxhciBpbmp1cnkuIEluIG91ciBzdHVkeSwgc2VydW0gR0xESCBpbiBzdWJqZWN0cyB3aXRoIER1Y2hlbmUgbXVzY3VsYXIgZHlzdHJvcGh5IChETUQpIHdhcyBlcXVpdmFsZW50IHRvIHNlcnVtIEdMREggaW4gYWdlIG1hdGNoZWQgaGVhbHRoeSBzdWJqZWN0cywgd2hpbGUgc2VydW0gQUxUIHdhcyBpbmNyZWFzZWQgMjAtZm9sZCBpbiBETUQgc3ViamVjdHMuIEZ1cnRoZXJtb3JlLCBzZXJ1bSBHTERIIGluIDEzMSBzdWJqZWN0cyB3aXRoIHZhcmlldHkgb2YgbXVzY2xlIGltcGFpcm1lbnRzIHdhcyBzaW1pbGFyIHRvIHNlcnVtIEdMREggb2YgaGVhbHRoeSBzdWJqZWN0cyB3aGlsZSBzZXJ1bSBBTFQgY29yZWxhdGVkIHdpdGggc2VydW0gY3JlYXRpbmUga2luYXNlLCBhIHdpZGVseSBhY2NlcHRlZCBiaW9tYXJrZXIgb2YgbXVzY2xlIGltcGFpcm1lbnQuIEluIGFkZGl0aW9uLCBzaWduaWZpY2FudCBlbGV2YXRpb25zIG9mIEFMVCwgQVNULCBhbmQgQ0sgd2VyZSBvYnNlcnZlZCBpbiBhIGNhc2Ugb2YgYSBwYXRpZW50IHdpdGggcmhhYmRvbXlvbHlzaXMsIHdoaWxlIHNlcnVtIEdMREggc3RheWVkIHdpdGhpbiB0aGUgbm9ybWFsIHJhbmdlIHVudGlsIHRoZSBvbnNldCBvZiBoeXBveGlhLWluZHVjZWQgbGl2ZXIgaW5qdXJ5LiBJbiBhIG1vdXNlIG1vZGVsIG9mIERNRCAoRE1EbWR4KSwgc2VydW0gR0xESCBidXQgbm90IHNlcnVtIEFMVCBjbGVhcmx5IGNvcnJlbGF0ZWQgd2l0aCB0aGUgZGVncmVlIG9mIGFjZXRhbWlub3BoZW4taW5kdWNlZCBsaXZlciBpbmp1cnkuIFRha2VuIHRvZ2V0aGVyLCBvdXIgZGF0YSBzdXBwb3J0IHRoZSB1dGlsaXR5IG9mIHNlcnVtIEdMREggYXMgYSBsaXZlci1zcGVjaWZpYyBiaW9tYXJrZXIgb2YgbGl2ZXIgaW5qdXJ5IHRoYXQgaGFzIGEgcG90ZW50aWFsIHRvIGltcHJvdmUgZGlhZ25vc2lzIG9mIGhlcGF0b2NlbGx1bGFyIGluanVyeSBpbiBwYXRpZW50cyB3aXRoIHVuZGVybHlpbmcgbXVzY2xlIGltcGFpcm1lbnRzLiBJbiBkcnVnIGRldmVsb3BtZW50LCBHTERIIG1heSBoYXZlIHV0aWxpdHkgYXMgYSBiaW9tYXJrZXIgb2YgZHJ1ZyBpbmR1Y2VkIGxpdmVyIGluanVyeSBpbiBjbGluaWNhbCB0cmlhbHMgb2YgbmV3IHRoZXJhcGllcyB0byB0cmVhdCBtdXNjbGUgZGlzZWFzZXMgc3VjaCBhcyBETUQuIiwiZXhlY0NvbmZpZ0lkIjo4NjMzLCJpc1Jldmlld2VkIjpmYWxzZSwiY29tbWVudCI6bnVsbCwiaXNBdHRhY2htZW50IjpmYWxzZSwic2lnbmFsIjpbXX0seyJpZCI6Nzk0NSwiYWxlcnROYW1lIjoiTGl0UGVyZjEiLCJwcmlvcml0eSI6eyJ2YWx1ZSI6IlVyZ2VudCIsImljb25DbGFzcyI6Im1kaSBtZGktYWxwaGEtdS1jaXJjbGUgcmVkLTEifSwidGl0bGUiOiJDb25jb3JkYW5jZSBhbmQgRGlzY29yZGFuY2Ugb2YgRWNob2NhcmRpb2dyYXBoaWMgUGFyYW1ldGVycyBSZWNvbW1lbmRlZCBmb3IgQXNzZXNzaW5nIHRoZSBTZXZlcml0eSBvZiBNaXRyYWwgUmVndXJnaXRhdGlvbi4iLCJhdXRob3JzIjoiW1NldGgsIFVyZXRza3ldW0xpbGxpYW4sIEFsZGFpYV1bTGVvLCBNYXJjb2ZmXVtLb25zdGFudGlub3MsIEtvdWxvZ2lhbm5pc11bRWRnYXIsIEFyZ3VsaWFuXVtHbGVubW9yZSwgTGFzYW1dW0xpbmRhLCBHaWxsYW1dIiwiYXNzaWduZWRUbyI6eyJpZCI6NzQzNSwiZnVsbE5hbWUiOiJiaGFneWEiLCJ1c2VybmFtZSI6ImJoYWd5YSIsImVtYWlsIjoiTlIuQmhhZ3lhbGFrc2htaUByeGxvZ2l4LmNvbSJ9LCJwdWJsaWNhdGlvbkRhdGUiOiJNYXktMjAyMCIsImRpc3Bvc2l0aW9uIjoiTmV3IiwicHJvZHVjdE5hbWUiOiJXSE8tRElBTUlDUk9OIE1SIiwiZXZlbnROYW1lIjpudWxsLCJhY3Rpb25Db3VudCI6MCwiaXNWYWxpZGF0aW9uU3RhdGVBY2hpZXZlZCI6ZmFsc2UsImFsZXJ0VGFncyI6W10sImFsZXJ0Q29uZmlnSWQiOjc2OTAsImFydGljbGVJZCI6IjMyNDA4ODI4IiwiYXJ0aWNsZUFic3RyYWN0IjoiVGhlIEFtZXJpY2FuIENvbGxlZ2Ugb2YgQ2FyZGlvbG9neS9BbWVyaWNhbiBIZWFydCBBc3NvY2lhdGlvbiBhbmQgQW1lcmljYW4gU29jaWV0eSBvZiBFY2hvY2FyZGlvZ3JhcGh5IGd1aWRlbGluZXMgcmVjb21tZW5kIGFzc2Vzc2luZyBzZXZlcmFsIGVjaG9jYXJkaW9ncmFwaGljIHBhcmFtZXRlcnMgd2hlbiBldmFsdWF0aW5nIG1pdHJhbCByZWd1cmdpdGF0aW9uIChNUikgc2V2ZXJpdHkuIFRoZXNlIHBhcmFtZXRlcnMgY2FuIGJlIGRpc2NvcmRhbnQsIG1ha2luZyB0aGUgYXNzZXNzbWVudCBvZiBNUiBjaGFsbGVuZ2luZy4gVGhlIGRlZ3JlZSB0byB3aGljaCBlY2hvY2FyZGlvZ3JhcGhpYyBwYXJhbWV0ZXJzIG9mIE1SIHNldmVyaXR5IGFyZSBjb25jb3JkYW50IGlzIG5vdCB3ZWxsIHN0dWRpZWQuV2UgZW5yb2xsZWQgMTU5IHBhdGllbnRzIGluIGEgcHJvc3BlY3RpdmUgbXVsdGljZW50ZXIgc3R1ZHkuIEVpZ2h0IHBhcmFtZXRlcnMgd2VyZSBpbmNsdWRlZCBpbiB0aGlzIGFuYWx5c2lzOiBwcm94aW1hbCBpc292ZWxvY2l0eSBzdXJmYWNlIGFyZWEgKFBJU0EpLWRlcml2ZWQgcmVndXJnaXRhbnQgdm9sdW1lLCBQSVNBLWRlcml2ZWQgZWZmZWN0aXZlIHJlZ3VyZ2l0YW50IG9yaWZpY2UgYXJlYSwgdmVuYSBjb250cmFjdGEsIGNvbG9yIERvcHBsZXIgamV0L2xlZnQgYXRyaWFsIGFyZWEsIGxlZnQgYXRyaWFsIHZvbHVtZSBpbmRleCwgbGVmdCB2ZW50cmljdWxhciBlbmQtZGlhc3RvbGljIHZvbHVtZSBpbmRleCwgcGVhayBFIHdhdmUsIGFuZCB0aGUgcHJlc2VuY2Ugb2YgcHVsbW9uYXJ5IHZlaW4gc3lzdG9saWMgcmV2ZXJzYWwuIEVhY2ggZWNob2NhcmRpb2dyYXBoaWMgcGFyYW1ldGVyIHdhcyBkZXRlcm1pbmVkIHRvIHJlcHJlc2VudCBzZXZlcmUgb3Igbm9uc2V2ZXJlIE1SIGFjY29yZGluZyB0byB0aGUgQW1lcmljYW4gU29jaWV0eSBvZiBFY2hvY2FyZGlvZ3JhcGh5IGd1aWRlbGluZXMuIEEgY29uY29yZGFuY2Ugc2NvcmUgd2FzIGNhbGN1bGF0ZWQgYXMgW0Zvcm11bGE6IHNlZSB0ZXh0XSBzbyB0aGF0IGEgaGlnaGVyIHNjb3JlIHJlZmxlY3RzIGdyZWF0ZXIgY29uY29yZGFuY2UuIFRoZXJlIHdhcyBubyBkaXNjb3JkYW5jZSB3aGVuIGFsbCB0aGUgZWNob2NhcmRpb2dyYXBoaWMgcGFyYW1ldGVycyBhZ3JlZWQgYW5kIGhpZ2ggZGlzY29yZGFuY2Ugd2hlbiAzIG9yIDQgcGFyYW1ldGVycyB3ZXJlIGRpc2NvcmRhbnQuVGhlIG1lYW4gY29uY29yZGFuY2Ugc2NvcmUgd2FzIDc1wrExNCUgZm9yIHRoZSBlbnRpcmUgY29ob3J0LiBUaGVyZSB3ZXJlIDkgKDYlKSBwYXRpZW50cyB3aXRoIGNvbXBsZXRlIGFncmVlbWVudCBvZiBhbGwgcGFyYW1ldGVycyBhbmQgNjEgKDM4JSkgd2l0aCBoaWdoIGRpc2NvcmRhbmNlLiBUaGVyZSB3YXMgZ3JlYXRlciBkaXNjb3JkYW5jZSBpbiBwYXRpZW50cyB3aXRoIHNldmVyZSBNUiBidXQgbm8gZGlmZmVyZW5jZSBiZXR3ZWVuIHByaW1hcnkgdmVyc3VzIHNlY29uZGFyeSBvciBjZW50cmFsIHZlcnN1cyBlY2NlbnRyaWMgamV0cy4gVGhlcmUgd2FzIGFuIGltcHJvdmVtZW50IGluIGNvbmNvcmRhbmNlIHdoZW4gb25seSBjb25zaWRlcmluZyBQSVNBLWJhc2VkIHJlZ3VyZ2l0YW50IHZvbHVtZSwgUElTQS1iYXNlZCBlZmZlY3RpdmUgcmVndXJnaXRhbnQgb3JpZmljZSBhcmVhLCBhbmQgdmVuYSBjb250cmFjdGEgd2l0aCBhZ3JlZW1lbnQgaW4gNjglIG9mIHBhdGllbnRzLlRoZXJlIHdhcyBsaW1pdGVkIGNvbmNvcmRhbmNlIGJldHdlZW4gdGhlIGVjaG9jYXJkaW9ncmFwaGljIHBhcmFtZXRlcnMgb2YgTVIgc2V2ZXJpdHksIGFuZCB0aGUgZGlzY29yZGFuY2Ugd2FzIHdvcnNlIHdpdGggbW9yZSBzZXZlcmUgTVIuIENvbmNvcmRhbmNlIGltcHJvdmVkIHdoZW4gY29uc2lkZXJpbmcgb25seSAzIHF1YW50aXRhdGl2ZSBtZWFzdXJlcyBvZiB2ZW5hIGNvbnRyYWN0YSBhbmQgUElTQS1iYXNlZCBlZmZlY3RpdmUgcmVndXJnaXRhbnQgb3JpZmljZSBhcmVhIGFuZCByZWd1cmdpdGFudCB2b2x1bWUuIFRoZXNlIGZpbmRpbmdzIGhpZ2hsaWdodCB0aGUgY2hhbGxlbmdlcyBmYWNpbmcgZWNob2NhcmRpb2dyYXBoZXJzIHdoZW4gYXNzZXNzaW5nIHRoZSBzZXZlcml0eSBvZiBNUiBhbmQgZW1waGFzaXplIHRoZSBkaWZmaWN1bHR5IG9mIHVzaW5nIGFuIGludGVncmF0ZWQgYXBwcm9hY2ggdGhhdCBpbmNvcnBvcmF0ZXMgbXVsdGlwbGUgY29tcG9uZW50cy4gUmVnaXN0cmF0aW9uOiBVUkw6IGh0dHBzOi8vd3d3LmNsaW5pY2FsdHJpYWxzLmdvdjsgVW5pcXVlIGlkZW50aWZpZXI6IE5DVDA0MDM4ODc5LiIsImV4ZWNDb25maWdJZCI6NzcyMSwiaXNSZXZpZXdlZCI6ZmFsc2UsImNvbW1lbnQiOm51bGwsImlzQXR0YWNobWVudCI6ZmFsc2UsInNpZ25hbCI6W119LHsiaWQiOjc5MDUsImFsZXJ0TmFtZSI6IkxpdFBlcmYxIiwicHJpb3JpdHkiOnsidmFsdWUiOiJVcmdlbnQiLCJpY29uQ2xhc3MiOiJtZGkgbWRpLWFscGhhLXUtY2lyY2xlIHJlZC0xIn0sInRpdGxlIjoiUmVzdHJpY3RpdmUgbWl0cmFsIGFubnVsb3BsYXN0eSB3aXRoIG9yIHdpdGhvdXQgY29yb25hcnkgYXJ0ZXJ5IGJ5cGFzcyBncmFmdGluZyBpbiBpc2NoZW1pYyBtaXRyYWwgcmVndXJnaXRhdGlvbi4iLCJhdXRob3JzIjoiW1NhdG9zaGksIEthaW51bWFdW0tvaWNoaSwgVG9kYV1bU2hpZ2VydSwgTWl5YWdhd2FdW1lhc3VzaGksIFlvc2hpa2F3YV1bSGlyb2tpLCBIYXRhXVtEYWlzdWtlLCBZb3NoaW9rYV1bVGFrdWppLCBLYXdhbXVyYV1bQWksIEthd2FtdXJhXVtUYWtheW9zaGksIFVlbm9dW1RvcnUsIEt1cmF0YW5pXVtIYXJ1aGlrbywgS29uZG9oXVtUYWthZnVtaSwgTWFzYWldW0FydWRvLCBIaXJhb2thXVtUYWljaGksIFNha2FndWNoaV1bSGlkZW5vcmksIFlvc2hpdGFrYV1bWXVraXRvc2hpLCBTaGlyYWthd2FdW1Rvc2hpa2ksIFRha2FoYXNoaV1bU2h1bnN1a2UsIFNhaXRvXVtPc2FtdSwgTW9udGFdW0p1bnlhLCBTYWRvXVtUZXRzdWhpc2EsIEtpdGFtdXJhXVtTaG8sIEtvbXVrYWldW0F0c3VzaGksIEhpcmF5YW1hXVtLYXp1aGlybywgVGFuaWd1Y2hpXVtZb3NoaWtpLCBTYXdhXSIsImFzc2lnbmVkVG8iOnsiaWQiOjc0MzUsImZ1bGxOYW1lIjoiYmhhZ3lhIiwidXNlcm5hbWUiOiJiaGFneWEiLCJlbWFpbCI6Ik5SLkJoYWd5YWxha3NobWlAcnhsb2dpeC5jb20ifSwicHVibGljYXRpb25EYXRlIjoiMTMtTWF5LTIwMjAiLCJkaXNwb3NpdGlvbiI6Ik5ldyIsInByb2R1Y3ROYW1lIjoiV0hPLURJQU1JQ1JPTiBNUiIsImV2ZW50TmFtZSI6bnVsbCwiYWN0aW9uQ291bnQiOjAsImlzVmFsaWRhdGlvblN0YXRlQWNoaWV2ZWQiOmZhbHNlLCJhbGVydFRhZ3MiOltdLCJhbGVydENvbmZpZ0lkIjo3NjkwLCJhcnRpY2xlSWQiOiIzMjQwMDA5NiIsImFydGljbGVBYnN0cmFjdCI6IkluIHBhdGllbnRzIHdpdGggaXNjaGFlbWljIG1pdHJhbCByZWd1cmdpdGF0aW9uIChNUiksIHRoZSBpbXBhY3Qgb2YgbWl0cmFsIHZhbHZlIHN1cmdlcnkgd2l0aCBjb25jb21pdGFudCBjb3JvbmFyeSBhcnRlcnkgYnlwYXNzIGdyYWZ0aW5nIChDQUJHKSBvbiBwb3N0LW9wZXJhdGl2ZSBzdXJ2aXZhbCBhbmQgbGVmdCB2ZW50cmljdWxhciAoTFYpIHJldmVyc2UgcmVtb2RlbGxpbmcgcmVtYWlucyB1bmtub3duLiBUaGVyZWZvcmUsIHdlIGludmVzdGlnYXRlZCB0aGVzZSBvdXRjb21lcyBmb2xsb3dpbmcgcmVzdHJpY3RpdmUgbWl0cmFsIGFubnVsb3BsYXN0eSAoUk1BKSB3aXRoIGFuZCB3aXRob3V0IENBQkcgaW4gdGhvc2UgcGF0aWVudHMuVGhpcyBzdHVkeSBpbmNsdWRlZCAzMDkgcGF0aWVudHMgd2l0aCBjaHJvbmljIE1SIGFuZCBpc2NoYWVtaWMgY2FyZGlvbXlvcGF0aHkgZm9yIHdob20gY29uY29taXRhbnQgQ0FCRyB3YXMgaW5kaWNhdGVkIChuwqA9wqAyMjUpIG9yIG5vdCBpbmRpY2F0ZWQgKG7CoD3CoDg0KSB3aXRoIFJNQS4gVGhlIHByaW1hcnkgZW5kcG9pbnQgd2FzIGFsbCBjYXVzZSBtb3J0YWxpdHkgZHVyaW5nIHRoZSBmb2xsb3ctdXAsIGFuZCB0aGUgc2Vjb25kYXJ5IGVuZHBvaW50IHdhcyBkZWZpbmVkIGFzIHRoZSBjb21wb3NpdGUgb2YgbW9ydGFsaXR5IGFuZCByZS1hZG1pc3Npb24gZm9yIGhlYXJ0IGZhaWx1cmUuIExpbmVhciBtaXhlZCBtb2RlbCB3YXMgdXNlZCB0byBhbmFseXNlIHNlcmlhbCBlY2hvY2FyZGlvZ3JhcGhpYyBjaGFuZ2VzIGluIExWIGZ1bmN0aW9uLiBUbyByZWR1Y2UgdGhlIGltcGFjdCBvZiB0cmVhdG1lbnQgYmlhcyBhbmQgcG90ZW50aWFsIGNvbmZvdW5kaW5nIGluIHRoZSBkaXJlY3QgY29tcGFyaXNvbnMgYmV0d2VlbiBwYXRpZW50cyB3aG8gdW5kZXJ3ZW50IFJNQSB3aXRoIGFuZCB0aG9zZSB3aG8gdW5kZXJ3ZW50IGl0IHdpdGhvdXQgQ0FCRywgd2UgZXN0YWJsaXNoZWQgd2VpZ2h0ZWQgQ294IHByb3BvcnRpb25hbC1oYXphcmRzIHJlZ3Jlc3Npb24gbW9kZWxzIHdpdGggaW52ZXJzZS1wcm9iYWJpbGl0eS1vZi10cmVhdG1lbnQgd2VpZ2h0aW5nLiBQcmUtb3BlcmF0aXZlbHksIHRoZXJlIHdlcmUgbm8gaW50ZXJncm91cCBkaWZmZXJlbmNlcyBpbiBhZ2UgKFJNQSB3aXRoIENBQkcsIDY3wqDCscKgOSB2cy4gUk1BIHdpdGhvdXQgQ0FCRywgNjjCoMKxwqAxMSwgUMKgPcKgMC40MDkpIGFuZCBsb2dpc3RpYyBFdXJvU0NPUkUgSUkgKDE2wqDCscKgMTQgdnMuIDE1wqDCscKgMTUlLCBQwqA9wqAwLjQ5NikuIFRoZSAzMC1kYXkgbW9ydGFsaXRpZXMgd2VyZSAyLjclIGFuZCAzLjYlLCByZXNwZWN0aXZlbHkgKFDCoD3CoDAuNjcpLiBEdXJpbmcgZm9sbG93LXVwIHdpdGggYSBtZWFuIGR1cmF0aW9uIG9mIDcywqDCscKgMzfCoG1vbnRocyAocmFuZ2UsIDUuNi0xNzkpLCB0aGVyZSB3ZXJlIDE1NyBkZWF0aHMgYW5kIDEwNSByZS1hZG1pc3Npb25zIGZvciBoZWFydCBmYWlsdXJlLiBPdmVyYWxsIDEteWVhciBhbmQgNS15ZWFyIHN1cnZpdmFsIHJhdGVzIHdlcmUgODPCoMKxwqAyJSBhbmQgNTjCoMKxwqAzJSwgcmVzcGVjdGl2ZWx5LiBQYXRpZW50cyB3aG8gZGlkIG5vdCByZWNlaXZlIENBQkcgd2l0aCBSTUEgaGFkIGEgc2lnbmlmaWNhbnRseSBsb3dlciA1LXllYXIgc3Vydml2YWwgcmF0ZSAoNDUlIHZzLiA2MyUsIFDCoD3CoDAuMDQ5KSBhbmQgZnJlZWRvbSBmcm9tIGFkdmVyc2UgZXZlbnRzIGRlZmluZWQgYXMgbW9ydGFsaXR5IGFuZC9vciBhZG1pc3Npb24gZm9yIGhlYXJ0IGZhaWx1cmUgKDE5JSB2cy4gNDMlLCBQwqA8wqAwLjAwMSkgdGhhbiB0aG9zZSB3aG8gZGlkLiBBZnRlciBhZGp1c3RtZW50cyBmb3IgY2xpbmljYWwgY292YXJpYXRlcyB3aXRoIGludmVyc2UtcHJvYmFiaWxpdHktb2YtdHJlYXRtZW50IHdlaWdodGluZywgY29uY29taXRhbnQgQ0FCRyB3YXMgaWRlbnRpZmllZCBhcyBhbiBpbmRlcGVuZGVudCBwcm90ZWN0aXZlIGZhY3RvciBmb3IgYWR2ZXJzZSBldmVudHMgKGhhemFyZCByYXRpbzogMC41MzsgOTUlIGNvbmZpZGVuY2UgaW50ZXJ2YWw6IDAuNDQtMC42NDsgUMKgPMKgMC4wMDEpLiBBbG9uZyB3aXRoIHNpZ25pZmljYW50IE1SIHJlZHVjdGlvbiwgTFYgZnVuY3Rpb24gcGFyYW1ldGVycyBjaGFuZ2VkIG92ZXIgdGltZSBhZnRlciBzdXJnZXJ5IGluIGJvdGggZ3JvdXBzLCB3aXRoIGdyZWF0ZXIgaW1wcm92ZW1lbnRzIGluIHBhdGllbnRzIHdobyB1bmRlcndlbnQgUk1BIHdpdGggQ0FCRyAodGltZSBlZmZlY3QsIFDCoDzCoDAuMDAxOyBhbmQgaW50ZXJhY3Rpb24gZWZmZWN0LCBQwqA9wqAwLjAwMikuUk1BIGNhbiBiZSBwZXJmb3JtZWQgd2l0aCBhbiBhY2NlcHRhYmxlIG9wZXJhdGl2ZSBtb3J0YWxpdHksIGlycmVzcGVjdGl2ZSBvZiBpbmRpY2F0aW9ucyBmb3IgQ0FCRy4gUGF0aWVudHMgd2l0aCBpc2NoYWVtaWMgTVIgZm9yIHdob20gQ0FCRyBpcyBpbmRpY2F0ZWQgd2l0aCBSTUEgYXJlIG1vcmUgbGlrZWx5IHRvIHNob3cgYmV0dGVyIGxvbmctdGVybSBhbmQgZXZlbnQtZnJlZSBzdXJ2aXZhbCBhbmQgZ3JlYXRlciBpbXByb3ZlbWVudHMgaW4gTFYgc3lzdG9saWMgZnVuY3Rpb24uIFRoZSBvcHRpbWFsIHJldmFzY3VsYXJpemF0aW9uIHN0cmF0ZWd5IHNob3VsZCBiZSBkaXNjdXNzZWQgd2l0aCBhIGhlYXJ0IHRlYW0gd2hlbmV2ZXIgaW5kaWNhdGVkIGluIHBhdGllbnRzIHdpdGggaXNjaGFlbWljIE1SOyBvdGhlcndpc2UsIHRoZXkgbWF5IG1pc3MgdGhlIG9wcG9ydHVuaXR5IHRvIGJlbmVmaXQgZnJvbSBjb25jb21pdGFudCBDQUJHIGR1cmluZyBzdWJzZXF1ZW50IFJNQS4iLCJleGVjQ29uZmlnSWQiOjc3MjEsImlzUmV2aWV3ZWQiOmZhbHNlLCJjb21tZW50IjpudWxsLCJpc0F0dGFjaG1lbnQiOmZhbHNlLCJzaWduYWwiOltdfSx7ImlkIjo4NjY4LCJhbGVydE5hbWUiOiJQZXJmVGVzdDQiLCJwcmlvcml0eSI6eyJ2YWx1ZSI6Ik1lZGl1bSIsImljb25DbGFzcyI6Im1kaSBtZGktYWxwaGEtbS1jaXJjbGUgYmx1ZS0xIn0sInRpdGxlIjoiTml0cm91cyBveGlkZS9veHlnZW4gcGx1cyBhY2V0YW1pbm9waGVuIHZlcnN1cyBtb3JwaGluZSBpbiBTVCBlbGV2YXRpb24gbXlvY2FyZGlhbCBpbmZhcmN0aW9uOiBvcGVuLWxhYmVsLCBjbHVzdGVyLXJhbmRvbWl6ZWQsIG5vbi1pbmZlcmlvcml0eSBzdHVkeS4iLCJhdXRob3JzIjoiW1NhbmRyaW5lLCBDaGFycGVudGllcl1bTWljaGVsLCBHYWxpbnNraV1bVmluY2VudCwgQm91bmVzXVtBZ27DqHMsIFJpY2FyZC1IaWJvbl1bQ2FybG9zLCBFbC1LaG91cnldW01leWVyLCBFbGJhel1bRnJhbsOnb2lzLVhhdmllciwgQWdlcm9uXVtTdMOpcGhhbmUsIE1hbnpvLVNpbGJlcm1hbl1bTG91aXMsIFNvdWxhdF1bRnLDqWTDqXJpYywgTGFwb3N0b2xsZV1bQWxleGFuZHJlLCBHw6lyYXJkXVtEZWxwaGluZSwgQnJlZ2VhdWRdW1ZhbmluYSwgQm9uZ2FyZF1bRXJpYywgQm9ubmVmb3ktQ3VkcmF6XVtdIiwiYXNzaWduZWRUbyI6eyJpZCI6NjU3OCwiZnVsbE5hbWUiOiJBZG1pbiIsIm5hbWUiOiJBZG1pbiJ9LCJwdWJsaWNhdGlvbkRhdGUiOiIxMi1NYXktMjAyMCIsImRpc3Bvc2l0aW9uIjoiTmV3IiwicHJvZHVjdE5hbWUiOiJQQVJBQ0VUQU1PTCIsImV2ZW50TmFtZSI6bnVsbCwiYWN0aW9uQ291bnQiOjAsImlzVmFsaWRhdGlvblN0YXRlQWNoaWV2ZWQiOmZhbHNlLCJhbGVydFRhZ3MiOltdLCJhbGVydENvbmZpZ0lkIjo4NjAyLCJhcnRpY2xlSWQiOiIzMjM5ODE2MCIsImFydGljbGVBYnN0cmFjdCI6IlN0dWRpZXMgaGF2ZSBzaG93biBkaXNwYXJhdGUgcmVzdWx0cyBvbiB0aGUgY29uc2VxdWVuY2VzIG9mIG1vcnBoaW5lIHVzZSBpbiBTVC1zZWdtZW50IGVsZXZhdGlvbiBteW9jYXJkaWFsIGluZmFyY3Rpb24gKFNURU1JKS4gTm8gc3R1ZHkgaGFzIGV2YWx1YXRlZCBhbHRlcm5hdGl2ZSB0cmVhdG1lbnRzIHRoYXQgY291bGQgYmUgYXQgbGVhc3Qgbm9uLWluZmVyaW9yIHRvIG1vcnBoaW5lIHdpdGhvdXQgaXRzIHBvdGVudGlhbGx5IGRhbWFnaW5nIGNvbnNlcXVlbmNlcyBmb3IgbXlvY2FyZGlhbCBmdW5jdGlvbiBhbmQgcGxhdGVsZXQgcmVhY3Rpdml0eS4gVGhlIGFpbSBvZiB0aGlzIHN0dWR5IHdhcyB0byBldmFsdWF0ZSB3aGV0aGVyIG5pdHJvdXMgb3hpZGUvb3h5Z2VuIHBsdXMgaW50cmF2ZW5vdXMgYWNldGFtaW5vcGhlbiAoTk9PLUEpIGlzIG5vbi1pbmZlcmlvciB0byBtb3JwaGluZSB0byBjb250cm9sIGNoZXN0IHBhaW4gaW4gU1RFTUkgcGF0aWVudHMuVGhpcyBtdWx0aWNlbnRlciwgb3Blbi1sYWJlbCwgY2x1c3Rlci1yYW5kb21pemVkLCBjb250cm9sbGVkLCBub24taW5mZXJpb3JpdHkgc3R1ZHkgY29tcGFyZWQgTk9PLUEgd2l0aCBtb3JwaGluZSBpbiA2ODQgcHJlaG9zcGl0YWwgcGF0aWVudHMgd2l0aCBvbmdvaW5nIHN1c3BlY3RlZCBTVEVNSSBvZiA84oCJMTLigIloIGR1cmF0aW9uIGFuZCBhIHBhaW4gcmF0aW5nIHNjb3Jl4oCJ4oml4oCJNC4gVGhlIHByaW1hcnkgZW5kcG9pbnQgd2FzIHRoZSBwcm9wb3J0aW9uIG9mIHBhdGllbnRzIGFjaGlldmluZyBwYWluIHJlbGllZiAobnVtZXJpYyByYXRpbmcgc2NvcmXigIniiaTigIkzKSBhZnRlciAzMOKAiW1pbi4gU2Vjb25kYXJ5IHNhZmV0eSBlbmRwb2ludHMgaW5jbHVkZWQgc2VyaW91cyBhZHZlcnNlIGV2ZW50cyBhbmQgZGVhdGggYXQgMzDigIlkYXlzLlRoZSBtZWRpYW4gYmFzZWxpbmUgcGFpbiBzY29yZSB3YXMgNy4wIGluIGJvdGggZ3JvdXBzLiBUaGUgcHJpbWFyeSBlbmRwb2ludCBvY2N1cnJlZCBpbiA1MS43JSBvZiB0aGUgTk9PLUEgZ3JvdXAgYW5kIDczLjYlIG9mIHRoZSBtb3JwaGluZSBncm91cCAoYWJzb2x1dGUgcmlzayBkaWZmZXJlbmNl4oCJLeKAiTIxLjclOyA5NSUgY29uZmlkZW5jZSBpbnRlcnZhbOKAiS3igIkyOS42IHRvIC3igIkxMy44KS4gQXQgMzDigIlkYXlzLCB0aGUgcmF0ZSBvZiBzZXJpb3VzIGFkdmVyc2UgZXZlbnRzIHdhcyAxNi4wIGFuZCAxOC44JSBpbiB0aGUgTk9PLUEgYW5kIG1vcnBoaW5lIGdyb3VwcyByZXNwZWN0aXZlbHkgKHDigIk94oCJTlMpLiBUaGUgcmF0ZSBvZiBkZWF0aCB3YXMgMS44JSAoTk9PLUEgZ3JvdXApIGFuZCAzLjglIChtb3JwaGluZSBncm91cCkgKHDigIk94oCJTlMpLkFuYWxnZXNpYSBwcm92aWRlZCBieSBOT08tQSB3YXMgaW5mZXJpb3IgdG8gbW9ycGhpbmUgYXQgMzDigIltaW4gaW4gcGF0aWVudHMgd2l0aCBhY3V0ZSBTVEVNSSBpbiB0aGUgcHJlaG9zcGl0YWwgc2V0dGluZy4gUmF0ZXMgb2Ygc2VyaW91cyBhZHZlcnNlIGV2ZW50cyBkaWQgbm90IGRpZmZlciBiZXR3ZWVuIGdyb3Vwcy5DbGluaWNhbFRyaWFscy5nb3Y6IE5DVDAyMTk4Mzc4LiIsImV4ZWNDb25maWdJZCI6ODYzMywiaXNSZXZpZXdlZCI6ZmFsc2UsImNvbW1lbnQiOm51bGwsImlzQXR0YWNobWVudCI6ZmFsc2UsInNpZ25hbCI6W119LHsiaWQiOjc5NDMsImFsZXJ0TmFtZSI6IkxpdFBlcmYxIiwicHJpb3JpdHkiOnsidmFsdWUiOiJVcmdlbnQiLCJpY29uQ2xhc3MiOiJtZGkgbWRpLWFscGhhLXUtY2lyY2xlIHJlZC0xIn0sInRpdGxlIjoiRGlyZWN0IGNvbXBhcmlzb24gb2YgYWN0aXZhdGlvbiBtYXBzIGR1cmluZyBnYWx2YW5pYyB2ZXN0aWJ1bGFyIHN0aW11bGF0aW9uOiBBIGh5YnJpZCBIMlsxNSBPXSBQRVQtQk9MRCBNUkkgYWN0aXZhdGlvbiBzdHVkeS4iLCJhdXRob3JzIjoiW1NhbmRyYSwgQmVja2VyLUJlbnNlXVtGcm9kZSwgV2lsbG9jaF1bVGhvbWFzLCBTdGVwaGFuXVtNYXR0aGlhcywgQnJlbmRlbF1bSWdvciwgWWFrdXNoZXZdW01heGltaWxpYW4sIEhhYnNdW1NpYnlsbGUsIFppZWdsZXJdW01pY2hhZWwsIEhlcnpdW01hcmt1cywgU2Nod2FpZ2VyXVtNYXJpYW5uZSwgRGlldGVyaWNoXVtQZXRlciwgQmFydGVuc3RlaW5dIiwiYXNzaWduZWRUbyI6eyJpZCI6NzQzNSwiZnVsbE5hbWUiOiJiaGFneWEiLCJ1c2VybmFtZSI6ImJoYWd5YSIsImVtYWlsIjoiTlIuQmhhZ3lhbGFrc2htaUByeGxvZ2l4LmNvbSJ9LCJwdWJsaWNhdGlvbkRhdGUiOiIyMDIwIiwiZGlzcG9zaXRpb24iOiJOZXciLCJwcm9kdWN0TmFtZSI6IldITy1ESUFNSUNST04gTVIiLCJldmVudE5hbWUiOm51bGwsImFjdGlvbkNvdW50IjowLCJpc1ZhbGlkYXRpb25TdGF0ZUFjaGlldmVkIjpmYWxzZSwiYWxlcnRUYWdzIjpbXSwiYWxlcnRDb25maWdJZCI6NzY5MCwiYXJ0aWNsZUlkIjoiMzI0MTMwNzkiLCJhcnRpY2xlQWJzdHJhY3QiOiJQcmV2aW91cyB1bmltb2RhbCBQRVQgYW5kIGZNUkkgc3R1ZGllcyBpbiBodW1hbnMgcmV2ZWFsZWQgYSByZXByb2R1Y2libGUgdmVzdGlidWxhciBicmFpbiBhY3RpdmF0aW9uIHBhdHRlcm4sIGJ1dCB3aXRoIHZhcmlhdGlvbnMgaW4gaXRzIHdlaWdodGluZyBhbmQgZXhwYW5zaXZlbmVzcy4gSHlicmlkIHN0dWRpZXMgbWluaW1pemluZyBtZXRob2RvbG9naWNhbCB2YXJpYXRpb25zIGF0IGJhc2VsaW5lIGNvbmRpdGlvbnMgYXJlIHJhcmUgYW5kIHN0aWxsIGxhY2tpbmcgZm9yIHRhc2stYmFzZWQgZGVzaWducy4gVGh1cywgd2UgYXBwbGllZCBmb3IgdGhlIGZpcnN0IHRpbWUgaHlicmlkIDNUIFBFVC1NUkkgc2Nhbm5pbmcgKFNpZW1lbnMgbU1SKSBpbiBoZWFsdGh5IHZvbHVudGVlcnMgdXNpbmcgZ2FsdmFuaWMgdmVzdGlidWxhciBzdGltdWxhdGlvbiAoR1ZTKSBpbiBoZWFsdGh5IHZvbHVudGVlcnMgaW4gb3JkZXIgdG8gZGlyZWN0bHkgY29tcGFyZSBIMjE1Ty1QRVQgYW5kIEJPTEQgTVJJIHJlc3BvbnNlcy4gTGlzdCBtb2RlIFBFVCBhY3F1aXNpdGlvbiBzdGFydGVkIHdpdGggdGhlIGluamVjdGlvbiBvZiA3NTAgTUJxIEgyMTVPIHNpbXVsdGFuZW91c2x5IHRvIE1SSSBFUEkgc2VxdWVuY2VzLiBHcm91cC1sZXZlbCBzdGF0aXN0aWNhbCBwYXJhbWV0cmljIG1hcHMgd2VyZSBnZW5lcmF0ZWQgZm9yIEdWUyB2cy4gcmVzdCBjb250cmFzdHMgb2YgUEVULCBNUi1vbnNldCAoZXZlbnQtcmVsYXRlZCksIGFuZCBNUi1ibG9jay4gQWxsIGNvbnRyYXN0cyBzaG93ZWQgYSBzaW1pbGFyIGJpbGF0ZXJhbCB2ZXN0aWJ1bGFyIGFjdGl2YXRpb24gcGF0dGVybiB3aXRoIHJlbWFya2FibGUgcHJveGltaXR5IG9mIGFjdGl2YXRpb24gZm9jaS4gQm90aCBCT0xEIGNvbnRyYXN0cyBnYXZlIG1vcmUgYmlsYXRlcmFsIHdpZGUtc3ByZWFkIGFjdGl2YXRpb24gY2x1c3RlcnMgdGhhbiBQRVQ7IG5vIGFyZWEgc2hvd2VkIGNvbnRyYWRpY3Rvcnkgc2lnbmFsIHJlc3BvbnNlcy4gUEVUIHN0aWxsIGNvbmZpcm1lZCB0aGUgcmlnaHQtaGVtaXNwaGVyaWMgbGF0ZXJhbGl6YXRpb24gb2YgdGhlIHZlc3RpYnVsYXIgc3lzdGVtLCB3aGVyZWFzIEJPTEQtb25zZXQgcmV2ZWFsZWQgb25seSBhIHRlbmRlbmN5LiBUaGUgcmVjaXByb2NhbCBpbmhpYml0b3J5IHZpc3VhbC12ZXN0aWJ1bGFyIGludGVyYWN0aW9uIGNvbmNlcHQgd2FzIGNvbmZpcm1lZCBieSBQRVQgc2lnbmFsIGRlY3JlYXNlcyBpbiBwcmltYXJ5IGFuZCBzZWNvbmRhcnkgdmlzdWFsIGNvcnRpY2VzLCBhbmQgQk9MRC1ibG9jayBkZWNyZWFzZXMgaW4gc2Vjb25kYXJ5IHZpc3VhbCBhcmVhcy4gSW4gY29uY2x1c2lvbiwgTVJJIGFjdGl2YXRpb24gbWFwcyBjb250YWluZWQgYSBtaXh0dXJlIG9mIENCRiBtZWFzdXJlZCB1c2luZyBIMjE1Ty1QRVQgYW5kIGFkZGl0aW9uYWwgbm9uLUNCRiBlZmZlY3RzLCBhbmQgdGhlIGFjdGl2YXRpb24tZGVhY3RpdmF0aW9uIHBhdHRlcm4gb2YgdGhlIEJPTEQtYmxvY2sgYXBwZWFycyB0byBiZSBtb3JlIHNpbWlsYXIgdG8gdGhlIEgyMTVPLVBFVCB0aGFuIHRoZSBCT0xELW9uc2V0LiIsImV4ZWNDb25maWdJZCI6NzcyMSwiaXNSZXZpZXdlZCI6ZmFsc2UsImNvbW1lbnQiOm51bGwsImlzQXR0YWNobWVudCI6ZmFsc2UsInNpZ25hbCI6W119LHsiaWQiOjc5MDksImFsZXJ0TmFtZSI6IkxpdFBlcmYxIiwicHJpb3JpdHkiOnsidmFsdWUiOiJVcmdlbnQiLCJpY29uQ2xhc3MiOiJtZGkgbWRpLWFscGhhLXUtY2lyY2xlIHJlZC0xIn0sInRpdGxlIjoiQ29tbWVudGFyeSBvbjogTWFscHJhY3RpY2UgTGl0aWdhdGlvbiBpbiBQbGFzdGljIFN1cmdlcnk6IENhbiBXZSBJZGVudGlmeSBQYXR0ZXJucz8iLCJhdXRob3JzIjoiW1NhbXVlbCBPLCBXZWF2ZXJdIiwiYXNzaWduZWRUbyI6eyJpZCI6NzQzNSwiZnVsbE5hbWUiOiJiaGFneWEiLCJ1c2VybmFtZSI6ImJoYWd5YSIsImVtYWlsIjoiTlIuQmhhZ3lhbGFrc2htaUByeGxvZ2l4LmNvbSJ9LCJwdWJsaWNhdGlvbkRhdGUiOiIxNi1NYXktMjAyMCIsImRpc3Bvc2l0aW9uIjoiTmV3IiwicHJvZHVjdE5hbWUiOiJXSE8tRElBTUlDUk9OIE1SIiwiZXZlbnROYW1lIjpudWxsLCJhY3Rpb25Db3VudCI6MCwiaXNWYWxpZGF0aW9uU3RhdGVBY2hpZXZlZCI6ZmFsc2UsImFsZXJ0VGFncyI6W10sImFsZXJ0Q29uZmlnSWQiOjc2OTAsImFydGljbGVJZCI6IjMyMzE0NzkxIiwiYXJ0aWNsZUFic3RyYWN0IjoiLSIsImV4ZWNDb25maWdJZCI6NzcyMSwiaXNSZXZpZXdlZCI6ZmFsc2UsImNvbW1lbnQiOm51bGwsImlzQXR0YWNobWVudCI6ZmFsc2UsInNpZ25hbCI6W119LHsiaWQiOjc5NjMsImFsZXJ0TmFtZSI6IkxpdFBlcmYxIiwicHJpb3JpdHkiOnsidmFsdWUiOiJVcmdlbnQiLCJpY29uQ2xhc3MiOiJtZGkgbWRpLWFscGhhLXUtY2lyY2xlIHJlZC0xIn0sInRpdGxlIjoiVGhlIE9STkFURSBJbmRpYSBQcm9qZWN0OiBVbml0ZWQgS2luZ2RvbS1JbmRpYSBSZXNlYXJjaCBDb2xsYWJvcmF0aW9uIHRvIHRhY2tsZSB2aXN1YWwgaW1wYWlybWVudCBkdWUgdG8gZGlhYmV0aWMgcmV0aW5vcGF0aHkuIiwiYXV0aG9ycyI6IltTLCBTaXZhcHJhc2FkXVtSLCBSYW1hbl1bRCwgQ29ucm95XVtNb2hhbl1bUiwgV2l0dGVuYmVyZ11bUiwgUmFqYWxha3NobWldW0EsIE1hamVlZF1bUywgS3Jpc2huYWt1bWFyXVtULCBQcmV2b3N0XVtTLCBQYXJhbWVzd2FyYW5dW1AsIFR1cm93c2tpXVtVLCBNYWhlc3dhcmldW1IsIEtob2JyYWdhZGVdW0csIE5ldHV2ZWxpXVtSLCBTYWRhbmFuZGFuXVtKLCBHcmVlbndvb2RdW0ssIFJhbWFzYW15XVtNLCBSYW9dW0MsIEJlcmdlbGVzXVtULCBEYXNdW10iLCJhc3NpZ25lZFRvIjp7ImlkIjo3NDM1LCJmdWxsTmFtZSI6ImJoYWd5YSIsInVzZXJuYW1lIjoiYmhhZ3lhIiwiZW1haWwiOiJOUi5CaGFneWFsYWtzaG1pQHJ4bG9naXguY29tIn0sInB1YmxpY2F0aW9uRGF0ZSI6IjEyLU1heS0yMDIwIiwiZGlzcG9zaXRpb24iOiJOZXciLCJwcm9kdWN0TmFtZSI6IldITy1ESUFNSUNST04gTVIiLCJldmVudE5hbWUiOm51bGwsImFjdGlvbkNvdW50IjowLCJpc1ZhbGlkYXRpb25TdGF0ZUFjaGlldmVkIjpmYWxzZSwiYWxlcnRUYWdzIjpbXSwiYWxlcnRDb25maWdJZCI6NzY5MCwiYXJ0aWNsZUlkIjoiMzIzOTg4NDEiLCJhcnRpY2xlQWJzdHJhY3QiOiJUaGUgT1JOQVRFIEluZGlhIHByb2plY3QgaXMgZnVuZGVkIGJ5IHRoZSBVSyBSZXNlYXJjaCBhbmQgSW5ub3ZhdGlvbiAoVUtSSSkgdGhyb3VnaCB0aGUgR2xvYmFsIENoYWxsZW5nZXMgUmVzZWFyY2ggRnVuZC4gVGhlIGFpbSBpcyB0byBidWlsZCByZXNlYXJjaCBjYXBhY2l0eSBhbmQgY2FwYWJpbGl0eSBpbiBJbmRpYSBhbmQgdGhlIFVLIHRvIHRhY2tsZSBnbG9iYWwgYnVyZGVuIG9mIGRpYWJldGVzLXJlbGF0ZWQgdmlzdWFsIGltcGFpcm1lbnQuIEFzIHRoZXJlIGFyZSBvdmVyIDc3IG1pbGxpb24gcGVvcGxlIHdpdGggZGlhYmV0ZXMgaW4gSW5kaWEsIGl0IGlzIGNoYWxsZW5naW5nIHRvIHNjcmVlbiBldmVyeSBwZXJzb24gd2l0aCBkaWFiZXRlcyBhbm51YWxseSBmb3Igc2lnaHQtdGhyZWF0ZW5pbmcgZGlhYmV0aWMgcmV0aW5vcGF0aHkgKERSKS4gVGhlcmVmb3JlLCBhbHRlcm5hdGUgc2FmZSBhcHByb2FjaGVzIG5lZWQgdG8gYmUgZGV2ZWxvcGVkIHNvIHRoYXQgdGhvc2UgYXQtcmlzayBvZiB2aXN1YWwgaW1wYWlybWVudCBkdWUgdG8gRFIgaXMgaWRlbnRpZmllZCBwcm9tcHRseSBhbmQgdHJlYXRlZC5UaGUgcHJvamVjdCB0ZWFtIHV0aWxpc2VkIGRpdmVyc2UgZ2xvYmFsIGhlYWx0aCBzdHJhdGVnaWVzIGFuZCByZXNlYXJjaCBtZXRob2RzIHRvIGNvLWRlc2lnbiB3b3JrIHBhY2thZ2VzIHRvIGJ1aWxkIHJlc2VhcmNoIGNhcGFjaXR5IGFuZCBjYXBhYmlsaXR5IHRvIGVuc3VyZSBlZmZlY3RpdmUsIGFmZm9yZGFibGUgYW5kIGVmZmljaWVudCBEUiBzZXJ2aWNlcyBhcmUgbWFkZSBhdmFpbGFibGUgZm9yIHRoZSBwb3B1bGF0aW9uLiBUaGUgc3RyYXRlZ2llcyBhbmQgbWV0aG9kcyBlbXBsb3llZCBpbmNsdWRlZCBoZWFsdGggc3lzdGVtIHN0cmVuZ3RoZW5pbmc7IGltcGxlbWVudGF0aW9uIHNjaWVuY2U7IGVzdGFibGlzaGluZyBjYXJlIHBhdGh3YXlzOyBjby1kZXNpZ25pbmcgY29sbGFib3JhdGl2ZSBzdHVkaWVzIG9uIGFmZm9yZGFibGUgdGVjaG5vbG9naWVzLCBkZXZlbG9waW5nIHF1YWxpdHkgc3RhbmRhcmRzIGFuZCBndWlkZWxpbmVzIHRvIGRlY3JlYXNlIHZhcmlhdGlvbnMgaW4gY2FyZTsgZWNvbm9taWMgYW5hbHlzaXM7IHJpc2sgbW9kZWxsaW5nIGFuZCBzdHJhdGlmaWNhdGlvbi4gRml2ZSBpbnRlZ3JhdGVkIHdvcmsgcGFja2FnZXMgaGF2ZSBiZWVuIGRldmVsb3BlZCB0byBkZWFsIHdpdGggYWxsIGFzcGVjdHMgb2YgRFIgY2FyZS4gVGhlc2UgaW5jbHVkZWQgaW1wbGVtZW50YXRpb24gb2YgYSBEUiBzY3JlZW5pbmcgcHJvZ3JhbW1lIGluIHRoZSBwdWJsaWMgaGVhbHRoIHN5c3RlbSBpbiBhIGRpc3RyaWN0IGluIEtlcmFsYSwgZXZhbHVhdGluZyByZWdpb25hbCBwcmV2YWxlbmNlIG9mIGRpYWJldGVzIGFuZCBEUiBhbmQgYXNzZXNzaW5nIGlkZWFsIHRlc3RzIGZvciBob2xpc3RpYyBzY3JlZW5pbmcgZm9yIGRpYWJldGVzIGFuZCBpdHMgY29tcGxpY2F0aW9ucyBpbiAyMCBhcmVhcyBpbiBJbmRpYSwgdXRpbGlzaW5nIGFydGlmaWNpYWwgaW50ZWxsaWdlbmNlIG9uIHJldGluYWwgaW1hZ2VzIHRvIGZhY2lsaXRhdGUgRFIgc2NyZWVuaW5nLCBleHBsb3JpbmcgYmlvbWFya2VyIGFuZCBiaW9zZW5zb3IgcmVzZWFyY2ggdG8gZGV0ZWN0IHBlb3BsZSBhdCByaXNrIG9mIGRpYWJldGVzIGNvbXBsaWNhdGlvbnMsIGVzdGltYXRpbmcgY29zdCBvZiBibGluZG5lc3MgaW4gSW5kaWEgYW5kIHJpc2sgbW9kZWxsaW5nIHRvIGRldmVsb3Agcmlzay1iYXNlZCBzY3JlZW5pbmcgbW9kZWxzIGZvciBkaWFiZXRlcyBhbmQgaXRzIGNvbXBsaWNhdGlvbnMuIEEgbGFyZ2UgY29sbGFib3JhdGl2ZSBuZXR3b3JrIHdpbGwgYmUgZm9ybWVkIHRvIHByb3BhZ2F0ZSByZXNlYXJjaCwgcHJvbW90ZSBzaGFyZWQgbGVhcm5pbmcgYW5kIGJpbGF0ZXJhbCBleGNoYW5nZXMgYmV0d2VlbiBoaWdoLSBhbmQgbWlkZGxlLWluY29tZSBjb3VudHJpZXMgdG8gdGFja2xlIGRpYWJldGVzLXJlbGF0ZWQgYmxpbmRuZXNzLiIsImV4ZWNDb25maWdJZCI6NzcyMSwiaXNSZXZpZXdlZCI6ZmFsc2UsImNvbW1lbnQiOm51bGwsImlzQXR0YWNobWVudCI6ZmFsc2UsInNpZ25hbCI6W119LHsiaWQiOjc5MjMsImFsZXJ0TmFtZSI6IkxpdFBlcmYxIiwicHJpb3JpdHkiOnsidmFsdWUiOiJVcmdlbnQiLCJpY29uQ2xhc3MiOiJtZGkgbWRpLWFscGhhLXUtY2lyY2xlIHJlZC0xIn0sInRpdGxlIjoiSW1wbGVtZW50YXRpb24gb2YgSW50cmFvcGVyYXRpdmUgQ29uZS1CZWFtIENvbXB1dGVkIFRvbW9ncmFwaHkgKE8tYXJtKSBmb3IgU3RlcmVvdGFjdGljIEltYWdpbmcgRHVyaW5nIERlZXAgQnJhaW4gU3RpbXVsYXRpb24gUHJvY2VkdXJlcy4iLCJhdXRob3JzIjoiW1JvemVtYXJpamUgQSwgSG9sZXdpam5dW01hYXJ0ZW4sIEJvdF1bUGVwaWpuLCB2YW4gZGVuIE11bmNraG9mXVtQIFJpY2hhcmQsIFNjaHV1cm1hbl0iLCJhc3NpZ25lZFRvIjp7ImlkIjo3NDM1LCJmdWxsTmFtZSI6ImJoYWd5YSIsInVzZXJuYW1lIjoiYmhhZ3lhIiwiZW1haWwiOiJOUi5CaGFneWFsYWtzaG1pQHJ4bG9naXguY29tIn0sInB1YmxpY2F0aW9uRGF0ZSI6IjExLU1heS0yMDIwIiwiZGlzcG9zaXRpb24iOiJOZXciLCJwcm9kdWN0TmFtZSI6IldITy1ESUFNSUNST04gTVIiLCJldmVudE5hbWUiOm51bGwsImFjdGlvbkNvdW50IjowLCJpc1ZhbGlkYXRpb25TdGF0ZUFjaGlldmVkIjpmYWxzZSwiYWxlcnRUYWdzIjpbXSwiYWxlcnRDb25maWdJZCI6NzY5MCwiYXJ0aWNsZUlkIjoiMzIzOTIyOTAiLCJhcnRpY2xlQWJzdHJhY3QiOiJJbnRyYW9wZXJhdGl2ZSBjb25lLWJlYW0gY29tcHV0ZWQgdG9tb2dyYXBoeSAoaUNCQ1QpIGFsbG93cyBmb3IgcmFwaWQgMy1kaW1lbnNpb25hbCBpbWFnaW5nLiBIb3dldmVyLCBpdCBpcyBjdXJyZW50bHkgdW5rbm93biB3aGV0aGVyIHRoaXMgaW1hZ2luZyB0ZWNobmlxdWUgb2ZmZXJzIHN1ZmZpY2llbnQgYWNjdXJhY3kgZm9yIHN0ZXJlb3RhY3RpYyByZWdpc3RyYXRpb24gZHVyaW5nIGRlZXAgYnJhaW4gc3RpbXVsYXRpb24gKERCUykgcHJvY2VkdXJlcy5UbyBkZXRlcm1pbmUgdGhlIGFjY3VyYWN5IG9mIGlDQkNULCB3aXRoIHRoZSBPLWFybSBPMiAoTWVkdHJvbmljKSwgZm9yIHN0ZXJlb3RhY3RpYyByZWdpc3RyYXRpb24gYnkgY29tcGFyaW5nIHRoaXMgbW9kYWxpdHkgdG8gc3RlcmVvdGFjdGljIG1hZ25ldGljIHJlc29uYW5jZSBpbWFnaW5nIChNUkkpLkFsbCBEQlMgcGF0aWVudHMgdW5kZXJ3ZW50IGEgcHJlb3BlcmF0aXZlIG5vbi1zdGVyZW90YWN0aWMgMyBUZXNsYSBNUkksIHN0ZXJlb3RhY3RpYyAxLjUgVGVzbGEgTVJJLCBzdGVyZW90YWN0aWMgTy1hcm0gaUNCQ1QsIHBvc3RpbXBsYW50YXRpb24gTy1hcm0gaUNCQ1QsIGFuZCBwb3N0b3BlcmF0aXZlIGNvbnZlbnRpb25hbCBtdWx0aWRldGVjdG9yIGNvbXB1dGVkIHRvbW9ncmFwaHkgKENUKSBzY2FuLiBXZSBjb21wYXJlZCBzdGVyZW90YWN0aWMgKFgsIFksIGFuZCBaKSBjb29yZGluYXRlcyBvZiB0aGUgYW50ZXJpb3IgY29tbWlzc3VyZSAoQUMpLCB0aGUgcG9zdGVyaW9yIGNvbW1pc3N1cmUgKFBDKSwgYW5kIG1pZGxpbmUgcmVmZXJlbmNlIChNUikgYmV0d2VlbiBzdGVyZW90YWN0aWMgTVJJIGFuZCBpQ0JDVC4gRm9yIGxvY2FsaXNhdGlvbiBjb21wYXJpc29uIG9mIGVsZWN0cm9kZSBjb250YWN0cywgc3RlcmVvdGFjdGljIGNvb3JkaW5hdGVzIG9mIGVsZWN0cm9kZSB0aXBzIHdlcmUgY29tcGFyZWQgYmV0d2VlbiB0aGUgcG9zdG9wZXJhdGl2ZSBtdWx0aWRldGVjdG9yIENUIGFuZCBpQ0JDVC5BIHRvdGFsIG9mIDIwIHBhdGllbnRzIHdlcmUgZXZhbHVhdGVkLiBUaGUgYXZlcmFnZSBhYnNvbHV0ZSBkaWZmZXJlbmNlIGluIHN0ZXJlb3RhY3RpYyBjb29yZGluYXRlcyBvZiBBQywgUEMsIGFuZCBNUiB3YXMgMC40wqDCscKgMC40IG1tIGZvciBYLCAwLjTCoMKxwqAwLjQgbW0gZm9yIFksIGFuZCAwLjfCoMKxIDAuNSBtbSBmb3IgWi4gVGhlIGF2ZXJhZ2UgYWJzb2x1dGUgZGlmZmVyZW5jZSBpbiBYLSwgWS0sIGFuZCBaLWNvb3JkaW5hdGVzIGZvciBlbGVjdHJvZGUgbG9jYWxpc2F0aW9uIChOwqA9wqAzNCkgd2FzIDAuM8KgwrHCoDAuMyBtbSwgMC42wqDCscKgMC4zIG1tLCBhbmQgMC42wqDCscKgMC42IG1tLiBUaGVzZSBkaWZmZXJlbmNlcyB3ZXJlIHNtYWxsIGVub3VnaCBub3QgdG8gYmUgY29uc2lkZXJlZCBjbGluaWNhbGx5IHJlbGV2YW50LlN0ZXJlb3RhY3RpYyBNUkkgYW5kIE8tYXJtIGlDQkNUIHlpZWxkIGNvbXBhcmFibGUgY29vcmRpbmF0ZXMgaW4gcHJlLSBhbmQgcG9zdG9wZXJhdGl2ZSBpbWFnaW5nLiBEaWZmZXJlbmNlcyBmb3VuZCBhcmUgYmVsb3cgdGhlIHRocmVzaG9sZCBvZiBjbGluaWNhbCByZWxldmFuY2UuIEludHJhb3BlcmF0aXZlIE8tYXJtIENCQ1Qgb2ZmZXJzIHJhcGlkIHN0ZXJlb3RhY3RpYyByZWdpc3RyYXRpb24gYW5kIGV2YWx1YXRpb24gb2YgZWxlY3Ryb2RlIHBsYWNlbWVudC4gVGhpcyBpbmNyZWFzZXMgcGF0aWVudCBjb21mb3J0IGFuZCBuZXVyb3N1cmdpY2FsIHdvcmtmbG93IGVmZmljaWVuY3kuIiwiZXhlY0NvbmZpZ0lkIjo3NzIxLCJpc1Jldmlld2VkIjpmYWxzZSwiY29tbWVudCI6bnVsbCwiaXNBdHRhY2htZW50IjpmYWxzZSwic2lnbmFsIjpbXX0seyJpZCI6NzkzMywiYWxlcnROYW1lIjoiTGl0UGVyZjEiLCJwcmlvcml0eSI6eyJ2YWx1ZSI6IlVyZ2VudCIsImljb25DbGFzcyI6Im1kaSBtZGktYWxwaGEtdS1jaXJjbGUgcmVkLTEifSwidGl0bGUiOiJUaGUgRWZmZWN0IG9mIFNlbGYtQ2FyZSBQcm9ncmFtIEJhc2VkIG9uIE1vZGVsaW5nIGFuZCBSb2xlIE1vZGVsaW5nIFRoZW9yeSBvbiBCb2R5IEltYWdlIE51cnR1cmFuY2UgaW4gUGF0aWVudHMgV2l0aCBDb2xvcmVjdGFsIENhbmNlcjogQSBSYW5kb21pemVkIENsaW5pY2FsIFRyaWFsLiIsImF1dGhvcnMiOiJbUm95YSwgUGFremFkIEtoYWxpbGFiYWRdW05haGlkLCBBZ2hlYmF0aV1bSGFtaWQgUmV6YSwgQmVobmFtIFZhc2hhbmldIiwiYXNzaWduZWRUbyI6eyJpZCI6NzQzNSwiZnVsbE5hbWUiOiJiaGFneWEiLCJ1c2VybmFtZSI6ImJoYWd5YSIsImVtYWlsIjoiTlIuQmhhZ3lhbGFrc2htaUByeGxvZ2l4LmNvbSJ9LCJwdWJsaWNhdGlvbkRhdGUiOiIxMi1NYXktMjAyMCIsImRpc3Bvc2l0aW9uIjoiTmV3IiwicHJvZHVjdE5hbWUiOiJXSE8tRElBTUlDUk9OIE1SIiwiZXZlbnROYW1lIjpudWxsLCJhY3Rpb25Db3VudCI6MCwiaXNWYWxpZGF0aW9uU3RhdGVBY2hpZXZlZCI6ZmFsc2UsImFsZXJ0VGFncyI6W10sImFsZXJ0Q29uZmlnSWQiOjc2OTAsImFydGljbGVJZCI6IjMyNDA0NzIzIiwiYXJ0aWNsZUFic3RyYWN0IjoiT25lIG9mIHRoZSBtb3N0IGNyaXRpY2FsIGRpc29yZGVycyBhbW9uZyBwYXRpZW50cyB3aXRoIGNvbG9yZWN0YWwgY2FuY2VyIGlzIGEgY2hhbmdlIGluIHRoZWlyIGJvZHkgaW1hZ2UuIFRoaXMgc3R1ZHkgYWltZWQgdG8gZXhhbWluZSB0aGUgZWZmZWN0IG9mIGEgc2VsZi1jYXJlIHByb2dyYW0gYmFzZWQgb24gdGhlIG1vZGVsaW5nIGFuZCByb2xlLW1vZGVsaW5nIHRoZW9yeSBvbiBudXJ0dXJpbmcgYm9keSBpbWFnZSBvZiBwYXRpZW50cyB3aXRoIGNvbG9yZWN0YWwgY2FuY2VyLiBJbiAyMDE4LCBhIDItZ3JvdXAgcmFuZG9taXplZCBjbGluaWNhbCB0cmlhbCB3YXMgY29uZHVjdGVkIGluIE1hc2hoYWQsIElyYW4uIEFjY29yZGluZyB0byB0aGUgbW9kZWxpbmcgYW5kIHJvbGUtbW9kZWxpbmcgdGhlb3J5LCAyNyBwYXRpZW50cyBhbGxvY2F0ZWQgaW4gdGhlIGV4cGVyaW1lbnRhbCBncm91cCByZWNlaXZlZCBmaXZlIDMwLSB0byA0NS1taW51dGUgc2Vzc2lvbnMgYXQgdGhlIGhvc3BpdGFsIGFuZCA0IHNlc3Npb25zIG9mIHBob25lIGNvdW5zZWxpbmcgd2l0aGluIDIgd2Vla3MuIFR3ZW50eS1zZXZlbiBwYXRpZW50cyByYW5kb21seSBhbGxvY2F0ZWQgaW4gdGhlIGNvbnRyb2wgZ3JvdXAgcmVjZWl2ZWQgdGhlIHJvdXRpbmUgY2FyZS4gRGF0YSB3ZXJlIGNvbGxlY3RlZCBieSBkZW1vZ3JhcGhpYyBhbmQgYm9keSBpbWFnZSBzY2FsZXMgMyB0aW1lcyB3aXRoIHRoZSBwYXRpZW50cy4gVGhlIG1lYW4gYWdlIG9mIHRoZSBwYXRpZW50cyBpbiBleHBlcmltZW50YWwgYW5kIGNvbnRyb2wgZ3JvdXBzIHdhcyBub3Qgc2lnbmlmaWNhbnRseSBkaWZmZXJlbnQgKFAgPSAuNDYpLiBUaGUgbWVhbiBzY29yZXMgb2YgdGhlIGJvZHkgaW1hZ2UgYXQgdGhlIGFkbWlzc2lvbiB0aW1lIHdlcmUgMjYuOCDCsSAyLjYgaW4gdGhlIGV4cGVyaW1lbnRhbCBhbmQgMjcuOSDCsSAzLjEgaW4gY29udHJvbCBncm91cHMgKFAgPSAuMTIpLiBIb3dldmVyLCB0aGUgbWVhbiBzY29yZXMgb2YgYm9keSBpbWFnZSBvZiB0aGUgZXhwZXJpbWVudGFsIGdyb3VwIHdlcmUgMjQuMyDCsSA0LjYgYXQgdGhlIGRpc2NoYXJnZSB0aW1lIGFuZCAyOC4xIMKxIDIuMSBkdXJpbmcgdGhlIGZvbGxvdy11cCBwaGFzZS4gSW4gdGhlIGNvbnRyb2wgZ3JvdXAsIHRoZSBib2R5IGltYWdlIHNjb3JlcyB3ZXJlIDIxLjAgwrEgNS42IGF0IGRpc2NoYXJnZSB0aW1lIGFuZCAyMi45IMKxIDYuMSBkdXJpbmcgdGhlIGZvbGxvdy11cCBwaGFzZS4gUmVwZWF0ZWQtbWVhc3VyZXMgYW5hbHlzaXMgb2YgdmFyaWFuY2UgcmV2ZWFsZWQgc2lnbmlmaWNhbnQgZGlmZmVyZW5jZXMgYmV0d2VlbiB0aGUgMiBncm91cHMgKFAg4omkIC4wMDEpLiBBcHBsaWNhdGlvbiBvZiB0aGUgc2VsZi1jYXJlIHByb2dyYW0gYmFzZWQgb24gdGhlIG1vZGVsaW5nIGFuZCByb2xlLW1vZGVsaW5nIHRoZW9yeSBjYW4gcGxheSBhIGNyaXRpY2FsIHJvbGUgaW4gbnVydHVyaW5nIHRoZSBib2R5IGltYWdlIG9mIHBhdGllbnRzIHdpdGggY29sb3JlY3RhbCBjYW5jZXIuIiwiZXhlY0NvbmZpZ0lkIjo3NzIxLCJpc1Jldmlld2VkIjpmYWxzZSwiY29tbWVudCI6bnVsbCwiaXNBdHRhY2htZW50IjpmYWxzZSwic2lnbmFsIjpbXX0seyJpZCI6Nzk2NiwiYWxlcnROYW1lIjoiTGl0UGVyZjEiLCJwcmlvcml0eSI6eyJ2YWx1ZSI6IlVyZ2VudCIsImljb25DbGFzcyI6Im1kaSBtZGktYWxwaGEtdS1jaXJjbGUgcmVkLTEifSwidGl0bGUiOiJFbmRvdmFzY3VsYXIgVHJlYXRtZW50IGZvciBBY3V0ZSBJc2NoZW1pYyBTdHJva2UgaW4gUGF0aWVudHMgb24gT3JhbCBBbnRpY29hZ3VsYW50czogUmVzdWx0cyBGcm9tIHRoZSBNUiBDTEVBTiBSZWdpc3RyeS4iLCJhdXRob3JzIjoiW1JvYmVydC1KYW4gQiwgR29sZGhvb3JuXVtSb2IgQSwgdmFuIGRlIEdyYWFmXVtKYW4gTSwgdmFuIFJlZXNdW0hlc3RlciBGLCBMaW5nc21hXVtEaWVkZXJpayBXIEosIERpcHBlbF1bV291dGVyIEgsIEhpbnNlbnZlbGRdW0FsaWRhLCBQb3N0bWFdW0lkbywgdmFuIGRlbiBXaWpuZ2FhcmRdW1dpbSBILCB2YW4gWndhbV1bUm9iZXJ0IEosIHZhbiBPb3N0ZW5icnVnZ2VdW0JvYiwgUm9vemVuYmVla11bXSIsImFzc2lnbmVkVG8iOnsiaWQiOjc0MzUsImZ1bGxOYW1lIjoiYmhhZ3lhIiwidXNlcm5hbWUiOiJiaGFneWEiLCJlbWFpbCI6Ik5SLkJoYWd5YWxha3NobWlAcnhsb2dpeC5jb20ifSwicHVibGljYXRpb25EYXRlIjoiMTEtTWF5LTIwMjAiLCJkaXNwb3NpdGlvbiI6Ik5ldyIsInByb2R1Y3ROYW1lIjoiV0hPLURJQU1JQ1JPTiBNUiIsImV2ZW50TmFtZSI6bnVsbCwiYWN0aW9uQ291bnQiOjAsImlzVmFsaWRhdGlvblN0YXRlQWNoaWV2ZWQiOmZhbHNlLCJhbGVydFRhZ3MiOltdLCJhbGVydENvbmZpZ0lkIjo3NjkwLCJhcnRpY2xlSWQiOiIzMjM5MDU1MCIsImFydGljbGVBYnN0cmFjdCI6IkJhY2tncm91bmQgYW5kIFB1cnBvc2UtIFRoZSB1c2Ugb2Ygb3JhbCBhbnRpY29hZ3VsYW50cyAoT0FDKSBpcyBjb25zaWRlcmVkIGEgY29udHJhLWluZGljYXRpb24gZm9yIGludHJhdmVub3VzIHRocm9tYm9seXRpY3MgYXMgYWN1dGUgdHJlYXRtZW50IG9mIGlzY2hlbWljIHN0cm9rZS4gSG93ZXZlciwgbGl0dGxlIGlzIGtub3duIGFib3V0IHRoZSByaXNrcyBhbmQgYmVuZWZpdHMgb2YgZW5kb3Zhc2N1bGFyIHRyZWF0bWVudCBpbiBwYXRpZW50cyBvbiBwcmlvciBPQUMuIFdlIGFpbSB0byBjb21wYXJlIG91dGNvbWVzIGFmdGVyIGVuZG92YXNjdWxhciB0cmVhdG1lbnQgYmV0d2VlbiBwYXRpZW50cyB3aXRoIGFuZCB3aXRob3V0IHByaW9yIHVzZSBvZiBPQUMuIE1ldGhvZHMtIERhdGEgb2YgcGF0aWVudHMgd2l0aCBhY3V0ZSBpc2NoZW1pYyBzdHJva2UgY2F1c2VkIGJ5IGFuIGludHJhY3JhbmlhbCBhbnRlcmlvciBjaXJjdWxhdGlvbiBvY2NsdXNpb24sIGluY2x1ZGVkIGluIHRoZSBuYXRpb253aWRlLCBwcm9zcGVjdGl2ZSwgTVIgQ0xFQU4gUmVnaXN0cnkgYmV0d2VlbiBNYXJjaCAyMDE0IGFuZCBOb3ZlbWJlciAyMDE3LCB3ZXJlIGFuYWx5emVkLiBPdXRjb21lcyBvZiBpbnRlcmVzdCBpbmNsdWRlZCBzeW1wdG9tYXRpYyBpbnRyYWNyYW5pYWwgaGVtb3JyaGFnZSBhbmQgZnVuY3Rpb25hbCBvdXRjb21lIGF0IDkwIGRheXMgKG1vZGlmaWVkIFJhbmtpbiBTY2FsZSBzY29yZSkuIE91dGNvbWVzIGJldHdlZW4gZ3JvdXBzIHdlcmUgY29tcGFyZWQgd2l0aCAob3JkaW5hbCkgbG9naXN0aWMgcmVncmVzc2lvbiBhbmFseXNlcywgYWRqdXN0ZWQgZm9yIHByb2dub3N0aWMgZmFjdG9ycy4gUmVzdWx0cy0gVGhyZWUgdGhvdXNhbmQgb25lIGh1bmRyZWQgc2l4dHktdHdvIHBhdGllbnRzIHdlcmUgaW5jbHVkZWQgaW4gdGhpcyBzdHVkeSwgb2Ygd2hvbSA1MDIgKDE2JSkgdXNlZCBPQUMuIFRoZXJlIHdhcyBubyBzaWduaWZpY2FudCBkaWZmZXJlbmNlIGluIHRoZSBvY2N1cnJlbmNlIG9mIHN5bXB0b21hdGljIGludHJhY3JhbmlhbCBoZW1vcnJoYWdlIGJldHdlZW4gcGF0aWVudHMgd2l0aCBhbmQgd2l0aG91dCBwcmlvciBPQUNzICg1JSB2ZXJzdXMgNiU7IGFkanVzdGVkIG9kZHMgcmF0aW8sIDAuNjMgWzk1JSBDSSwgMC4zOC0xLjA2XSkuIFBhdGllbnRzIG9uIE9BQ3MgaGFkIHdvcnNlIGZ1bmN0aW9uYWwgb3V0Y29tZXMgdGhhbiBwYXRpZW50cyB3aXRob3V0IE9BQ3MgKGNvbW1vbiBvZGRzIHJhdGlvLCAwLjU3IFs5NSUgQ0ksIDAuNDctMC42Nl0pLiBIb3dldmVyLCB0aGlzIG9ic2VydmVkIGRpZmZlcmVuY2UgaW4gZnVuY3Rpb25hbCBvdXRjb21lIGRpc2FwcGVhcmVkIGFmdGVyIGFkanVzdG1lbnQgZm9yIHByb2dub3N0aWMgZmFjdG9ycyAoYWRqdXN0ZWQgY29tbW9uIG9kZHMgcmF0aW8sIDAuOTEgWzk1JSBDSSwgMC43NC0xLjEzXSkuIENvbmNsdXNpb25zLSBQcmlvciBPQUMgdXNlIGluIHBhdGllbnRzIHRyZWF0ZWQgd2l0aCBlbmRvdmFzY3VsYXIgdHJlYXRtZW50IGZvciBpc2NoZW1pYyBzdHJva2UgaXMgbm90IGFzc29jaWF0ZWQgd2l0aCBhbiBpbmNyZWFzZWQgcmlzayBvZiBzeW1wdG9tYXRpYyBpbnRyYWNyYW5pYWwgaGVtb3JyaGFnZSBvciB3b3JzZSBmdW5jdGlvbmFsIG91dGNvbWUgY29tcGFyZWQgd2l0aCBubyBwcmlvciBPQUMgdXNlLiBUaGVyZWZvcmUsIHByaW9yIE9BQyB1c2Ugc2hvdWxkIG5vdCBiZSBhIGNvbnRyYS1pbmRpY2F0aW9uIGZvciBlbmRvdmFzY3VsYXIgdHJlYXRtZW50LiIsImV4ZWNDb25maWdJZCI6NzcyMSwiaXNSZXZpZXdlZCI6ZmFsc2UsImNvbW1lbnQiOm51bGwsImlzQXR0YWNobWVudCI6ZmFsc2UsInNpZ25hbCI6W119LHsiaWQiOjgwMTAsImFsZXJ0TmFtZSI6IkxpdFBlcmYxIiwicHJpb3JpdHkiOnsidmFsdWUiOiJVcmdlbnQiLCJpY29uQ2xhc3MiOiJtZGkgbWRpLWFscGhhLXUtY2lyY2xlIHJlZC0xIn0sInRpdGxlIjoiUGVsdmljIFRpbHQgYW5kIFJhbmdlIG9mIE1vdGlvbiBpbiBIaXBzIFdpdGggRmVtb3JvYWNldGFidWxhciBJbXBpbmdlbWVudCBTeW5kcm9tZS4iLCJhdXRob3JzIjoiW1Jpa2luIFYsIFBhdGVsXVtTaHV5YW5nLCBIYW5dW0NocmlzdG9waGVyLCBMZW5oZXJyXVtKb3NodWEgRCwgSGFycmlzXVtQaGlsaXAgQywgTm9ibGVdIiwiYXNzaWduZWRUbyI6eyJpZCI6NzQzNSwiZnVsbE5hbWUiOiJiaGFneWEiLCJ1c2VybmFtZSI6ImJoYWd5YSIsImVtYWlsIjoiTlIuQmhhZ3lhbGFrc2htaUByeGxvZ2l4LmNvbSJ9LCJwdWJsaWNhdGlvbkRhdGUiOiIxNS1NYXktMjAyMCIsImRpc3Bvc2l0aW9uIjoiTmV3IiwicHJvZHVjdE5hbWUiOiJXSE8tRElBTUlDUk9OIE1SIiwiZXZlbnROYW1lIjpudWxsLCJhY3Rpb25Db3VudCI6MCwiaXNWYWxpZGF0aW9uU3RhdGVBY2hpZXZlZCI6ZmFsc2UsImFsZXJ0VGFncyI6W10sImFsZXJ0Q29uZmlnSWQiOjc2OTAsImFydGljbGVJZCI6IjMxNTk5NzY0IiwiYXJ0aWNsZUFic3RyYWN0IjoiUGh5c2lvdGhlcmFweSBpcyBhIG1hbmFnZW1lbnQgb3B0aW9uIGZvciB0aGUgdHJlYXRtZW50IG9mIGZlbW9yb2FjZXRhYnVsYXIgaW1waW5nZW1lbnQgKEZBSSkgc3luZHJvbWUuIFRoaXMgc3R1ZHkgZXhhbWluZXMgdGhlIGluZmx1ZW5jZSBvZiBjaGFuZ2VzIGluIHBlbHZpYyB0aWx0IGFuZCBoaXAgYWRkdWN0aW9uIG9uIHRoZSByYW5nZSBvZiBtb3Rpb24gKFJPTSkgb2YgdGhlIGhpcC5UZW4gRkFJIGhpcHMgd2VyZSB1c2VkIHRvIHNpbXVsYXRlIGltcGluZ2VtZW50IGF0IHR3byBwb3NpdGlvbnM6ICgxKSAyMMKwIGludGVybmFsIHJvdGF0aW9uIChJUikgd2l0aCAxMDDCsCBmbGV4aW9uIGFuZCAxMMKwIGFkZHVjdGlvbiBhbmQgKDIpIDQwwrAgSVIgd2l0aCAzNcKwIGZsZXhpb24gYW5kIDEwwrAgYWRkdWN0aW9uOyB0aGUgYW1vdW50IG9mIElSIHdhcyBtZWFzdXJlZCBhdCB0aGUgcG9pbnQgb2YgYm9ueSBpbXBpbmdlbWVudCBvciB0byB0aGUgZGVmaW5lZCBsaW1pdC4gRWFjaCBzaW11bGF0aW9uIHdhcyBwZXJmb3JtZWQgYXQgbmV1dHJhbCBhbmQgNcKwIGFuZCAxMMKwIGFudGVyaW9yIGFuZCBwb3N0ZXJpb3IgcGVsdmljIHRpbHQuIFRoZW4sIHRoZSBoaXAgd2FzIHBsYWNlZCBpbiAxMMKwIG9mIGFiZHVjdGlvbiwgYW5kIGFsbCBzaW11bGF0aW9ucyB3ZXJlIHJlcGVhdGVkLldpdGggbmV1dHJhbCBwZWx2aWMgdGlsdCwgaW1waW5nZW1lbnQgb2NjdXJyZWQgYXQgNC4zIMKxIDguNMKwIG9mIElSIGF0IHRoZSBoaWdoLWZsZXhpb24gcG9zaXRpb24uIEFuIGluY3JlYXNlIGluIGFudGVyaW9yIHBlbHZpYyB0aWx0IGxlZCB0byBhIGxvc3Mgb2YgSVIsIHRoYXQgaXMsIGVhcmxpZXIgb2NjdXJyZW5jZSBvZiBGQUksIHdoZXJlYXMgYW4gaW5jcmVhc2UgaW4gcG9zdGVyaW9yIHBlbHZpYyB0aWx0IGxlZCB0byBhbiBpbmNyZWFzZSBpbiBJUiwgdGhhdCBpcywgbGF0ZXIgb2NjdXJyZW5jZSBvZiBGQUkuIEF0IHRoZSBoaWdoLWZsZXhpb24gcG9zaXRpb24sIGFiZHVjdGlvbiBwcm92aWRlZCBtb3JlIElSIGJlZm9yZSBpbXBpbmdlbWVudCAobmV1dHJhbDogOS4xIMKxIDUuN8KwLCBQIDwgMC4wMTsgMTDCsCBhbnRlcmlvciB0aWx0OiAxNC42IMKxIDUuMsKwLCBQIDwgMC4wMTsgMTDCsCBwb3N0ZXJpb3IgdGlsdDogNC4yIMKxIDMuN8KwIElSLCBQID0gMC4wMSkuIFBsYWNpbmcgdGhlIGhpcCBpbiBhYmR1Y3Rpb24gYW5kIHBvc3Rlcmlvcmx5IHRpbHRpbmcgdGhlIHBlbHZpcyBwcm9kdWNlIGEgY29tYmluZWQgZWZmZWN0IHRoYXQgaW5jcmVhc2VkIElSIHJlbGF0aXZlIHRvIHRoZSBuZXV0cmFsbHkgdGlsdGVkIHBlbHZpcyAoNcKwIHBvc3RlcmlvciB0aWx0OiAxMS40IMKxIDcuNsKwLCBQID0gMC4wMTsgMTDCsCBwb3N0ZXJpb3IgdGlsdDogMTIuOCDCsSA3LjbCsCwgUCA8IDAuMDEpLiBUaGUgUk9NIGluIHRoZSBtaWQtZmxleGlvbiBwb3NpdGlvbiB3YXMgbm90IGFmZmVjdGVkIGJ5IGFueSBjb21iaW5hdGlvbiBvZiBwZWx2aWMgdGlsdCBhbmQgaGlwIGFiZHVjdGlvbiBvciBhZGR1Y3Rpb24gKGF2ZXJhZ2UgSVI6IDM3LjQgwrEgNS4wwrAsIFAgPiAwLjA1KS5BYmR1Y3Rpb24gYW5kIHBvc3RlcmlvciBwZWx2aWMgdGlsdCBpbmNyZWFzZWQgdGhlIGltcGluZ2VtZW50LWZyZWUgUk9NIGluIHRoZSBoaXBzIHdpdGggRkFJLiBUaHVzLCByZWhhYmlsaXRhdGlvbiBhaW1lZCBhdCBhbHRlcmluZyB0aGUgdGlsdCBvZiB0aGUgcGVsdmlzIG1heSByZWR1Y2UgdGhlIGZyZXF1ZW5jeSBvZiBpbXBpbmdlbWVudCBhbmQgbGltaXQgZnVydGhlciBqb2ludCBkYW1hZ2UuIiwiZXhlY0NvbmZpZ0lkIjo3NzIxLCJpc1Jldmlld2VkIjpmYWxzZSwiY29tbWVudCI6bnVsbCwiaXNBdHRhY2htZW50IjpmYWxzZSwic2lnbmFsIjpbXX0seyJpZCI6ODY3NSwiYWxlcnROYW1lIjoiUGVyZlRlc3Q0IiwicHJpb3JpdHkiOnsidmFsdWUiOiJNZWRpdW0iLCJpY29uQ2xhc3MiOiJtZGkgbWRpLWFscGhhLW0tY2lyY2xlIGJsdWUtMSJ9LCJ0aXRsZSI6Ikh5cG9uYXRyZW1pYSBwcmVzZW50aW5nIHdpdGggaG91cmx5IGZsdWN0dWF0aW5nIHVyaW5lIG9zbW9sYWxpdHkuIiwiYXV0aG9ycyI6IltSYWt1LCBTb25dW01hc2FoaWtvLCBOYWdhaGFtYV1bRnVtaWFraSwgVGFuZW1vdG9dW1l1Z28sIEl0b11bRnVtaWthLCBUYWtpXVtSeW9zdWtlLCBUc3VnaXRvbWldW01hc2Fha2ksIE5ha2F5YW1hXSIsImFzc2lnbmVkVG8iOnsiaWQiOjY1NzgsImZ1bGxOYW1lIjoiQWRtaW4iLCJuYW1lIjoiQWRtaW4ifSwicHVibGljYXRpb25EYXRlIjoiMTMtTWF5LTIwMjAiLCJkaXNwb3NpdGlvbiI6Ik5ldyIsInByb2R1Y3ROYW1lIjoiUEFSQUNFVEFNT0wiLCJldmVudE5hbWUiOm51bGwsImFjdGlvbkNvdW50IjowLCJpc1ZhbGlkYXRpb25TdGF0ZUFjaGlldmVkIjpmYWxzZSwiYWxlcnRUYWdzIjpbXSwiYWxlcnRDb25maWdJZCI6ODYwMiwiYXJ0aWNsZUlkIjoiMzI0MDgyNzEiLCJhcnRpY2xlQWJzdHJhY3QiOiJUaGUgZXRpb2xvZ3kgb2YgaHlwb25hdHJlbWlhIGlzIGFzc2Vzc2VkIGJhc2VkIG9uIHVyaW5lIG9zbW9sYWxpdHkgYW5kIHNvZGl1bS4gV2UgaGVyZWluIGRlc2NyaWJlIGEgMzUteWVhci1vbGQgQXNpYW4gbWFuIHdpdGggcHVsbW9uYXJ5IHR1YmVyY3Vsb3NpcyBhbmQgcGVyZm9yYXRlZCBkdW9kZW5hbCB1bGNlciB3aG8gcHJlc2VudGVkIHdpdGggaHlwb25hdHJlbWlhIHdpdGggaG91cmx5IGZsdWN0dWF0aW5nIHVyaW5lIG9zbW9sYWxpdHkgcmFuZ2luZyBmcm9tIDEwMCB0byA2MDAgbW9zbW9sL2tnLCB3aGljaCByZXNlbWJsZWQgdXJpbmUgb3Ntb2xhbGl0eSBvYnNlcnZlZCBpbiB0eXBpY2FsIHBvbHlkaXBzaWEgYW5kIFNJQURIIHNpbXVsdGFuZW91c2x5LiBGdXJ0aGVyIHJldmlldyByZXZlYWxlZCBjb3JyZWxhdGlvbiBvZiBib2R5IHRlbXBlcmF0dXJlIGFuZCB1cmluZSBvc21vbGFsaXR5LiBTaW5jZSBmZXZlciBpcyBhIGtub3duIG5vbi1vc21vdGljIHN0aW11bHVzIG9mIEFESCBzZWNyZXRpb24sIHdlIHRoZW9yaXplZCB0aGF0IGh5cG9uYXRyZW1pYSBpbiB0aGlzIHBhdGllbnQgd2FzIGR1ZSB0byB0cmFuc2llbnQgQURIIHNlY3JldGlvbiBkdWUgdG8gZmV2ZXIuIEluIG91ciBjYXNlLCBlbXBpcmljIGV4b2dlbm91cyBnbHVjb2NvcnRpY29pZCBzdXBwcmVzc2VkIHRyYW5zaWVudCBub24tb3Ntb3RpYyBBREggc2VjcmV0aW9uIGFuZCB1cmluZSBvc21vbGFsaXR5IHNob3dlZCBoaWdobHkgdmFyaWFibGUgY29uY2VudHJhdGlvbnMuIFRyYW5zaWVudCBBREggc2VjcmV0aW9uLXJlbGF0ZWQgaHlwb25hdHJlbWlhIG1heSBiZSB1bmRlcnJlY29nbml6ZWQgZHVlIHRvIG9jY2FzaW9uYWwgZW1waXJpYyBnbHVjb2NvcnRpY29pZCBhZG1pbmlzdHJhdGlvbiBpbiBwYXRpZW50cyB3aXRoIGNyaXRpY2FsIGlsbG5lc3Nlcy4gUmVwZWF0ZWRseSBtb25pdG9yaW5nIG9mIHVyaW5lIGNoZW1pc3RyaWVzIGFuZCBpbnRlcnByZXRhdGlvbiBvZiB1cmluZSBjaGVtaXN0cmllcyB3aXRoIGNhcmVmdWwgcmV2aWV3IG9mIG5vbi1vc21vdGljIHN0aW11bGkgb2YgQURIIGluY2x1ZGluZyBmZXZlciBpcyBjcnVjaWFsIGluIHJlY29nbml0aW9uIG9mIHRoaXMgZXRpb2xvZ3kuSG91cmx5IGZsdWN0dWF0aW9ucyBpbiB1cmluZSBvc21vbGFsaXR5IGNhbiBiZSBvYnNlcnZlZCBpbiBwYXRpZW50cyB3aXRoIGZldmVyLCB3aGljaCBpcyBhIG5vbi1vc21vdGljIHN0aW11bGFudCBvZiBBREggc2VjcmV0aW9uLiBSZXBlYXRlZCBtb25pdG9yaW5nIG9mIHVyaW5lIGNoZW1pc3RyaWVzIGFpZHMgaW4gdGhlIGRpYWdub3NpcyBvZiB0aGUgZXRpb2xvZ3kgdW5kZXJseWluZyBoeXBvbmF0cmVtaWEsIGluY2x1ZGluZyBmZXZlciwgaW4gcGF0aWVudHMgd2l0aCB0cmFuc2llbnQgQURIIHNlY3JldGlvbi4gR2x1Y29jb3J0aWNvaWQgYWRtaW5pc3RyYXRpb24gc3VwcHJlc3NlcyBBREggc2VjcmV0aW9uIGFuZCBpbXByb3ZlcyBoeXBvbmF0cmVtaWEgZXZlbiBpbiB0aGUgYWJzZW5jZSBvZiBhZHJlbmFsIGluc3VmZmljaWVuY3k7IHRoZSBldGlvbG9neSBvZiBoeXBvbmF0cmVtaWEgc2hvdWxkIGJlIGRldGVybWluZWQgY2FyZWZ1bGx5IGluIHRoZXNlIHBhdGllbnRzLiIsImV4ZWNDb25maWdJZCI6ODYzMywiaXNSZXZpZXdlZCI6ZmFsc2UsImNvbW1lbnQiOm51bGwsImlzQXR0YWNobWVudCI6ZmFsc2UsInNpZ25hbCI6W119LHsiaWQiOjc5NTMsImFsZXJ0TmFtZSI6IkxpdFBlcmYxIiwicHJpb3JpdHkiOnsidmFsdWUiOiJVcmdlbnQiLCJpY29uQ2xhc3MiOiJtZGkgbWRpLWFscGhhLXUtY2lyY2xlIHJlZC0xIn0sInRpdGxlIjoiVHVtb3IgbWljcm9lbnZpcm9ubWVudC1yZXNwb25zaXZlIHBvbHlkb3BhbWluZS1iYXNlZCBjb3JlL3NoZWxsIG5hbm9wbGF0Zm9ybSBmb3Igc3luZXJnZXRpYyB0aGVyYW5vc3RpY3MuIiwiYXV0aG9ycyI6IltRaWFuLCBDaGVuXVtYdWVydSwgU2hhbl1bU3VxaW5nLCBTaGldW0NodW56aHUsIEppYW5nXVtUaW5naHVhLCBMaV1bU2hhbnNoYW4sIFdlaV1bWGlueXUsIFpoYW5nXVtHdW95aW5nLCBTdW5dW0ppYW5odWEsIExpdV0iLCJhc3NpZ25lZFRvIjp7ImlkIjo3NDM1LCJmdWxsTmFtZSI6ImJoYWd5YSIsInVzZXJuYW1lIjoiYmhhZ3lhIiwiZW1haWwiOiJOUi5CaGFneWFsYWtzaG1pQHJ4bG9naXguY29tIn0sInB1YmxpY2F0aW9uRGF0ZSI6IjE0LU1heS0yMDIwIiwiZGlzcG9zaXRpb24iOiJOZXciLCJwcm9kdWN0TmFtZSI6IldITy1ESUFNSUNST04gTVIiLCJldmVudE5hbWUiOm51bGwsImFjdGlvbkNvdW50IjowLCJpc1ZhbGlkYXRpb25TdGF0ZUFjaGlldmVkIjpmYWxzZSwiYWxlcnRUYWdzIjpbXSwiYWxlcnRDb25maWdJZCI6NzY5MCwiYXJ0aWNsZUlkIjoiMzIyNzAxNDUiLCJhcnRpY2xlQWJzdHJhY3QiOiJUaGVyYW5vc3RpYyBhZ2VudHMgdGhhdCBpbnRlZ3JhdGUgZGlhZ25vc3RpYyBhbmQgdGhlcmFwZXV0aWMgbW9kYWxpdGllcyBoYXZlIGRyYXduIGV4dGVuc2l2ZSBhdHRlbnRpb24gZHVlIHRvIHRoZWlyIGFiaWxpdHkgdG8gZGVsaXZlciByZWFsLXRpbWUgaW1hZ2luZy1ndWlkZWQgdHVtb3IgdHJlYXRtZW50LiBIZXJlaW4sIGEgbm92ZWwgY29yZS1zaGVsbCBwb2x5ZG9wYW1pbmUgKFBEQSktYmFzZWQgdGhlcmFub3N0aWMgYWdlbnQgKFBEQUBUQS1GZSkgd2FzIGZhYnJpY2F0ZWQgdmlhIGEgdHdvLXN0ZXAgc3RyYXRlZ3kuIFVwb24gODA4IG5tIGFuZCAxMDY0IG5tIGxhc2VyIGlycmFkaWF0aW9uLCB0aGlzIGFnZW50IGV4aGliaXRlZCBoaWdoIHBob3RvdGhlcm1hbCBjb252ZXJzaW9uIGVmZmljaWVuY2llcyBvZiAyOSUgYW5kIDQxJSwgcmVzcGVjdGl2ZWx5LiBBZnRlciBlbmRvY3l0b3NpcyBpbnRvIHR1bW9yIGNlbGxzLCB0aGUgVEEtRmUgc2hlbGwgb2YgUERBQFRBLUZlIGdyYWR1YWxseSBkaXNpbnRlZ3JhdGVkIGluIHRoZSB3ZWFrbHkgYWNpZGljIHR1bW9yIG1pY3JvZW52aXJvbm1lbnQgKFRNRSksIGFuZCByZWxlYXNlZCB0aGUgVEEgYXMgYW4gYWNpZGl0eS1hY3RpdmF0ZWQgcmVkdWN0YW50IHRoYXQgY291bGQgcmVkdWNlIEZlMysgdG8gRmUyKy4gU3Vic2VxdWVudGx5LCB0aGUgZ2VuZXJhdGVkIEZlMisgcmVhY3RlZCB3aXRoIEgyTzIgdG8gZ2VuZXJhdGUgdG94aWMgaHlkcm94eWwgcmFkaWNhbHMgKMuZT0gpIHZpYSB0aGUgRmVudG9uIHJlYWN0aW9uLCB3aGljaCBpbmR1Y2VkIHRoZSBhcG9wdG9zaXMgb2YgdHVtb3IgY2VsbHMgYW5kIGFjaGlldmVkIHRoZSBjaGVtb2R5bmFtaWMgdGhlcmFweSAoQ0RUKS4gVGhlIGhlYXQgcHJvZHVjZWQgYnkgcGhvdG90aGVybWFsIHRoZXJhcHkgKFBUVCkgYWNjZWxlcmF0ZWQgdGhlIMuZT0ggZ2VuZXJhdGlvbiB0byBhY2hpZXZlIGEgc3luZXJnZXRpYyBlZmZlY3Qgb2YgQ0RUL1BUVC4gSW4gdml2byB0dW1vci14ZW5vZ3JhZnQgaW1hZ2luZyBhbmQgdGhlcmFwZXV0aWMgYXNzYXlzIGRlbW9uc3RyYXRlZCBvYnZpb3VzIGNvbnRyYXN0IGVuaGFuY2VtZW50IGF0IHRoZSB0dW1vciBzaXRlIGluIHRoZSBUMS9UMi13ZWlnaHRlZCBNUiBpbWFnaW5nIGFuZCBlZmZpY2llbnQgdHVtb3Igc3VwcHJlc3Npb24gYWNoaWV2ZWQgYWZ0ZXIgdGhlIGludHJhdmVub3VzIGluamVjdGlvbiBvZiB0aGlzIGFnZW50IGJlY2F1c2Ugb2YgdGhlIGVuaGFuY2VkIHBlcm1lYXRpb24gYW5kIHJldGVudGlvbiAoRVBSKSBlZmZlY3QuIFRoaXMgc3R1ZHkgb2ZmZXJlZCBhIG5ldyBzdHJhdGVneSB0byBkZXNpZ24gYW4gXCJhbGwtaW4tb25lXCIgbmFub3BsYXRmb3JtIGZvciBUMS9UMiBNUiBpbWFnaW5nLWd1aWRlZCBzeW5lcmdpc3RpYyBjYW5jZXIgdHJlYXRtZW50IG9mIENEVC9QVFQuIiwiZXhlY0NvbmZpZ0lkIjo3NzIxLCJpc1Jldmlld2VkIjpmYWxzZSwiY29tbWVudCI6bnVsbCwiaXNBdHRhY2htZW50IjpmYWxzZSwic2lnbmFsIjpbXX0seyJpZCI6ODY2NSwiYWxlcnROYW1lIjoiUGVyZlRlc3Q0IiwicHJpb3JpdHkiOnsidmFsdWUiOiJNZWRpdW0iLCJpY29uQ2xhc3MiOiJtZGkgbWRpLWFscGhhLW0tY2lyY2xlIGJsdWUtMSJ9LCJ0aXRsZSI6IkFjZXRhbWlub3BoZW4gcG9pc29uaW5nOiByZWNsYWltaW5nIHRoZSBkZWZpbml0aW9uIG9mIHJlY292ZXJ5LiIsImF1dGhvcnMiOiJbUGhpbGlwIEMsIERpU2Fsdm9dW1dpbGxpYW0gSywgQ2hpYW5nXVtKb3NoIEosIFdhbmddIiwiYXNzaWduZWRUbyI6eyJpZCI6NjU3OCwiZnVsbE5hbWUiOiJBZG1pbiIsIm5hbWUiOiJBZG1pbiJ9LCJwdWJsaWNhdGlvbkRhdGUiOiIxMy1NYXktMjAyMCIsImRpc3Bvc2l0aW9uIjoiTmV3IiwicHJvZHVjdE5hbWUiOiJQQVJBQ0VUQU1PTCIsImV2ZW50TmFtZSI6bnVsbCwiYWN0aW9uQ291bnQiOjAsImlzVmFsaWRhdGlvblN0YXRlQWNoaWV2ZWQiOmZhbHNlLCJhbGVydFRhZ3MiOltdLCJhbGVydENvbmZpZ0lkIjo4NjAyLCJhcnRpY2xlSWQiOiIzMjQwMDIxNyIsImFydGljbGVBYnN0cmFjdCI6Ii0iLCJleGVjQ29uZmlnSWQiOjg2MzMsImlzUmV2aWV3ZWQiOmZhbHNlLCJjb21tZW50IjpudWxsLCJpc0F0dGFjaG1lbnQiOmZhbHNlLCJzaWduYWwiOltdfSx7ImlkIjo3ODcxLCJhbGVydE5hbWUiOiJMaXRQZXJmMSIsInByaW9yaXR5Ijp7InZhbHVlIjoiVXJnZW50IiwiaWNvbkNsYXNzIjoibWRpIG1kaS1hbHBoYS11LWNpcmNsZSByZWQtMSJ9LCJ0aXRsZSI6Ik5ldXJvY29nbml0aXZlIHJlY292ZXJ5IGFuZCBnbG9iYWwgY2VyZWJyYWwgcGVyZnVzaW9uIGltcHJvdmVtZW50IGFmdGVyIGNyYW5pb3BsYXN0eSBpbiBjaHJvbmljIHNpbmtpbmcgc2tpbiBmbGFwIHN5bmRyb21lIG9mIDE4wqB5ZWFyczogQ2FzZSByZXBvcnQgdXNpbmcgYXJ0ZXJpYWwgc3BpbiBsYWJlbGxpbmcgbWFnbmV0aWMgcmVzb25hbmNlIHBlcmZ1c2lvbiBpbWFnaW5nLiIsImF1dGhvcnMiOiJbUGV0ZXIgWWF0IE1pbmcsIFdvb11bQ2FsdmluIEhvaSBLd2FuLCBNYWtdW0hlbnJ5IEthIEZ1bmcsIE1ha11bQW5kZXJzb24gQ2h1biBPbiwgVHNhbmddIiwiYXNzaWduZWRUbyI6eyJpZCI6NzQzNSwiZnVsbE5hbWUiOiJiaGFneWEiLCJ1c2VybmFtZSI6ImJoYWd5YSIsImVtYWlsIjoiTlIuQmhhZ3lhbGFrc2htaUByeGxvZ2l4LmNvbSJ9LCJwdWJsaWNhdGlvbkRhdGUiOiIxMS1NYXktMjAyMCIsImRpc3Bvc2l0aW9uIjoiTmV3IiwicHJvZHVjdE5hbWUiOiJXSE8tRElBTUlDUk9OIE1SIiwiZXZlbnROYW1lIjpudWxsLCJhY3Rpb25Db3VudCI6MCwiaXNWYWxpZGF0aW9uU3RhdGVBY2hpZXZlZCI6ZmFsc2UsImFsZXJ0VGFncyI6W10sImFsZXJ0Q29uZmlnSWQiOjc2OTAsImFydGljbGVJZCI6IjMyNDA5MjE2IiwiYXJ0aWNsZUFic3RyYWN0IjoiU2lua2luZyBza2luIGZsYXAgc3luZHJvbWUgKFNTRlMpIGlzIGEgY29tcGxpY2F0aW9uIGFtb25nIGxvbmctdGVybSBzdXJ2aXZvcnMgb2Ygc3Ryb2tlIG9yIHRyYXVtYXRpYyBicmFpbiBpbmp1cnkgdHJlYXRlZCBieSBkZWNvbXByZXNzaXZlIGNyYW5pZWN0b215LiBUaGUgc3luZHJvbWUgZW5jb21wYXNzZXMgYSB3aWRlIHNwZWN0cnVtIG9mIG5ldXJvbG9naWNhbCBzeW1wdG9tcyBpbmNsdWRpbmcgY29nbml0aXZlIGRlY2xpbmUsIHNlaXp1cmVzLCBzcGVlY2ggYW5kIHNlbnNvcmltb3RvciBkZWZpY2l0cy4gRWFybHkgY3JhbmlvcGxhc3R5IGFwcGVhcnMgdG8gaW1wcm92ZSBjZXJlYnJhbCBwZXJmdXNpb24sIGJ1dCB0aGUgZWZmaWNhY3kgb2YgY3JhbmlvcGxhc3R5IGluIG5ldXJvY29nbml0aXZlIG91dGNvbWUgaW4gbG9uZy1zdGFuZGluZyBTU0ZTIHBhdGllbnQgaXMgdW5jbGVhci4gV2UgcmVwb3J0IGEgNjQteWVhci1vbGQgcGF0aWVudCB3aG8gc3VmZmVyZWQgZnJvbSB0cmF1bWF0aWMgYnJhaW4gaW5qdXJ5IGFuZCB1bmRlcndlbnQgZGVjb21wcmVzc2l2ZSBjcmFuaWVjdG9teSAxOMKgeWVhcnMgYWdvLiBTaGUgaGFkIGNocm9uaWMgU1NGUyB3aXRoIHByZS1jcmFuaW9wbGFzdHkgYXNzZXNzbWVudHMgZGVtb25zdHJhdGluZyBzZXZlcmUgbmV1cm9jb2duaXRpdmUgaW1wYWlybWVudHMgd2hpY2ggd2VyZSBzdGF0aWMgb3ZlciB0aW1lLiBBZnRlciBjcmFuaW9wbGFzdHkgd2l0aCBjdXN0b20tbWFkZSBwb2x5ZXRoZXJldGhlcmtldG9uZSBmbGFwIHRvIHJlc3RvcmUgdGhlIDI2NMKgY20yIHNrdWxsIGRlZmVjdCwgbWFnbmV0aWMgcmVzb25hbmNlIHBlcmZ1c2lvbiBzY2FuIHdpdGggcHNldWRvLWNvbnRpbnVvdXMgYXJ0ZXJpYWwgc3BpbiBsYWJlbGxpbmcgdGVjaG5pcXVlIHNob3dlZCBhIHR3by1mb2xkIGF1Z21lbnRhdGlvbiBvZiBjZXJlYnJhbCBibG9vZCBmbG93IGluIGJvdGggZnJvbnRhbCBsb2JlcywgYXMgd2VsbCBhcyBhcmVhcyBkaXN0YWwgdG8gdGhlIHN1bmtlbiBza2luIGZsYXAgY29tcGFyZWQgdG8gYmFzZWxpbmUuIFRoaXMgaXMgYWNjb21wYW5pZWQgYnkgaW1wcm92ZW1lbnQgb2YgbmV1cm9jb2duaXRpdmUgZnVuY3Rpb24gYXMgYXNzZXNzZWQgYnkgTW9udHJlYWwgQ29nbml0aXZlIEFzc2Vzc21lbnQsIE5ldXJvYmVoYXZpb3JhbCBDb2duaXRpdmUgU3RhdGUgRXhhbWluYXRpb24sIGFuZCBSaXZlcm1lYWQgQmVoYXZpb3VyYWwgTWVtb3J5IFRlc3QgdGhyZWUgYW5kIHNpeCBtb250aHMgYWZ0ZXIgY3JhbmlvcGxhc3R5LiBUaGUgcGF0aWVudCdzIHF1YWxpdHkgb2YgbGlmZSBhbmQgdGhhdCBvZiBoZXIgcHJpbWFyeSBjYXJlciBhbHNvIHNob3dlZCBpbXByb3ZlbWVudC4gVGhpcyByZXBvcnQgZGVzY3JpYmVzIGEgY2FzZSBvZiBuZXVyb2NvZ25pdGl2ZSBhbmQgZ2xvYmFsIGNlcmVicmFsIHBlcmZ1c2lvbiBpbXByb3ZlbWVudCBhZnRlciBjcmFuaW9wbGFzdHkgaW4gdGhlIHNldHRpbmcgb2YgcHJvbG9uZ2VkIFNGU1Mgb2YgMTjCoHllYXJzLCBhbmQgYWRkcyB0byB0aGUgZ3Jvd2luZyBib2R5IG9mIGxpdGVyYXR1cmUgc3VwcG9ydGluZyB0aGUgdGhlcmFwZXV0aWMgcm9sZSBvZiBjcmFuaW9wbGFzdHkgYmV5b25kIHB1cmVseSBwcm90ZWN0aXZlIG9yIGNvc21ldGljIGluZGljYXRpb25zLiBUaGUgYWR2YW50YWdlcyBhbmQgY2xpbmljYWwgdXRpbGl0eSBvZiBwQ0FTTCBNUiBwZXJmdXNpb24gaW4gYXNzZXNzaW5nIHNlcmlhbCBDQkYgYmVmb3JlIGFuZCBhZnRlciBjcmFuaW9wbGFzdHkgaXMgaWxsdXN0cmF0ZWQuIiwiZXhlY0NvbmZpZ0lkIjo3NzIxLCJpc1Jldmlld2VkIjpmYWxzZSwiY29tbWVudCI6bnVsbCwiaXNBdHRhY2htZW50IjpmYWxzZSwic2lnbmFsIjpbXX0seyJpZCI6Nzg2OCwiYWxlcnROYW1lIjoiTGl0UGVyZjEiLCJwcmlvcml0eSI6eyJ2YWx1ZSI6IlVyZ2VudCIsImljb25DbGFzcyI6Im1kaSBtZGktYWxwaGEtdS1jaXJjbGUgcmVkLTEifSwidGl0bGUiOiJQb2xveGFtZXI6IEEgdmVyc2F0aWxlIHRyaS1ibG9jayBjb3BvbHltZXIgZm9yIGJpb21lZGljYWwgYXBwbGljYXRpb25zLiIsImF1dGhvcnMiOiJbUGF5YW0sIFphcnJpbnRhal1bSm9zaHVhIEQsIFJhbXNleV1bQWxpLCBTYW1hZGldW1poYWxlaCwgQXRvdWZpXVtNb2hzZW4gS2hvZGFkYWRpLCBZYXpkaV1bTW9oYW1tYWQgUmV6YSwgR2FuamFsaV1bTGVpbGEgTW9oYW1tYWRpLCBBbWlyYWJhZF1bRWhzYW4sIFphbmdlbmVdW01laGRpLCBGYXJva2hpXVtLcnp5c3p0b2YsIEZvcm1lbGFdW01vaGFtbWFkIFJlemEsIFNhZWJdW01hc291ZCwgTW96YWZhcmldW1NhYnUsIFRob21hc10iLCJhc3NpZ25lZFRvIjp7ImlkIjo3NDM1LCJmdWxsTmFtZSI6ImJoYWd5YSIsInVzZXJuYW1lIjoiYmhhZ3lhIiwiZW1haWwiOiJOUi5CaGFneWFsYWtzaG1pQHJ4bG9naXguY29tIn0sInB1YmxpY2F0aW9uRGF0ZSI6IjE0LU1heS0yMDIwIiwiZGlzcG9zaXRpb24iOiJOZXciLCJwcm9kdWN0TmFtZSI6IldITy1ESUFNSUNST04gTVIiLCJldmVudE5hbWUiOm51bGwsImFjdGlvbkNvdW50IjowLCJpc1ZhbGlkYXRpb25TdGF0ZUFjaGlldmVkIjpmYWxzZSwiYWxlcnRUYWdzIjpbXSwiYWxlcnRDb25maWdJZCI6NzY5MCwiYXJ0aWNsZUlkIjoiMzI0MTcyNjUiLCJhcnRpY2xlQWJzdHJhY3QiOiJQb2xveGFtZXJzLCBhbHNvIGNhbGxlZCBQbHVyb25pYywgYmVsb25nIHRvIGEgdW5pcXVlIGNsYXNzIG9mIHN5bnRoZXRpYyB0cmktYmxvY2sgY29wb2x5bWVycyBjb250YWluaW5nIGNlbnRyYWwgaHlkcm9waG9iaWMgY2hhaW5zIG9mIHBvbHkocHJvcHlsZW5lIG94aWRlKSBzYW5kd2ljaGVkIGJldHdlZW4gdHdvIGh5ZHJvcGhpbGljIGNoYWlucyBvZiBwb2x5KGV0aHlsZW5lIG94aWRlKS4gU29tZSBjaGVtaWNhbCBjaGFyYWN0ZXJpc3RpY3Mgb2YgcG9sb3hhbWVycyBzdWNoIGFzIHRlbXBlcmF0dXJlLWRlcGVuZGVudCBzZWxmLWFzc2VtYmx5IGFuZCB0aGVybW8tcmV2ZXJzaWJsZSBiZWhhdmlvciBhbG9uZyB3aXRoIGJpb2NvbXBhdGliaWxpdHkgYW5kIHBoeXNpb2NoZW1pY2FsIHByb3BlcnRpZXMgbWFrZSBwb2xveGFtZXItYmFzZWQgYmlvbWF0ZXJpYWxzIHByb21pc2luZyBjYW5kaWRhdGVzIGZvciBiaW9tZWRpY2FsIGFwcGxpY2F0aW9uIHN1Y2ggYXMgdGlzc3VlIGVuZ2luZWVyaW5nIGFuZCBkcnVnIGRlbGl2ZXJ5LiBUaGUgbWljcm9zdHJ1Y3R1cmUsIGJpb2FjdGl2aXR5LCBhbmQgbWVjaGFuaWNhbCBwcm9wZXJ0aWVzIG9mIHBvbG94YW1lcnMgY2FuIGJlIHRhaWxvcmVkIHRvIG1pbWljIHRoZSBiZWhhdmlvciBvZiB2YXJpb3VzIHR5cGVzIG9mIHRpc3N1ZXMuIE1vcmVvdmVyLCB0aGVpciBhbXBoaXBoaWxpYyBuYXR1cmUgYW5kIHRoZSBwb3RlbnRpYWwgdG8gc2VsZi1hc3NlbWJsZSBpbnRvIHRoZSBtaWNlbGxlcyBtYWtlIHRoZW0gcHJvbWlzaW5nIGRydWcgY2FycmllcnMgd2l0aCB0aGUgYWJpbGl0eSB0byBpbXByb3ZlIHRoZSBkcnVnIGF2YWlsYWJpbGl0eSB0byBtYWtlIGNhbmNlciBjZWxscyBtb3JlIHZ1bG5lcmFibGUgdG8gZHJ1Z3MuIFBvbG94YW1lcnMgYXJlIGFsc28gdXNlZCBmb3IgdGhlIG1vZGlmaWNhdGlvbiBvZiBoeWRyb3Bob2JpYyB0aXNzdWUtZW5naW5lZXJlZCBjb25zdHJ1Y3RzLiBUaGlzIGFydGljbGUgY29sbGVjdHMgdGhlIHJlY2VudCBhZHZhbmNlcyBpbiBkZXNpZ24gYW5kIGFwcGxpY2F0aW9uIG9mIHBvbG94YW1lci1iYXNlZCBiaW9tYXRlcmlhbHMgaW4gdGlzc3VlIGVuZ2luZWVyaW5nLCBkcnVnL2dlbmUgZGVsaXZlcnksIHRoZXJhbm9zdGljIGRldmljZXMsIGFuZCBiaW9pbmtzIGZvciAzRCBwcmludGluZy4gU3RhdGVtZW50IG9mIFNpZ25pZmljYW5jZSBQb2xveGFtZXJzLCBhbHNvIGNhbGxlZCBQbHVyb25pYywgYmVsb25nIHRvIGEgdW5pcXVlIGNsYXNzIG9mIHN5bnRoZXRpYyB0cmktYmxvY2sgY29wb2x5bWVycyBjb250YWluaW5nIGNlbnRyYWwgaHlkcm9waG9iaWMgY2hhaW5zIG9mIHBvbHkocHJvcHlsZW5lIG94aWRlKSBzYW5kd2ljaGVkIGJldHdlZW4gdHdvIGh5ZHJvcGhpbGljIGNoYWlucyBvZiBwb2x5KGV0aHlsZW5lIG94aWRlKS4gVGhlIG1pY3Jvc3RydWN0dXJlLCBiaW9hY3Rpdml0eSwgYW5kIG1lY2hhbmljYWwgcHJvcGVydGllcyBvZiBwb2xveGFtZXJzIGNhbiBiZSB0YWlsb3JlZCB0byBtaW1pYyB0aGUgYmVoYXZpb3Igb2YgdmFyaW91cyB0eXBlcyBvZiB0aXNzdWVzLiBNb3Jlb3ZlciwgdGhlaXIgYW1waGlwaGlsaWMgbmF0dXJlIGFuZCB0aGUgcG90ZW50aWFsIHRvIHNlbGYtYXNzZW1ibGUgaW50byB0aGUgbWljZWxsZXMgbWFrZSB0aGVtIHByb21pc2luZyBkcnVnIGNhcnJpZXJzIHdpdGggdGhlIGFiaWxpdHkgdG8gaW1wcm92ZSB0aGUgZHJ1ZyBhdmFpbGFiaWxpdHkgdG8gbWFrZSBjYW5jZXIgY2VsbHMgbW9yZSB2dWxuZXJhYmxlIHRvIGRydWdzLiBIb3dldmVyLCBubyByZXBvcnRzIGhhdmUgc3lzdGVtYXRpY2FsbHkgcmV2aWV3ZWQgdGhlIGNyaXRpY2FsIHJvbGUgb2YgcG9sb3hhbWVyIGZvciBiaW9tZWRpY2FsIGFwcGxpY2F0aW9ucy4gUmVzZWFyY2ggb24gcG9sb3hhbWVycyBpcyBncm93aW5nIHRvZGF5IG9wZW5pbmcgbmV3IHNjZW5hcmlvcyB0aGF0IGV4cGFuZCB0aGUgcG90ZW50aWFsIG9mIHRoZXNlIGJpb21hdGVyaWFscyBmcm9tIFwidHJhZGl0aW9uYWxcIiB0cmVhdG1lbnRzIHRvIGEgbmV3IGVyYSBvZiB0aXNzdWUgZW5naW5lZXJpbmcuIFRvIHRoZSBiZXN0IG9mIG91ciBrbm93bGVkZ2UsIHRoaXMgaXMgdGhlIGZpcnN0IHJldmlldyBhcnRpY2xlIGluIHdoaWNoIHN1Y2ggaXNzdWUgaXMgc3lzdGVtYXRpY2FsbHkgcmV2aWV3ZWQgYW5kIGNyaXRpY2FsbHkgZGlzY3Vzc2VkIGluIHRoZSBsaWdodCBvZiB0aGUgZXhpc3RpbmcgbGl0ZXJhdHVyZS4gVW5kb3VidGVkbHksIGludmVzdGlnYXRpb25zIG9uIHRoZSB1c2Ugb2YgcG9sb3hhbWVyIGJpb21hdGVyaWFscyBuZWVkcyBmdXJ0aGVyIGFkdmFuY2VtZW50IGFuZCBhIGxvdCBvZiBjcml0aWNhbCBxdWVzdGlvbnMgaGF2ZSB5ZXQgdG8gYmUgYW5zd2VyZWQuIEhlcmVpbiwgd2UgaW50cm9kdWNlIHRoZSBzYWxpZW50IGZlYXR1cmVzLCB0aGUgaHVyZGxlcyB0aGF0IG11c3QgYmUgb3ZlcmNvbWUsIHRoZSBob3BlcyBhbmQgcHJhY3RpY2FsIGNvbnN0cmFpbnRzIGludG8gZnVydGhlciBkZXZlbG9wbWVudHMuIiwiZXhlY0NvbmZpZ0lkIjo3NzIxLCJpc1Jldmlld2VkIjpmYWxzZSwiY29tbWVudCI6bnVsbCwiaXNBdHRhY2htZW50IjpmYWxzZSwic2lnbmFsIjpbXX0seyJpZCI6NzkwNiwiYWxlcnROYW1lIjoiTGl0UGVyZjEiLCJwcmlvcml0eSI6eyJ2YWx1ZSI6IlVyZ2VudCIsImljb25DbGFzcyI6Im1kaSBtZGktYWxwaGEtdS1jaXJjbGUgcmVkLTEifSwidGl0bGUiOiJBdXRvbWF0ZWQgQ2VsbC1GcmVlIE11bHRpcHJvdGVpbiBTeW50aGVzaXMgRmFjaWxpdGF0ZXMgdGhlIElkZW50aWZpY2F0aW9uIG9mIGEgU2VjcmV0b3J5LCBPbGlnb3BlcHRpZGUgRWxpY2l0b3ItTGlrZSwgSW1tdW5vcmVhY3RpdmUgUHJvdGVpbiBvZiB0aGUgT29teWNldGUgUHl0aGl1bSBpbnNpZGlvc3VtLiIsImF1dGhvcnMiOiJbUGF0dGFyYW5hLCBTYWUtQ2hld11bVGhpZGFyYXQsIFJ1amlyYXdhdF1bWW90aGluLCBLdW1zYW5nXVtQZW5wYW4sIFBheWF0dGlrdWxdW1Rhc3NhbmVlLCBMb2hub29dW1dhbnRhLCBZaW5neW9uZ11bQ2hhbGlzYSwgSmF0dXJhcGFrdHJhcmFrXVtUaXdhLCBSb3RjaGFuYXByZWVkYV1bT25yYXBhaywgUmVhbXRvbmddW1RhbmF3dXQsIFNyaXN1a11bV2VlcmF5dXRoLCBLaXR0aWNob3RpcmF0XVtUaGVlcmFwb25nLCBLcmFqYWVqdW5dIiwiYXNzaWduZWRUbyI6eyJpZCI6NzQzNSwiZnVsbE5hbWUiOiJiaGFneWEiLCJ1c2VybmFtZSI6ImJoYWd5YSIsImVtYWlsIjoiTlIuQmhhZ3lhbGFrc2htaUByeGxvZ2l4LmNvbSJ9LCJwdWJsaWNhdGlvbkRhdGUiOiIxMi1NYXktMjAyMCIsImRpc3Bvc2l0aW9uIjoiTmV3IiwicHJvZHVjdE5hbWUiOiJXSE8tRElBTUlDUk9OIE1SIiwiZXZlbnROYW1lIjpudWxsLCJhY3Rpb25Db3VudCI6MCwiaXNWYWxpZGF0aW9uU3RhdGVBY2hpZXZlZCI6ZmFsc2UsImFsZXJ0VGFncyI6W10sImFsZXJ0Q29uZmlnSWQiOjc2OTAsImFydGljbGVJZCI6IjMyMzk4Mjc2IiwiYXJ0aWNsZUFic3RyYWN0IjoiUHJvdGVpbiBwcm9kdWN0aW9uIHJlbGllcyBvbiB0aW1lLWNvbnN1bWluZyBnZW5ldGljIGVuZ2luZWVyaW5nIGFuZCBpbiB2aXZvIGV4cHJlc3Npb24sIHdoaWNoIGlzIGEgYm90dGxlbmVjayBmb3IgZnVuY3Rpb25hbCBzdHVkaWVzIGluIHRoZSBwb3N0Z2Vub21pYyBlcmEuIENlbGwtZnJlZSBwcm90ZWluIHN5bnRoZXNpcyAoQ0ZQUykgb3ZlcmNvbWVzIHRoZSBsaW1pdGF0aW9uIG9mIGluIHZpdm8gcHJvdGVpbiBiaW9zeW50aGVzaXMgYnkgcHJvY2Vzc2luZyBpbiB2aXRybyB0cmFuc2NyaXB0aW9uIGFuZCB0cmFuc2xhdGlvbiBvZiBtdWx0aXBsZSBnZW5lcyB0byBwcm90ZWlucyB3aXRoaW4gaG91cnMuIFdlIGVtcGxveWVkIGFuIGF1dG9tYXRlZCBDRlBTIHRvIHNpbXVsdGFuZW91c2x5IHN5bnRoZXNpemUgcHJvdGVpbnMgZnJvbSAyNCBnZW5lcyBvZiB0aGUgb29teWNldGUgUHl0aGl1bSBpbnNpZGlvc3VtICh3aGljaCBjYXVzZXMgdGhlIGxpZmUtdGhyZWF0ZW5pbmcgZGlzZWFzZSBweXRoaW9zaXMpIGFuZCBzY3JlZW4gZm9yIGEgZGlhZ25vc3RpYyBhbmQgdGhlcmFwZXV0aWMgdGFyZ2V0LiBDRlBTIHN1Y2Nlc3NmdWxseSBzeW50aGVzaXplZCAxOCBwcm90ZWlucyAo4oi8NzUlIHN1Y2Nlc3MgcmF0ZSkuIE9uZSBwcm90ZWluLCBuYW1lbHksIEkwNiwgd2FzIGV4cGxpY2l0bHkgcmVjb2duaXplZCBieSBhbGwgcHl0aGlvc2lzIHNlcmEsIGJ1dCBub3QgY29udHJvbCBzZXJhLCB0ZXN0ZWQuIFB5LiBpbnNpZGlvc3VtIHNlY3JldGVkIGEgc2lnbmlmaWNhbnQgYW1vdW50IG9mIEkwNi4gVGhlIHByb3RlaW4gYXJjaGl0ZWN0dXJlIG9mIEkwNiBpcyBjb21wYXRpYmxlIHdpdGggdGhlIG9saWdvcGVwdGlkZSBlbGljaXRvciAoT1BFTCkgb2YgdGhlIHBoeWxvZ2VuZXRpY2FsbHkgcmVsYXRlZCBwbGFudC1wYXRob2dlbmljIG9vbXljZXRlIFBoeXRvcGh0aG9yYSBwYXJhc2l0aWNhIFRoZSBPUEVMLWxpa2UgSTA2IHByb3RlaW4gb2YgUHkuIGluc2lkaW9zdW0gY2FuIHN0aW11bGF0ZSBob3N0IGFudGlib2R5IHJlc3BvbnNlcywgc2ltaWxhciB0byB0aGUgUC4gcGFyYXNpdGljYSBPUEVMIHRoYXQgdHJpZ2dlcnMgcGxhbnQgZGVmZW5zZSBtZWNoYW5pc21zLiBPUEVMLWxpa2UgSTA2IGhvbW9sb2dzIGFyZSBwcmVzZW50IG9ubHkgaW4gdGhlIG9vbXljZXRlcy4gUHkuIGluc2lkaW9zdW0gY29udGFpbnMgdHdvIE9QRUwtbGlrZSBJMDYgaG9tb2xvZ3MsIGJ1dCBvbmx5IG9uZSBvZiB0aGUgdHdvIGhvbW9sb2dzIHdhcyBleHByZXNzZWQgZHVyaW5nIGh5cGhhbCBncm93dGguIFR3ZW50eS1uaW5lIGhvbW9sb2dzIGRlcml2ZWQgZnJvbSAxNSBvb215Y2V0ZXMgY2FuIGJlIHBoeWxvZ2VuZXRpY2FsbHkgZGl2aWRlZCBpbnRvIHR3byBncm91cHMuIFRoZSBPUEVMLWxpa2UgZ2VuZXMgbWlnaHQgb2NjdXIgaW4gdGhlIGNvbW1vbiBhbmNlc3RvciwgYmVmb3JlIGluZGVwZW5kZW50bHkgdW5kZXJnb2luZyBnZW5lIGdhaW4gYW5kIGxvc3MgZHVyaW5nIHRoZSBvb215Y2V0ZSBzcGVjaWF0aW9uLiBJbiBjb25jbHVzaW9uLCBDRlBTIG9mZmVycyBhIGZhc3QgaW4gdml0cm8gcHJvdGVpbiBzeW50aGVzaXMuIENGUFMgc2ltdWx0YW5lb3VzbHkgZ2VuZXJhdGVkIG11bHRpcGxlIHByb3RlaW5zIG9mIFB5LiBpbnNpZGlvc3VtIGFuZCBmYWNpbGl0YXRlZCB0aGUgaWRlbnRpZmljYXRpb24gb2YgdGhlIHNlY3JldG9yeSBPUEVMLWxpa2UgSTA2IHByb3RlaW4sIGEgcG90ZW50aWFsIHRhcmdldCBmb3IgdGhlIGRldmVsb3BtZW50IG9mIGEgY29udHJvbCBtZWFzdXJlIGFnYWluc3QgdGhlIHBhdGhvZ2VuLklNUE9SVEFOQ0UgVGVjaG5pY2FsIGxpbWl0YXRpb25zIG9mIGNvbnZlbnRpb25hbCBiaW90ZWNobm9sb2dpY2FsIG1ldGhvZHMgKGkuZS4sIGdlbmV0aWMgZW5naW5lZXJpbmcgYW5kIHByb3RlaW4gc3ludGhlc2lzKSBwcmV2ZW50IGV4dGVuc2l2ZSBmdW5jdGlvbmFsIHN0dWRpZXMgb2YgdGhlIG1hc3NpdmUgYW1vdW50cyBvZiBnZW5ldGljIGluZm9ybWF0aW9uIGF2YWlsYWJsZSB0b2RheS4gV2UgZW1wbG95ZWQgYSBjZWxsLWZyZWUgcHJvdGVpbiBzeW50aGVzaXMgc3lzdGVtIHRvIHJhcGlkbHkgYW5kIHNpbXVsdGFuZW91c2x5IGdlbmVyYXRlIG11bHRpcGxlIHByb3RlaW5zIGZyb20gZ2VuZXRpYyBjb2RlcyBvZiB0aGUgb29teWNldGUgUHl0aGl1bSBpbnNpZGlvc3VtLCB3aGljaCBjYXVzZXMgdGhlIGxpZmUtdGhyZWF0ZW5pbmcgZGlzZWFzZSBjYWxsZWQgcHl0aGlvc2lzLCBpbiBodW1hbnMgYW5kIGFuaW1hbHMgd29ybGR3aWRlLiBXZSBhaW1lZCB0byBzY3JlZW4gZm9yIHBvdGVudGlhbCBkaWFnbm9zdGljIGFuZCB0aGVyYXBldXRpYyBwcm90ZWluIHRhcmdldHMgb2YgdGhpcyBwYXRob2dlbi4gRWlnaHRlZW4gcHJvdGVpbnMgd2VyZSBzeW50aGVzaXplZC4gT2YgdGhlIDE4IHByb3RlaW5zLCBvbmUgd2FzIGEgc2VjcmV0ZWQgaW1tdW5vcmVhY3RpdmUgcHJvdGVpbiwgY2FsbGVkIEkwNiwgdGhhdCB0cmlnZ2VyZWQgaG9zdCBpbW11bml0eSBhbmQgd2FzIHJlY29nbml6ZWQgZXhwbGljaXRseSBieSBhbGwgdGVzdGVkIHNlcmEgZnJvbSBweXRoaW9zaXMgcGF0aWVudHMuIEl0IGlzIG9uZSBvZiB0aGUgT1BFTCBwcm90ZWluczsgdGhlc2UgcHJvdGVpbnMgYXJlIHByZXNlbnQgb25seSBpbiB0aGUgdW5pcXVlIGdyb3VwIG9mIG1pY3Jvb3JnYW5pc21zIGNhbGxlZCBvb215Y2V0ZXMuIEhlcmUsIHdlIGRlbW9uc3RyYXRlZCB0aGF0IGNlbGwtZnJlZSBwcm90ZWluIHN5bnRoZXNpcyB3YXMgdXNlZnVsIGZvciB0aGUgcHJvZHVjdGlvbiBvZiBtdWx0aXBsZSBwcm90ZWlucyB0byBmYWNpbGl0YXRlIGZ1bmN0aW9uYWwgc3R1ZGllcyBhbmQgaWRlbnRpZnkgYSBwb3RlbnRpYWwgdGFyZ2V0IGZvciBkaWFnbm9zaXMgYW5kIHRyZWF0bWVudCBvZiBweXRoaW9zaXMuIiwiZXhlY0NvbmZpZ0lkIjo3NzIxLCJpc1Jldmlld2VkIjpmYWxzZSwiY29tbWVudCI6bnVsbCwiaXNBdHRhY2htZW50IjpmYWxzZSwic2lnbmFsIjpbXX0seyJpZCI6ODAwOCwiYWxlcnROYW1lIjoiTGl0UGVyZjEiLCJwcmlvcml0eSI6eyJ2YWx1ZSI6IlVyZ2VudCIsImljb25DbGFzcyI6Im1kaSBtZGktYWxwaGEtdS1jaXJjbGUgcmVkLTEifSwidGl0bGUiOiJUYXJnZXQgUHJvZHVjdCBQcm9maWxlcyBmb3IgbWVkaWNhbCB0ZXN0czogYSBzeXN0ZW1hdGljIHJldmlldyBvZiBjdXJyZW50IG1ldGhvZHMuIiwiYXV0aG9ycyI6IltQYW9sYSwgQ29jY29dW0FuYW0sIEF5YXotU2hhaF1bTWljaGFlbCBQYXVsLCBNZXNzZW5nZXJdW1JvYmVydCBNaWNoYWVsLCBXZXN0XVtCZXRoYW55LCBTaGlua2luc10iLCJhc3NpZ25lZFRvIjp7ImlkIjo3NDM1LCJmdWxsTmFtZSI6ImJoYWd5YSIsInVzZXJuYW1lIjoiYmhhZ3lhIiwiZW1haWwiOiJOUi5CaGFneWFsYWtzaG1pQHJ4bG9naXguY29tIn0sInB1YmxpY2F0aW9uRGF0ZSI6IjExLU1heS0yMDIwIiwiZGlzcG9zaXRpb24iOiJOZXciLCJwcm9kdWN0TmFtZSI6IldITy1ESUFNSUNST04gTVIiLCJldmVudE5hbWUiOm51bGwsImFjdGlvbkNvdW50IjowLCJpc1ZhbGlkYXRpb25TdGF0ZUFjaGlldmVkIjpmYWxzZSwiYWxlcnRUYWdzIjpbXSwiYWxlcnRDb25maWdJZCI6NzY5MCwiYXJ0aWNsZUlkIjoiMzIzODkxMjciLCJhcnRpY2xlQWJzdHJhY3QiOiJBIFRhcmdldCBQcm9kdWN0IFByb2ZpbGUgKFRQUCkgb3V0bGluZXMgdGhlIG5lY2Vzc2FyeSBjaGFyYWN0ZXJpc3RpY3Mgb2YgYW4gaW5ub3ZhdGl2ZSBwcm9kdWN0IHRvIGFkZHJlc3MgYW4gdW5tZXQgY2xpbmljYWwgbmVlZC4gVFBQcyBjb3VsZCBiZSB1c2VkIHRvIGJldHRlciBndWlkZSBtYW51ZmFjdHVyZXJzIGluIHRoZSBkZXZlbG9wbWVudCBvZiAnZml0IGZvciBwdXJwb3NlJyB0ZXN0cywgdGh1cyBpbmNyZWFzaW5nIHRoZSBsaWtlbGlob29kIHRoYXQgbm92ZWwgdGVzdHMgd2lsbCBwcm9ncmVzcyBmcm9tIGJlbmNoIHRvIGJlZHNpZGUuIEhvd2V2ZXIsIHRoZXJlIGlzIGN1cnJlbnRseSBubyBndWlkYW5jZSBvbiBob3cgdG8gcHJvZHVjZSBhIFRQUCBzcGVjaWZpY2FsbHkgZm9yIG1lZGljYWwgdGVzdHMuQSBzeXN0ZW1hdGljIHJldmlldyB3YXMgY29uZHVjdGVkIHRvIHN1bW1hcmlzZSB0aGUgbWV0aG9kcyBjdXJyZW50bHkgdXNlZCB0byBkZXZlbG9wIFRQUHMgZm9yIG1lZGljYWwgdGVzdHMsIHRoZSBzb3VyY2VzIHVzZWQgdG8gaW5mb3JtIHRoZXNlIHJlY29tbWVuZGF0aW9ucyBhbmQgdGhlIHRlc3QgY2hhcmFjdGVyaXN0aWNzIGZvciB3aGljaCB0YXJnZXRzIGFyZSBtYWRlLiBEYXRhYmFzZSBhbmQgd2Vic2l0ZSBzZWFyY2hlcyB3ZXJlIGNvbmR1Y3RlZCBpbiBOb3ZlbWJlciAyMDE4LiBUUFBzIHdyaXR0ZW4gaW4gRW5nbGlzaCBmb3IgYW55IG1lZGljYWwgdGVzdCB3ZXJlIGluY2x1ZGVkLiBCYXNlZCBvbiBhbiBleGlzdGluZyBmcmFtZXdvcmssIHRlc3QgY2hhcmFjdGVyaXN0aWNzIHdlcmUgY2x1c3RlcmVkIGludG8gY29tbW9ubHkgcmVjb2duaXNlZCB0aGVtZXMuRm9ydHktZm91ciBUUFBzIHdlcmUgaWRlbnRpZmllZCwgYWxsIG9mIHdoaWNoIGZvY3VzZWQgb24gZGlhZ25vc3RpYyB0ZXN0cyBmb3IgaW5mZWN0aW91cyBkaXNlYXNlcy4gVGhyZWUgY29yZSBkZWNpc2lvbi1tYWtpbmcgcGhhc2VzIGZvciBkZXZlbG9waW5nIFRQUHMgd2VyZSBpZGVudGlmaWVkOiBzY29waW5nLCBkcmFmdGluZyBhbmQgY29uc2Vuc3VzLWJ1aWxkaW5nLiBDb25zdWx0YXRpb25zIHdpdGggZXhwZXJ0cyBhbmQgdGhlIGxpdGVyYXR1cmUgbW9zdGx5IGluZm9ybWVkIHRoZSBzY29waW5nIGFuZCBkcmFmdGluZyBvZiBUUFBzLiBBbGwgVFBQcyBwcm92aWRlZCBpbmZvcm1hdGlvbiBvbiB1bm1ldCBjbGluaWNhbCBuZWVkIGFuZCBkZXNpcmFibGUgYW5hbHl0aWNhbCBwZXJmb3JtYW5jZSwgYW5kIHRoZSBtYWpvcml0eSBzcGVjaWZpZWQgY2xpbmljYWwgdmFsaWRpdHkgY2hhcmFjdGVyaXN0aWNzLiBGZXcgVFBQcyBkZXNjcmliZWQgc3BlY2lmaWNhdGlvbnMgZm9yIGNsaW5pY2FsIHV0aWxpdHksIGFuZCBub25lIGluY2x1ZGVkIGNvc3QtZWZmZWN0aXZlbmVzcy5XZSBoYXZlIGlkZW50aWZpZWQgYSBjb21tb25seSB1c2VkIGZyYW1ld29yayB0aGF0IGNvdWxkIGJlIGJlbmVmaWNpYWwgZm9yIGFueW9uZSBpbnRlcmVzdGVkIGluIGRyYWZ0aW5nIGEgVFBQIGZvciBhIG1lZGljYWwgdGVzdC4gQ3VycmVudGx5LCBrZXkgb3V0Y29tZXMgc3VjaCBhcyB1dGlsaXR5IGFuZCBjb3N0LWVmZmVjdGl2ZW5lc3MgYXJlIGxhcmdlbHkgb3Zlcmxvb2tlZCB3aXRoaW4gVFBQcyB0aG91Z2ggYW5kIHdlIGZvcmVzZWUgdGhpcyBhcyBhbiBhcmVhIGZvciBmdXJ0aGVyIGltcHJvdmVtZW50LiIsImV4ZWNDb25maWdJZCI6NzcyMSwiaXNSZXZpZXdlZCI6ZmFsc2UsImNvbW1lbnQiOm51bGwsImlzQXR0YWNobWVudCI6ZmFsc2UsInNpZ25hbCI6W119LHsiaWQiOjgwMDIsImFsZXJ0TmFtZSI6IkxpdFBlcmYxIiwicHJpb3JpdHkiOnsidmFsdWUiOiJVcmdlbnQiLCJpY29uQ2xhc3MiOiJtZGkgbWRpLWFscGhhLXUtY2lyY2xlIHJlZC0xIn0sInRpdGxlIjoiTXVsdGktcGFyYW1ldHJpYyBsaXZlciB0aXNzdWUgY2hhcmFjdGVyaXphdGlvbiB1c2luZyBNUiBmaW5nZXJwcmludGluZzogU2ltdWx0YW5lb3VzIFQxICwgVDIgLCBUMuKIlyAsIGFuZCBmYXQgZnJhY3Rpb24gbWFwcGluZy4iLCJhdXRob3JzIjoiW09saXZpZXIsIEphdWJlcnRdW0NyaXN0b2JhbCwgQXJyaWV0YV1bR2FzdMOjbywgQ3J1el1bQXVyw6lsaWVuLCBCdXN0aW5dW1RvcmJlbiwgU2NobmVpZGVyXVtHZW9yZ2lvcywgR2Vvcmdpb3BvdWxvc11bUGllci1HaW9yZ2lvLCBNYXNjaV1bQ2FybG9zLCBTaW5nLUxvbmddW1JlbmUgTSwgQm90bmFyXVtDbGF1ZGlhLCBQcmlldG9dIiwiYXNzaWduZWRUbyI6eyJpZCI6NzQzNSwiZnVsbE5hbWUiOiJiaGFneWEiLCJ1c2VybmFtZSI6ImJoYWd5YSIsImVtYWlsIjoiTlIuQmhhZ3lhbGFrc2htaUByeGxvZ2l4LmNvbSJ9LCJwdWJsaWNhdGlvbkRhdGUiOiIxMy1NYXktMjAyMCIsImRpc3Bvc2l0aW9uIjoiTmV3IiwicHJvZHVjdE5hbWUiOiJXSE8tRElBTUlDUk9OIE1SIiwiZXZlbnROYW1lIjpudWxsLCJhY3Rpb25Db3VudCI6MCwiaXNWYWxpZGF0aW9uU3RhdGVBY2hpZXZlZCI6ZmFsc2UsImFsZXJ0VGFncyI6W10sImFsZXJ0Q29uZmlnSWQiOjc2OTAsImFydGljbGVJZCI6IjMyNDA2MTI1IiwiYXJ0aWNsZUFic3RyYWN0IjoiUXVhbnRpdGF0aXZlIFQxICwgVDIgLCBUMuKIlyAsIGFuZCBmYXQgZnJhY3Rpb24gKEZGKSBtYXBzIGFyZSBwcm9taXNpbmcgaW1hZ2luZyBiaW9tYXJrZXJzIGZvciB0aGUgYXNzZXNzbWVudCBvZiBsaXZlciBkaXNlYXNlLCBob3dldmVyIHRoZXNlIGFyZSB1c3VhbGx5IGFjcXVpcmVkIGluIHNlcXVlbnRpYWwgc2NhbnMuIEhlcmUgd2UgcHJvcG9zZSBhbiBleHRlbmRlZCBNUiBmaW5nZXJwcmludGluZyAoTVJGKSBmcmFtZXdvcmsgZW5hYmxpbmcgc2ltdWx0YW5lb3VzIGxpdmVyIFQxICwgVDIgLCBUMuKIlyAsIGFuZCBGRiBtYXBwaW5nIGZyb20gYSBzaW5nbGUgfjE0wqBzIGJyZWF0aC1ob2xkIHNjYW4uQSBncmFkaWVudCBlY2hvIChHUkUpIGxpdmVyIE1SRiBzZXF1ZW5jZSB3aXRoIG5pbmUgcmVhZG91dHMgcGVyIFRSLCBsb3cgZmxpcCBhbmdsZXMgKDUtMTXCsCksIHZhcnlpbmcgbWFnbmV0aXNhdGlvbiBwcmVwYXJhdGlvbiBhbmQgZ29sZGVuIGFuZ2xlIHJhZGlhbCB0cmFqZWN0b3J5IGlzIGFjcXVpcmVkIGF0IDEuNVQgdG8gZW5jb2RlIFQxICwgVDIgLCBUMuKIlyAsIGFuZCBGRiBzaW11bHRhbmVvdXNseS4gVGhlIG5pbmUtZWNobyB0aW1lLXNlcmllcyBhcmUgcmVjb25zdHJ1Y3RlZCB1c2luZyBhIGxvdy1yYW5rIHRlbnNvciBjb25zdHJhaW5lZCByZWNvbnN0cnVjdGlvbiBhbmQgdXNlZCB0byBmaXQgVDLiiJcgLCBCMCBhbmQgdG8gc2VwYXJhdGUgdGhlIHdhdGVyIGFuZCBmYXQgc2lnbmFscy4gV2F0ZXItIGFuZCBmYXQtc3BlY2lmaWMgVDEgLCBUMiwgYW5kIE0wIGFyZSBvYnRhaW5lZCB0aHJvdWdoIGRpY3Rpb25hcnkgbWF0Y2hpbmcsIHdoZXJlYXMgRkYgZXN0aW1hdGlvbiBpcyBleHRyYWN0ZWQgZnJvbSB0aGUgTTAgbWFwcy4gVGhlIGZyYW1ld29yayB3YXMgZXZhbHVhdGVkIGluIGEgc3RhbmRhcmRpemVkIFQxIC9UMiBwaGFudG9tLCBhIHdhdGVyLWZhdCBwaGFudG9tLCBhbmQgMTIgc3ViamVjdHMgaW4gY29tcGFyaXNvbiB0byByZWZlcmVuY2UgbWV0aG9kcy4gUHJlbGltaW5hcnkgY2xpbmljYWwgZmVhc2liaWxpdHkgaXMgc2hvd24gaW4gZm91ciBwYXRpZW50cy5UaGUgcHJvcG9zZWQgd2F0ZXIgVDEgLCB3YXRlciBUMiAsIFQy4oiXICwgYW5kIEZGIG1hcHMgaW4gcGhhbnRvbXMgc2hvd2VkIGhpZ2ggY29lZmZpY2llbnRzIG9mIGRldGVybWluYXRpb24gKHIyID4gMC45NykgcmVsYXRpdmUgdG8gcmVmZXJlbmNlIG1ldGhvZHMuIE1lYXN1cmVkIGxpdmVyIE1SRiB2YWx1ZXMgaW4gdml2byAobWVhbiDCsSBTRCkgZm9yIFQxICwgVDIgLCBUMuKIlyAsIGFuZCBGRiB3ZXJlIDY3MSDCsSA2MMKgbXMsIDQzLjIgwrEgNi44wqBtcywgMjkgwrEgNi42wqBtcywgYW5kIDMuMiDCsSAyLjYlIHdpdGggYmlhc2VzIG9mIDkywqBtcywgLTcuMcKgbXMsIC0xLjTCoG1zLCBhbmQgMC42MyUgd2hlbiBjb21wYXJlZCB0byBjb252ZW50aW9uYWwgbWV0aG9kcy5BIG5pbmUtZWNobyBsaXZlciBNUkYgc2VxdWVuY2UgYWxsb3dzIGZvciBxdWFudGl0YXRpdmUgbXVsdGktcGFyYW1ldHJpYyBsaXZlciB0aXNzdWUgY2hhcmFjdGVyaXphdGlvbiBpbiBhIHNpbmdsZSBicmVhdGgtaG9sZCBzY2FuIG9mIH4xNMKgcy4gRnV0dXJlIHdvcmsgd2lsbCBhaW0gdG8gdmFsaWRhdGUgdGhlIHByb3Bvc2VkIGFwcHJvYWNoIGluIHBhdGllbnRzIHdpdGggbGl2ZXIgZGlzZWFzZS4iLCJleGVjQ29uZmlnSWQiOjc3MjEsImlzUmV2aWV3ZWQiOmZhbHNlLCJjb21tZW50IjpudWxsLCJpc0F0dGFjaG1lbnQiOmZhbHNlLCJzaWduYWwiOltdfV0sImZpbHRlcnMiOlt7InZhbHVlIjoiTmV3IiwiY2xvc2VkIjpmYWxzZSwiaXNDbG9zZWQiOmZhbHNlfV19</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
      <TcpPackets>
        <PacketInfo time="119681640" offset="0" length="4096" />
        <PacketInfo time="119681656" offset="4096" length="16384" />
        <PacketInfo time="119681656" offset="20480" length="16384" />
        <PacketInfo time="119681671" offset="36864" length="16384" />
        <PacketInfo time="119681687" offset="53248" length="16384" />
        <PacketInfo time="119681687" offset="69632" length="16384" />
        <PacketInfo time="119681703" offset="86016" length="16384" />
        <PacketInfo time="119681703" offset="102400" length="16384" />
        <PacketInfo time="119681718" offset="118784" length="6650" />
      </TcpPackets>
    </HTTPResponse>
  </HTTPTask>
</HTTPSnapshot>