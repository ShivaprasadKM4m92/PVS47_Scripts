<?xml version="1.0" encoding="utf-8"?>
<HTTPSnapshot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="166">
  <HTTPTask id="832" hostname="10.100.22.24:8181" path="/signal/assets/dygraphs/dygraph.min-0e7f2a89b8c55e6f5dd35fc29aeb0795.js" url="http://10.100.22.24:8181/signal/assets/dygraphs/dygraph.min-0e7f2a89b8c55e6f5dd35fc29aeb0795.js" ip="10.100.22.24" port="8181" connectionId="27" origin="Primary" frame="1" startDateTime="2020-05-25T16:45:47.815+05:30" startTime="9189875" endTime="9190734">
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="Host" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MTAuMTAwLjIyLjI0OjgxODE=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzgxLjAuNDA0NC4xMzggU2FmYXJpLzUzNy4zNg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ki8q</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Referer" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cDovLzEwLjEwMC4yMi4yNDo4MTgxL3NpZ25hbC92YWxpZGF0ZWRTaWduYWwvZGV0YWlscz9pZD04NDc5</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZW4tVVMsZW47cT0wLjk=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cookie" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>U0VTU0lPTj04NjVkZTBjYy1iMmY3LTRlMGMtYjYzNC1kZDQ3ODE3ZmY5YTE=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIC9zaWduYWwvYXNzZXRzL2R5Z3JhcGhzL2R5Z3JhcGgubWluLTBlN2YyYTg5YjhjNTVlNmY1ZGQzNWZjMjlhZWIwNzk1LmpzIEhUVFAvMS4xDQpIb3N0OiAxMC4xMDAuMjIuMjQ6ODE4MQ0KQ29ubmVjdGlvbjoga2VlcC1hbGl2ZQ0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzgxLjAuNDA0NC4xMzggU2FmYXJpLzUzNy4zNg0KQWNjZXB0OiAqLyoNClJlZmVyZXI6IGh0dHA6Ly8xMC4xMDAuMjIuMjQ6ODE4MS9zaWduYWwvdmFsaWRhdGVkU2lnbmFsL2RldGFpbHM/aWQ9ODQ3OQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTLGVuO3E9MC45DQpDb29raWU6IFNFU1NJT049ODY1ZGUwY2MtYjJmNy00ZTBjLWI2MzQtZGQ0NzgxN2ZmOWExDQoNCg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
        <HTTPCookies>
          <HTTPHeaderEntity name="SESSION" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ODY1ZGUwY2MtYjJmNy00ZTBjLWI2MzQtZGQ0NzgxN2ZmOWEx</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
        </HTTPCookies>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <contentLenght>36867</contentLenght>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Last-Modified" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VGh1LCAyMSBNYXkgMjAyMCAwODoxNjo1MiBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="ETag" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ImR5Z3JhcGhzL2R5Z3JhcGgubWluLTBlN2YyYTg5YjhjNTVlNmY1ZGQzNWZjMjlhZWIwNzk1LmpzIg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Vary" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>QWNjZXB0LUVuY29kaW5n</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cache-Control" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>cHVibGljLCBtYXgtYWdlPTMxNTM2MDAw</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Encoding" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXBwbGljYXRpb24vamF2YXNjcmlwdDtjaGFyc2V0PVVURi04</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Length" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MzY4Njc=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW9uLCAyNSBNYXkgMjAyMCAxMToxMDoxMSBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIA0KTGFzdC1Nb2RpZmllZDogVGh1LCAyMSBNYXkgMjAyMCAwODoxNjo1MiBHTVQNCkVUYWc6ICJkeWdyYXBocy9keWdyYXBoLm1pbi0wZTdmMmE4OWI4YzU1ZTZmNWRkMzVmYzI5YWViMDc5NS5qcyINClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KQ2FjaGUtQ29udHJvbDogcHVibGljLCBtYXgtYWdlPTMxNTM2MDAwDQpDb250ZW50LUVuY29kaW5nOiBnemlwDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2phdmFzY3JpcHQ7Y2hhcnNldD1VVEYtOA0KQ29udGVudC1MZW5ndGg6IDM2ODY3DQpEYXRlOiBNb24sIDI1IE1heSAyMDIwIDExOjEwOjExIEdNVA0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData></ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
      <TcpPackets>
        <PacketInfo time="9190734" offset="0" length="8192" />
        <PacketInfo time="9190734" offset="8192" length="16384" />
        <PacketInfo time="9190750" offset="24576" length="12620" />
      </TcpPackets>
    </HTTPResponse>
    <HTTPTask id="836" hostname="10.100.22.24:8181" path="/signal/assets/solid-gauge.js.js" url="http://10.100.22.24:8181/signal/assets/solid-gauge.js.js" ip="10.100.22.24" port="8181" connectionId="34" origin="HTML" frame="1" startDateTime="2020-05-25T16:45:47.848+05:30" startTime="9190593" endTime="9190937">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Host" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MTAuMTAwLjIyLjI0OjgxODE=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Connection" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzgxLjAuNDA0NC4xMzggU2FmYXJpLzUzNy4zNg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cDovLzEwLjEwMC4yMi4yNDo4MTgxL3NpZ25hbC92YWxpZGF0ZWRTaWduYWwvZGV0YWlscz9pZD04NDc5</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Cookie" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U0VTU0lPTj04NjVkZTBjYy1iMmY3LTRlMGMtYjYzNC1kZDQ3ODE3ZmY5YTE=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIC9zaWduYWwvYXNzZXRzL3NvbGlkLWdhdWdlLmpzLmpzIEhUVFAvMS4xDQpIb3N0OiAxMC4xMDAuMjIuMjQ6ODE4MQ0KQ29ubmVjdGlvbjoga2VlcC1hbGl2ZQ0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzgxLjAuNDA0NC4xMzggU2FmYXJpLzUzNy4zNg0KQWNjZXB0OiAqLyoNClJlZmVyZXI6IGh0dHA6Ly8xMC4xMDAuMjIuMjQ6ODE4MS9zaWduYWwvdmFsaWRhdGVkU2lnbmFsL2RldGFpbHM/aWQ9ODQ3OQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTLGVuO3E9MC45DQpDb29raWU6IFNFU1NJT049ODY1ZGUwY2MtYjJmNy00ZTBjLWI2MzQtZGQ0NzgxN2ZmOWExDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
          <HTTPCookies>
            <HTTPHeaderEntity name="SESSION" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>ODY1ZGUwY2MtYjJmNy00ZTBjLWI2MzQtZGQ0NzgxN2ZmOWEx</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
          </HTTPCookies>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>0</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Transfer-Encoding" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Y2h1bmtlZA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW9uLCAyNSBNYXkgMjAyMCAxMToxMDoxMiBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgNDA0IA0KVHJhbnNmZXItRW5jb2Rpbmc6IGNodW5rZWQNCkRhdGU6IE1vbiwgMjUgTWF5IDIwMjAgMTE6MTA6MTIgR01UDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData />
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="9190937" offset="0" length="87" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
  </HTTPTask>
</HTTPSnapshot>